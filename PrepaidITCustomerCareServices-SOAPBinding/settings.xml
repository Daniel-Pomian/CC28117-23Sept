<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="876e2de8-b46c-4e07-a6e1-cf3cca7aef05" wsaVersion="200508" name="PrepaidITCustomerCareServices-SOAPBinding" type="wsdl" bindingName="{urn:tefo2de:PrepaidITCustomerCareServices}PrepaidITCustomerCareServices-SOAPBinding" soapVersion="1_1" anonymous="optional" definition="../WSDLs/PPIT/prepaiditcustomercareservices.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="876e2de8-b46c-4e07-a6e1-cf3cca7aef05fileName">PrepaidITCustomerCareServices-SOAPBinding</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="file:/D:/Projects/Telefonica/DirectReCharge/soapUI-NG-Pro/WSDLs/PPIT/prepaiditcustomercareservices.wsdl">
    <con:part>
      <con:url>file:/D:/Projects/Telefonica/DirectReCharge/soapUI-NG-Pro/WSDLs/PPIT/prepaiditcustomercareservices.wsdl</con:url>
      <con:content><![CDATA[<!--=======================================================================-->
<!--Project: Prepaid IT Customer Care Services-->
<!--=======================================================================-->
<wsdl:definitions xsi:schemaLocation="http://schemas.xmlsoap.org/wsdl/ http://schemas.xmlsoap.org/wsdl/" name="PrepaidITCustomerCareServices" targetNamespace="urn:tefo2de:PrepaidITCustomerCareServices" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:local="urn:tefo2de:PrepaidITCustomerCareServices" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wss="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:import namespace="urn:tefo2de:PrepaidITCustomerCareServices" location="prepaiditcustomercareservicesports.wsdl"/>
  <wsdl:types>
    <xsd:schema targetNamespace="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicestypes" elementFormDefault="qualified">
      <xsd:import namespace="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicetypes" schemaLocation="prepaiditcustomercareservicetypes.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsp:Policy wss:Id="PrepaidITCustomerCareServices_WSAddressing_policy">
    <wsam:Addressing wsp:Optional="true">
      <wsp:Policy/>
    </wsam:Addressing>
  </wsp:Policy>
  <wsdl:binding name="PrepaidITCustomerCareServices-SOAPBinding" type="local:PrepaidITCustomerCareServices-Port">
    <wsp:PolicyReference URI="#PrepaidITCustomerCareServices_WSAddressing_policy"/>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAccountBalance">
      <wsdl:documentation>Clients can retrieve the customer's Account balance using this service</wsdl:documentation>
      <soap:operation soapAction="getAccountBalance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetAccount">
      <wsdl:documentation>Clients can reset the complete account information so that they can register the MSISDN again.</wsdl:documentation>
      <soap:operation soapAction="resetAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNetworkServiceStatus">
      <wsdl:documentation>Clients can retrieve the Network service status of the MSISDN</wsdl:documentation>
      <soap:operation soapAction="getNetworkServiceStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importAccountContactHistory">
      <wsdl:documentation>Clients can create the contact history to the MSISDN of the customer account</wsdl:documentation>
      <soap:operation soapAction="importAccountContactHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="exportAccountContactHistory">
      <wsdl:documentation>Clients can retrieve the contact history of the MSISDN for the given time frame.</wsdl:documentation>
      <soap:operation soapAction="exportAccountContactHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPackHistory">
      <wsdl:documentation>Clients can retrieve all the pack requests for the given time frame of the MSISDN of the customer.</wsdl:documentation>
      <soap:operation soapAction="getPackHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPackCounterStatus">
      <wsdl:documentation>DEPRECATED: Clients can retrieve the pack counter status of the MSISDN of the customer if any counter based
                packs are subscribed</wsdl:documentation>
      <soap:operation soapAction="getPackCounterStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSIMInfo">
      <wsdl:documentation>Clients can retrieve the SIM information of the MSISDN</wsdl:documentation>
      <soap:operation soapAction="getSIMInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyCreditDebit">
      <wsdl:documentation>Clients can credit or debit the amount to the customer. SMS will be sent to the customer to inform the
                same</wsdl:documentation>
      <soap:operation soapAction="applyCreditDebit" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortingOutStatus">
      <wsdl:documentation>Clients can retrieve the porting out status of the MSISDN of the customer.
                When a porting order has not yet been created, but a porting declaration exists,
                this method will return error code 213.
                After a porting declaration has been created, it must be polled
                if a porting order could be created in the meantime.</wsdl:documentation>
      <soap:operation soapAction="getPortingOutStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortingInStatus">
      <wsdl:documentation>Clients can retrieve the porting in order status of the MSISDN of the customer</wsdl:documentation>
      <soap:operation soapAction="getPortingInStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePortingInOrder">
      <wsdl:documentation>Clients can initiate the updation of the porting in order of the MSISDN as per the German telecommunication
                law.</wsdl:documentation>
      <soap:operation soapAction="updatePortingInOrder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelPortingInOrder">
      <wsdl:documentation>Clients can initiate the cancellation of the porting in order as per the German telecommunications law.</wsdl:documentation>
      <soap:operation soapAction="cancelPortingInOrder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelFailedPortingOutOrder">
      <wsdl:documentation>Clients can initiate the cancellation of a failed porting out order.
                If a porting order is aborted by the system (ABORTED) and the customer
                has decided not to continue the porting-out process, the order can be cancelled.
                The porting order, however, can only be cancelled if the customer has enabled
                service continuity in his or her porting declaration.</wsdl:documentation>
      <soap:operation soapAction="cancelFailedPortingOutOrder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeAccountOwner">
      <wsdl:documentation>Clients can initiate the change of owner for the MSISDN using this service.</wsdl:documentation>
      <soap:operation soapAction="changeAccountOwner" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeWhoCalledService">
      <wsdl:documentation>Clients can enable or disable the WhoCalledService settings of the customer.</wsdl:documentation>
      <soap:operation soapAction="changeWhoCalledService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="showVoiceMailboxPINStatus">
      <wsdl:documentation>Clients can retrieve the voice mail box PIN status.</wsdl:documentation>
      <soap:operation soapAction="showVoiceMailboxPINStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeVoiceMailboxPIN">
      <wsdl:documentation>Clients can initiate the change of voice mailbox PIN of the customer. If no new PIN sent as part of the
                request, then PIN will be reset.</wsdl:documentation>
      <soap:operation soapAction="changeVoiceMailboxPIN" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEGNData">
      <wsdl:documentation>Clients can retrieve the usage data of the MSISDN of the customer for a given time frame.</wsdl:documentation>
      <soap:operation soapAction="getEGNData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTopUpsAndCharges">
      <wsdl:documentation>Clients can retrieve the top ups of the customer for a given timeframe</wsdl:documentation>
      <soap:operation soapAction="getTopUpsAndCharges" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateAccount">
      <wsdl:documentation>Clients can de-register a MSISDN of the customer</wsdl:documentation>
      <soap:operation soapAction="deactivateAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="barUnbarAccount">
      <wsdl:documentation>Clients can bar or unbar account for different network services.</wsdl:documentation>
      <soap:operation soapAction="barUnbarAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeCLIPorCLIR">
      <wsdl:documentation>Clients can change CLIP/CLIR settings of the MSISDN of the customer</wsdl:documentation>
      <soap:operation soapAction="changeCLIPorCLIR" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="simValidation">
      <wsdl:documentation>Client can validate SIM and ICCID/Activation Code against MSISDN by calling this operation of webservice.</wsdl:documentation>
      <soap:operation soapAction="simValidation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCustomerData">
      <wsdl:documentation>Client can retrieve customer data against provided MSISDN by calling this operation of webservice.</wsdl:documentation>
      <soap:operation soapAction="getCustomerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeCustomerData">
      <wsdl:documentation>Client can change customer data against provided MSISDN by calling this operation of webservice.</wsdl:documentation>
      <soap:operation soapAction="changeCustomerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPartnerBenefitPack">
      <wsdl:documentation>SR37752 - Clients can retrieve a partner benefit pack corresponding to a combination of the benefit (sms,
                min,mb), amount (the amount of benefit of the service e.g free minutes, number of sms, data limit etc)and campaign name
                (name of the campaign for which the benefit has to be provided to the customer). A partner benefit pack refers to a pack
                which can be booked to a customer on requests by Partners, via Portal. This service is only available for
                BenefitActivationService portal and will not impact other client.</wsdl:documentation>
      <soap:operation soapAction="getPartnerBenefitPack" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPreferredCommunicationChannel">
      <wsdl:documentation>SR37814 – Service to get the Preferred Communication Channel for customer by MSISDN</wsdl:documentation>
      <soap:operation soapAction="getPreferredCommunicationChannel" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChurnCustomerData">
      <wsdl:documentation>SR37814 – Service to get the detail of Churned Customers.</wsdl:documentation>
      <soap:operation soapAction="getChurnCustomerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrderStatus">
      <wsdl:documentation>SR37814 – Service to return all asynchronous pending orders. This service also returns the completed orders
                once, which are not returnd in subsequent call of service.</wsdl:documentation>
      <soap:operation soapAction="getOrderStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchCustomers">
      <wsdl:documentation>SR37814 – Service to search the customer(s) for input criteria. It returns all the customers with matching
                input criteria. All String fields in this request support the wildcard character *(multiple characters) and ? (single
                character). If no wildcard is given in input field then exact match will be searched for that field.</wsdl:documentation>
      <soap:operation soapAction="searchCustomers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeSIM">
      <wsdl:documentation>SR37814 – Service to assign new iccid to MSISDN</wsdl:documentation>
      <soap:operation soapAction="changeSIM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateReplacementSim">
      <wsdl:documentation>Service to activate SIM replacement shipped to customer using the automated SIM replacement process.</wsdl:documentation>
      <soap:operation soapAction="activateReplacementSim" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSIMStatistics">
      <wsdl:documentation>SR37814 – Service to get all the statistics about change sim history for given Start and End Date</wsdl:documentation>
      <soap:operation soapAction="getSIMStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSIMHistory">
      <wsdl:documentation>SR37814 – Service to get sim change history for MSISDN</wsdl:documentation>
      <soap:operation soapAction="getSIMHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateDSSEntry">
      <wsdl:documentation>SR37814 – Service to create the DSS Entry for MSISDN</wsdl:documentation>
      <soap:operation soapAction="activateDSSEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateDSSEntry">
      <wsdl:documentation>SR37814 – Service to delete the DSS Entry for MSISDN</wsdl:documentation>
      <soap:operation soapAction="deactivateDSSEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDSSEntry">
      <wsdl:documentation>SR37814 – Service to get the DSS Entry for MSISDN</wsdl:documentation>
      <soap:operation soapAction="getDSSEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTariffChangeHistory">
      <wsdl:documentation>The getTariffChangeHistory function retrieves tariff history. Service shall accept MSISDN,
                start and end date as parameter and responds with all tariff requests for given interval of
                time. If start and end time are not mentioned service shall retrieve ast 90 days data.</wsdl:documentation>
      <soap:operation soapAction="getTariffChangeHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeCustomerCommChannel">
      <wsdl:documentation>ChangeCustomerCommChannel service provides the functionality to switch on/off the customer
                communication for packs. Client has to check the available communication settings and place
                the request. These settings can be checked from the function Get Current Packs1.</wsdl:documentation>
      <soap:operation soapAction="changeCustomerCommChannel" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPortingDeclaration">
      <wsdl:documentation>Creates a new porting declaration, but no porting order.
                There may be no existing valid porting declaration.
                A porting declaration is valid in context of this method
                if it has the state ACTIVE and an end date not before the current date.
                &lt;p />
                The porting declaration means that the customer has declared his or her intent
                to port out to his or her current service provider and is the successor of the waiver declaration.
                The actual porting-out order will not be created, before the customer has declared his or her intent
                to port in to his or her new service provider and a valid porting declaration exists.</wsdl:documentation>
      <soap:operation soapAction="createPortingDeclaration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePortingDeclaration">
      <wsdl:documentation>This function changes an already stored porting declaration for the given customer.
                There must be an existing porting declaration that is active and has a start date.</wsdl:documentation>
      <soap:operation soapAction="updatePortingDeclaration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortingDeclaration">
      <wsdl:documentation>Query the current porting declaration for the given customer.</wsdl:documentation>
      <soap:operation soapAction="getPortingDeclaration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePortingDeclaration">
      <wsdl:documentation>This function removes any previously stored porting declaration for the given customer.
                There must be a porting declaration for which the current date is in its validity period.</wsdl:documentation>
      <soap:operation soapAction="removePortingDeclaration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resubmitPortingDate">
      <wsdl:documentation>This function triggers the porting in/out workflow again with an adjusted porting date.
                To be used in case of a previously failed porting workflow.
                It will be validated that the order is in state ABORTED (96) and
                the new date lies at least 6 days ahead.</wsdl:documentation>
      <soap:operation soapAction="resubmitPortingDate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyAvailability">
      <wsdl:documentation>Operation needed for SOA compliance to verify the availability of this service</wsdl:documentation>
      <soap:operation soapAction="verifyAvailability" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastKnownQoSInformation">
      <wsdl:documentation>Returns the last known Qos information that was obtained from the OCS</wsdl:documentation>
      <soap:operation soapAction="getLastKnownQoSInformation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="subscribeBundle">
      <wsdl:documentation>Clients can subscribe a bundle to the MSISDN of the customer if MSISDN is eligible to the
                bundle Id given in the request.</wsdl:documentation>
      <soap:operation soapAction="subscribeBundle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBundle">
      <wsdl:documentation>Clients can delete a bundle subscription of the customer.</wsdl:documentation>
      <soap:operation soapAction="deleteBundle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentBundle">
      <wsdl:documentation>Clients can query the current bundle subscription to the MSISDN of the customer.</wsdl:documentation>
      <soap:operation soapAction="getCurrentBundle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableBundles">
      <wsdl:documentation>Clients can retrieve the currently available bundles to subscribe for the MSISDN of the
                customer.</wsdl:documentation>
      <soap:operation soapAction="getAvailableBundles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="subscribeArpPack">
      <wsdl:documentation>Clients can subscribe an alternative roaming provider pack for the MSISDN of the customer.</wsdl:documentation>
      <soap:operation soapAction="subscribeArpPack" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteArpPack">
      <wsdl:documentation>Clients can delete a subscription of an alternative roaming provider pack for the MSISDN of the
                customer.</wsdl:documentation>
      <soap:operation soapAction="deleteArpPack" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkArpEligibility">
      <wsdl:documentation>Clients can verify the eligibility for an alternative roaming provider pack for the MSISDN of the
                customer.</wsdl:documentation>
      <soap:operation soapAction="checkArpEligibility" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeFailedRechargeAttempt">
      <soap:operation soapAction="storeFailedRechargeAttempt" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableProducts">
      <soap:operation soapAction="getAvailableProducts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentProducts">
      <soap:operation soapAction="getCurrentProducts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDynamicCustomerData">
      <soap:operation soapAction="getDynamicCustomerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProductList">
      <soap:operation soapAction="getProductList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCrmOrder">
      <soap:operation soapAction="createCrmOrder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCrmOrder">
      <soap:operation soapAction="validateCrmOrder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateFrontendRegistrationDate">
      <soap:operation soapAction="updateFrontendRegistrationDate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHandsetDelockData">
      <wsdl:documentation>Clients can request the delock code of a mobile device identified by an IMEI.
                &lt;br/>
                The information can be requested if the IMEI data exists for an active, or deleted customer of the client's group of customers.
                The SIM lock expiry date is always returned. If SIM lock is expired, then delock code is also returned.</wsdl:documentation>
      <soap:operation soapAction="getHandsetDelockData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="notifyCustomerDirectDebitLimitExceeded">
      <soap:operation soapAction="notifyCustomerDirectDebitLimitExceeded" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRechargeOptions">
      <soap:operation soapAction="getRechargeOptions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="notifyAboutBankTransaction">
      <soap:operation soapAction="notifyAboutBankTransaction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeBankAccount">
      <soap:operation soapAction="changeBankAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="prepareClawback">
      <soap:operation soapAction="prepareClawback" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="confirmSepaMandate">
      <soap:operation soapAction="confirmSepaMandate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchTenantBrandAssignment">
      <wsdl:documentation>Returns the brand/tenant for an MSISDN.
                It is possible to filter the response with a list of tenant/brand combinations.</wsdl:documentation>
      <soap:operation soapAction="searchTenantBrandAssignment" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBrandConfiguration">
      <wsdl:documentation>This service can be cached and needs to be requested only once per day.</wsdl:documentation>
      <soap:operation soapAction="getBrandConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateContract">
      <wsdl:documentation>Triggers the activation of the SIM card for customers who have done a SIM card order before via createCRMOrder with
                shipSim action.</wsdl:documentation>
      <soap:operation soapAction="activateContract" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sysFault">
        <soap:fault name="sysFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PrepaidITCustomerCareServices">
    <wsdl:port name="PrepaidTchibo" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidTchiboServices"/>
    </wsdl:port>
    <wsdl:port name="PrepaidPortal" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidPortalServices"/>
    </wsdl:port>
    <wsdl:port name="PrepaidPartnerBenefit" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidPartnerBenefitServices"/>
    </wsdl:port>
    <wsdl:port name="PrepaidSPAIN" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidSPAINServices"/>
    </wsdl:port>
    <wsdl:port name="PrepaidMCE" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidMCE"/>
    </wsdl:port>
    <wsdl:port name="PrepaidDRC" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidDRC"/>
    </wsdl:port>
    <wsdl:port name="PrepaidBIC" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidBIC"/>
    </wsdl:port>
    <wsdl:port name="PrepaidAldiTalk" binding="local:PrepaidITCustomerCareServices-SOAPBinding">
      <soap:address location="http://localhost:8080/prepaiditcustomercareservices_v15/services/PrepaidAldiTalk"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
    <con:part>
      <con:url>file:\D:\Projects\Telefonica\DirectReCharge\soapUI-NG-Pro\WSDLs\PPIT\prepaiditcustomercareservicesports.wsdl</con:url>
      <con:content><![CDATA[<!--=======================================================================-->
<!--Project: Prepaid IT Customer Care Services-->
<!---->
<!--=======================================================================-->
<wsdl:definitions name="prepaiditcustomercareservicesports" targetNamespace="urn:tefo2de:PrepaidITCustomerCareServices" xmlns:ports="urn:tefo2de:PrepaidITCustomerCareServices" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:stypes="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicetypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xsd:schema targetNamespace="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicestypes" elementFormDefault="qualified">
      <xsd:import namespace="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicetypes" schemaLocation="prepaiditcustomercareservicetypes.xsd"/>
    </xsd:schema>
    <xsd:schema targetNamespace="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicesports"></xsd:schema>
  </wsdl:types>
  <wsdl:message name="getAccountBalanceRequest">
    <wsdl:part name="getAccountBalanceRequest" element="stypes:GetAccountBalanceRequest"/>
  </wsdl:message>
  <wsdl:message name="getAccountBalanceResult">
    <wsdl:part name="getAccountBalanceResult" element="stypes:GetAccountBalanceResult"/>
  </wsdl:message>
  <wsdl:message name="resetAccountRequest">
    <wsdl:part name="resetAccountRequest" element="stypes:ResetAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="resetAccountResult">
    <wsdl:part name="resetAccountResult" element="stypes:ResetAccountResult"/>
  </wsdl:message>
  <wsdl:message name="getNetworkServiceStatusRequest">
    <wsdl:part name="getNetworkServiceStatusRequest" element="stypes:GetNetworkServiceStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="getNetworkServiceStatusResult">
    <wsdl:part name="getNetworkServiceStatusResult" element="stypes:GetNetworkServiceStatusResult"/>
  </wsdl:message>
  <wsdl:message name="importAccountContactHistoryRequest">
    <wsdl:part name="importAccountContactHistoryRequest" element="stypes:ImportAccountContactHistoryRequest"/>
  </wsdl:message>
  <wsdl:message name="importAccountContactHistoryResult">
    <wsdl:part name="importAccountContactHistoryResult" element="stypes:ImportAccountContactHistoryResult"/>
  </wsdl:message>
  <wsdl:message name="exportAccountContactHistoryRequest">
    <wsdl:part name="exportAccountContactHistoryRequest" element="stypes:ExportAccountContactHistoryRequest"/>
  </wsdl:message>
  <wsdl:message name="exportAccountContactHistoryResult">
    <wsdl:part name="exportAccountContactHistoryResult" element="stypes:ExportAccountContactHistoryResult"/>
  </wsdl:message>
  <wsdl:message name="getPackHistoryRequest">
    <wsdl:part name="getPackHistoryRequest" element="stypes:GetPackHistoryRequest"/>
  </wsdl:message>
  <wsdl:message name="getPackHistoryResult">
    <wsdl:part name="getPackHistoryResult" element="stypes:GetPackHistoryResult"/>
  </wsdl:message>
  <wsdl:message name="getPackCounterStatusRequest">
    <wsdl:part name="getPackCounterStatusRequest" element="stypes:GetPackCounterStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="getPackCounterStatusResult">
    <wsdl:part name="getPackCounterStatusResult" element="stypes:GetPackCounterStatusResult"/>
  </wsdl:message>
  <wsdl:message name="getSIMInfoRequest">
    <wsdl:part name="getSIMInfoRequest" element="stypes:GetSIMInfoRequest"/>
  </wsdl:message>
  <wsdl:message name="getSIMInfoResult">
    <wsdl:part name="getSIMInfoResult" element="stypes:GetSIMInfoResult"/>
  </wsdl:message>
  <wsdl:message name="applyCreditDebitRequest">
    <wsdl:part name="applyCreditDebitRequest" element="stypes:ApplyCreditDebitRequest"/>
  </wsdl:message>
  <wsdl:message name="applyCreditDebitResult">
    <wsdl:part name="applyCreditDebitResult" element="stypes:ApplyCreditDebitResult"/>
  </wsdl:message>
  <wsdl:message name="getPortingOutStatusRequest">
    <wsdl:part name="getPortingOutStatusRequest" element="stypes:GetPortingOutStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="getPortingOutStatusResult">
    <wsdl:part name="getPortingOutStatusResult" element="stypes:GetPortingOutStatusResult"/>
  </wsdl:message>
  <wsdl:message name="cancelFailedPortingOutOrderRequest">
    <wsdl:part name="cancelFailedPortingOutOrderRequest" element="stypes:CancelFailedPortingOutOrderRequest"/>
  </wsdl:message>
  <wsdl:message name="cancelFailedPortingOutOrderResult">
    <wsdl:part name="cancelFailedPortingOutOrderResult" element="stypes:CancelFailedPortingOutOrderResult"/>
  </wsdl:message>
  <wsdl:message name="getPortingInStatusRequest">
    <wsdl:part name="getPortingInStatusRequest" element="stypes:GetPortingInStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="getPortingInStatusResult">
    <wsdl:part name="getPortingInStatusResult" element="stypes:GetPortingInStatusResult"/>
  </wsdl:message>
  <wsdl:message name="updatePortingInOrderRequest">
    <wsdl:part name="updatePortingInOrderRequest" element="stypes:UpdatePortingInOrderRequest"/>
  </wsdl:message>
  <wsdl:message name="updatePortingInOrderResult">
    <wsdl:part name="updatePortingInOrderResult" element="stypes:UpdatePortingInOrderResult"/>
  </wsdl:message>
  <wsdl:message name="cancelPortingInOrderRequest">
    <wsdl:part name="cancelPortingInOrderRequest" element="stypes:CancelPortingInOrderRequest"/>
  </wsdl:message>
  <wsdl:message name="cancelPortingInOrderResult">
    <wsdl:part name="cancelPortingInOrderResult" element="stypes:CancelPortingInOrderResult"/>
  </wsdl:message>
  <wsdl:message name="changeAccountOwnerRequest">
    <wsdl:part name="changeAccountOwnerRequest" element="stypes:ChangeAccountOwnerRequest"/>
  </wsdl:message>
  <wsdl:message name="changeAccountOwnerResult">
    <wsdl:part name="changeAccountOwnerResult" element="stypes:ChangeAccountOwnerResult"/>
  </wsdl:message>
  <wsdl:message name="getLastKnownQoSInformationRequest">
    <wsdl:part name="getLastKnownQoSInformationRequest" element="stypes:GetLastKnownQoSInformationRequest"/>
  </wsdl:message>
  <wsdl:message name="getLastKnownQoSInformationResult">
    <wsdl:part name="getLastKnownQoSInformationResult" element="stypes:GetLastKnownQoSInformationResult"/>
  </wsdl:message>
  <wsdl:message name="changeWhoCalledServiceRequest">
    <wsdl:part name="changeWhoCalledServiceRequest" element="stypes:ChangeWhoCalledServiceRequest"/>
  </wsdl:message>
  <wsdl:message name="changeWhoCalledServiceResult">
    <wsdl:part name="changeWhoCalledServiceResult" element="stypes:ChangeWhoCalledServiceResult"/>
  </wsdl:message>
  <wsdl:message name="showVoiceMailboxPINStatusRequest">
    <wsdl:part name="showVoiceMailboxPINStatusRequest" element="stypes:ShowVoiceMailboxPINStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="showVoiceMailboxPINStatusResult">
    <wsdl:part name="showVoiceMailboxPINStatusResult" element="stypes:ShowVoiceMailboxPINStatusResult"/>
  </wsdl:message>
  <wsdl:message name="changeVoiceMailboxPINRequest">
    <wsdl:part name="changeVoiceMailboxPINRequest" element="stypes:ChangeVoiceMailboxPINRequest"/>
  </wsdl:message>
  <wsdl:message name="changeVoiceMailboxPINResult">
    <wsdl:part name="changeVoiceMailboxPINResult" element="stypes:ChangeVoiceMailboxPINResult"/>
  </wsdl:message>
  <wsdl:message name="getEGNDataRequest">
    <wsdl:part name="getEGNDataRequest" element="stypes:GetEGNDataRequest"/>
  </wsdl:message>
  <wsdl:message name="getEGNDataResult">
    <wsdl:part name="getEGNDataResult" element="stypes:GetEGNDataResult"/>
  </wsdl:message>
  <wsdl:message name="getTopUpsAndChargesRequest">
    <wsdl:part name="getTopUpsAndChargesRequest" element="stypes:GetTopUpsAndChargesRequest"/>
  </wsdl:message>
  <wsdl:message name="getTopUpsAndChargesResult">
    <wsdl:part name="getTopUpsAndChargesResult" element="stypes:GetTopUpsAndChargesResult"/>
  </wsdl:message>
  <wsdl:message name="deactivateAccountRequest">
    <wsdl:part name="deactivateAccountRequest" element="stypes:DeactivateAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="deactivateAccountResult">
    <wsdl:part name="deactivateAccountResult" element="stypes:DeactivateAccountResult"/>
  </wsdl:message>
  <wsdl:message name="barUnbarAccountRequest">
    <wsdl:part name="barUnbarAccountRequest" element="stypes:BarUnbarAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="barUnbarAccountResult">
    <wsdl:part name="barUnbarAccountResult" element="stypes:BarUnbarAccountResult"/>
  </wsdl:message>
  <wsdl:message name="changeCLIPorCLIRRequest">
    <wsdl:part name="changeCLIPorCLIRRequest" element="stypes:ChangeCLIPorCLIRRequest"/>
  </wsdl:message>
  <wsdl:message name="changeCLIPorCLIRResult">
    <wsdl:part name="changeCLIPorCLIRResult" element="stypes:ChangeCLIPorCLIRResult"/>
  </wsdl:message>
  <wsdl:message name="simValidationRequest">
    <wsdl:part name="simValidationRequest" element="stypes:SimValidationRequest"/>
  </wsdl:message>
  <wsdl:message name="simValidationResult">
    <wsdl:part name="simValidationResult" element="stypes:SimValidationResult"/>
  </wsdl:message>
  <wsdl:message name="getCustomerDataRequest">
    <wsdl:part name="getCustomerDataRequest" element="stypes:GetCustomerDataRequest"/>
  </wsdl:message>
  <wsdl:message name="getCustomerDataResult">
    <wsdl:part name="getCustomerDataResult" element="stypes:GetCustomerDataResult"/>
  </wsdl:message>
  <wsdl:message name="changeCustomerDataRequest">
    <wsdl:part name="changeCustomerDataRequest" element="stypes:ChangeCustomerDataRequest"/>
  </wsdl:message>
  <wsdl:message name="changeCustomerDataResult">
    <wsdl:part name="changeCustomerDataResult" element="stypes:ChangeCustomerDataResult"/>
  </wsdl:message>
  <wsdl:message name="getPartnerBenefitPackRequest">
    <wsdl:part name="getPartnerBenefitPackRequest" element="stypes:GetPartnerBenefitPackRequest"/>
  </wsdl:message>
  <wsdl:message name="getPartnerBenefitPackResult">
    <wsdl:part name="getPartnerBenefitPackResult" element="stypes:GetPartnerBenefitPackResult"/>
  </wsdl:message>
  <wsdl:message name="getPreferredCommunicationChannelRequest">
    <wsdl:part name="getPreferredCommunicationChannelRequest" element="stypes:GetPreferredCommunicationChannelRequest"/>
  </wsdl:message>
  <wsdl:message name="getPreferredCommunicationChannelResult">
    <wsdl:part name="getPreferredCommunicationChannelResult" element="stypes:GetPreferredCommunicationChannelResult"/>
  </wsdl:message>
  <wsdl:message name="getChurnCustomerDataRequest">
    <wsdl:part name="getChurnCustomerDataRequest" element="stypes:GetChurnCustomerDataRequest"/>
  </wsdl:message>
  <wsdl:message name="getChurnCustomerDataResult">
    <wsdl:part name="getChurnCustomerDataResult" element="stypes:GetChurnCustomerDataResult"/>
  </wsdl:message>
  <wsdl:message name="getOrderStatusRequest">
    <wsdl:part name="getOrderStatusRequest" element="stypes:GetOrderStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="getOrderStatusResult">
    <wsdl:part name="getOrderStatusResult" element="stypes:GetOrderStatusResult"/>
  </wsdl:message>
  <wsdl:message name="searchCustomersRequest">
    <wsdl:part name="searchCustomersRequest" element="stypes:SearchCustomersRequest"/>
  </wsdl:message>
  <wsdl:message name="searchCustomersResult">
    <wsdl:part name="searchCustomersResult" element="stypes:SearchCustomersResult"/>
  </wsdl:message>
  <wsdl:message name="changeSIMRequest">
    <wsdl:part name="changeSIMRequest" element="stypes:ChangeSIMRequest"/>
  </wsdl:message>
  <wsdl:message name="changeSIMResult">
    <wsdl:part name="changeSIMResult" element="stypes:ChangeSIMResult"/>
  </wsdl:message>
  <wsdl:message name="activateReplacementSimRequest">
    <wsdl:part name="activateReplacementSimRequest" element="stypes:ActivateReplacementSimRequest"/>
  </wsdl:message>
  <wsdl:message name="activateReplacementSimResult">
    <wsdl:part name="activateReplacementSimResult" element="stypes:ActivateReplacementSimResult"/>
  </wsdl:message>
  <wsdl:message name="getSIMStatisticsRequest">
    <wsdl:part name="getSIMStatisticsRequest" element="stypes:GetSIMStatisticsRequest"/>
  </wsdl:message>
  <wsdl:message name="getSIMStatisticsResult">
    <wsdl:part name="getSIMStatisticsResult" element="stypes:GetSIMStatisticsResult"/>
  </wsdl:message>
  <wsdl:message name="getSIMHistoryRequest">
    <wsdl:part name="getSIMHistoryRequest" element="stypes:GetSIMHistoryRequest"/>
  </wsdl:message>
  <wsdl:message name="getSIMHistoryResult">
    <wsdl:part name="getSIMHistoryResult" element="stypes:GetSIMHistoryResult"/>
  </wsdl:message>
  <wsdl:message name="activateDSSEntryRequest">
    <wsdl:part name="activateDSSEntryRequest" element="stypes:ActivateDSSEntryRequest"/>
  </wsdl:message>
  <wsdl:message name="activateDSSEntryResult">
    <wsdl:part name="activateDSSEntryResult" element="stypes:ActivateDSSEntryResult"/>
  </wsdl:message>
  <wsdl:message name="deactivateDSSEntryRequest">
    <wsdl:part name="deactivateDSSEntryRequest" element="stypes:DeactivateDSSEntryRequest"/>
  </wsdl:message>
  <wsdl:message name="deactivateDSSEntryResult">
    <wsdl:part name="deactivateDSSEntryResult" element="stypes:DeactivateDSSEntryResult"/>
  </wsdl:message>
  <wsdl:message name="getDSSEntryRequest">
    <wsdl:part name="getDSSEntryRequest" element="stypes:GetDSSEntryRequest"/>
  </wsdl:message>
  <wsdl:message name="getDSSEntryResult">
    <wsdl:part name="getDSSEntryResult" element="stypes:GetDSSEntryResult"/>
  </wsdl:message>
  <wsdl:message name="PrepaidITServiceSystemFault">
    <wsdl:part name="prepaidITServiceSystemFault" element="stypes:PrepaidITServiceSystemFault"/>
  </wsdl:message>
  <wsdl:message name="getTariffChangeHistoryRequest">
    <wsdl:part name="getTariffChangeHistoryRequest" element="stypes:GetTariffChangeHistoryRequest"/>
  </wsdl:message>
  <wsdl:message name="getTariffChangeHistoryResult">
    <wsdl:part name="getTariffChangeHistoryResult" element="stypes:GetTariffChangeHistoryResult"/>
  </wsdl:message>
  <wsdl:message name="changeCustomerCommChannelRequest">
    <wsdl:part name="changeCustomerCommChannelRequest" element="stypes:ChangeCustomerCommChannelRequest"/>
  </wsdl:message>
  <wsdl:message name="changeCustomerCommChannelResult">
    <wsdl:part name="changeCustomerCommChannelResult" element="stypes:ChangeCustomerCommChannelResult"/>
  </wsdl:message>
  <wsdl:message name="createPortingDeclarationRequest">
    <wsdl:part name="createPortingDeclarationRequest" element="stypes:CreatePortingDeclarationRequest"/>
  </wsdl:message>
  <wsdl:message name="createPortingDeclarationResult">
    <wsdl:part name="createPortingDeclarationResult" element="stypes:CreatePortingDeclarationResult"/>
  </wsdl:message>
  <wsdl:message name="updatePortingDeclarationRequest">
    <wsdl:part name="updatePortingDeclarationRequest" element="stypes:UpdatePortingDeclarationRequest"/>
  </wsdl:message>
  <wsdl:message name="updatePortingDeclarationResult">
    <wsdl:part name="updatePortingDeclarationResult" element="stypes:UpdatePortingDeclarationResult"/>
  </wsdl:message>
  <wsdl:message name="getPortingDeclarationRequest">
    <wsdl:part name="getPortingDeclarationRequest" element="stypes:GetPortingDeclarationRequest"/>
  </wsdl:message>
  <wsdl:message name="getPortingDeclarationResult">
    <wsdl:part name="getPortingDeclarationResult" element="stypes:GetPortingDeclarationResult"/>
  </wsdl:message>
  <wsdl:message name="removePortingDeclarationRequest">
    <wsdl:part name="removePortingDeclarationRequest" element="stypes:RemovePortingDeclarationRequest"/>
  </wsdl:message>
  <wsdl:message name="removePortingDeclarationResult">
    <wsdl:part name="removePortingDeclarationResult" element="stypes:RemovePortingDeclarationResult"/>
  </wsdl:message>
  <wsdl:message name="resubmitPortingDateRequest">
    <wsdl:part name="resubmitPortingDateRequest" element="stypes:ResubmitPortingDateRequest"/>
  </wsdl:message>
  <wsdl:message name="resubmitPortingDateResult">
    <wsdl:part name="resubmitPortingDateResult" element="stypes:ResubmitPortingDateResult"/>
  </wsdl:message>
  <wsdl:message name="verifyAvailabilityRequest">
    <wsdl:part name="verifyAvailabilityRequest" element="stypes:CustomerCareVerifyAvailabilityRequest"/>
  </wsdl:message>
  <wsdl:message name="verifyAvailabilityResult">
    <wsdl:part name="verifyAvailabilityResult" element="stypes:VerifyAvailabilityResult"/>
  </wsdl:message>
  <wsdl:message name="subscribeBundleRequest">
    <wsdl:part name="subscribeBundleRequest" element="stypes:SubscribeBundleRequest"/>
  </wsdl:message>
  <wsdl:message name="subscribeBundleResult">
    <wsdl:part name="subscribeBundleResult" element="stypes:SubscribeBundleResult"/>
  </wsdl:message>
  <wsdl:message name="deleteBundleRequest">
    <wsdl:part name="deleteBundleRequest" element="stypes:DeleteBundleRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteBundleResult">
    <wsdl:part name="deleteBundleResult" element="stypes:DeleteBundleResult"/>
  </wsdl:message>
  <wsdl:message name="getCurrentBundleRequest">
    <wsdl:part name="getCurrentBundleRequesr" element="stypes:GetCurrentBundleRequest"/>
  </wsdl:message>
  <wsdl:message name="getCurrentBundleResult">
    <wsdl:part name="getCurrentBundleResult" element="stypes:GetCurrentBundleResult"/>
  </wsdl:message>
  <wsdl:message name="getAvailableBundlesRequest">
    <wsdl:part name="getAvailableBundlesRequest" element="stypes:GetAvailableBundlesRequest"/>
  </wsdl:message>
  <wsdl:message name="getAvailableBundlesResult">
    <wsdl:part name="getAvailableBundlesResult" element="stypes:GetAvailableBundlesResult"/>
  </wsdl:message>
  <wsdl:message name="subscribeArpPackRequest">
    <wsdl:part name="subscribeArpPackRequest" element="stypes:SubscribeArpPackRequest"/>
  </wsdl:message>
  <wsdl:message name="subscribeArpPackResult">
    <wsdl:part name="subscribeArpPackResult" element="stypes:SubscribeArpPackResult"/>
  </wsdl:message>
  <wsdl:message name="deleteArpPackRequest">
    <wsdl:part name="deleteArpPackRequest" element="stypes:DeleteArpPackRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteArpPackResult">
    <wsdl:part name="deleteArpPackResult" element="stypes:DeleteArpPackResult"/>
  </wsdl:message>
  <wsdl:message name="checkArpEligibilityRequest">
    <wsdl:part name="checkArpEligibilityRequest" element="stypes:CheckArpEligibilityRequest"/>
  </wsdl:message>
  <wsdl:message name="checkArpEligibilityResult">
    <wsdl:part name="checkArpEligibilityResult" element="stypes:CheckArpEligibilityResult"/>
  </wsdl:message>
  <wsdl:message name="getCurrentProductsRequest">
    <wsdl:part name="getCurrentProductsRequest" element="stypes:GetCurrentProductsRequest"/>
  </wsdl:message>
  <wsdl:message name="getCurrentProductsResult">
    <wsdl:part name="getCurrentProductsResult" element="stypes:GetCurrentProductsResult"/>
  </wsdl:message>
  <wsdl:message name="getDynamicCustomerDataRequest">
    <wsdl:part name="getDynamicCustomerDataRequest" element="stypes:GetDynamicCustomerDataRequest"/>
  </wsdl:message>
  <wsdl:message name="getDynamicCustomerDataResult">
    <wsdl:part name="getDynamicCustomerDataResult" element="stypes:GetDynamicCustomerDataResult"/>
  </wsdl:message>
  <wsdl:message name="getAvailableProductsRequest">
    <wsdl:part name="getAvailableProductsRequest" element="stypes:GetAvailableProductsRequest"/>
  </wsdl:message>
  <wsdl:message name="getAvailableProductsResult">
    <wsdl:part name="getAvailableProductsResult" element="stypes:GetAvailableProductsResult"/>
  </wsdl:message>
  <wsdl:message name="getProductListRequest">
    <wsdl:part name="getProductListRequest" element="stypes:GetProductListRequest"/>
  </wsdl:message>
  <wsdl:message name="getProductListResult">
    <wsdl:part name="getProductListResult" element="stypes:GetProductListResult"/>
  </wsdl:message>
  <wsdl:message name="updateFrontendRegistrationDateRequest">
    <wsdl:part name="updateFrontendRegistrationDateRequest" element="stypes:UpdateFrontendRegistrationDateRequest"/>
  </wsdl:message>
  <wsdl:message name="updateFrontendRegistrationDateResult">
    <wsdl:part name="updateFrontendRegistrationDateResult" element="stypes:UpdateFrontendRegistrationDateResult"/>
  </wsdl:message>
  <wsdl:message name="storeFailedRechargeAttemptRequest">
    <wsdl:part name="request" element="stypes:StoreFailedRechargeAttemptRequest"/>
  </wsdl:message>
  <wsdl:message name="storeFailedRechargeAttemptResult">
    <wsdl:part name="response" element="stypes:StoreFailedRechargeAttemptResult"/>
  </wsdl:message>
  <wsdl:message name="createCrmOrderRequest">
    <wsdl:part name="request" element="stypes:CreateCrmOrderRequest"/>
  </wsdl:message>
  <wsdl:message name="createCrmOrderResult">
    <wsdl:part name="response" element="stypes:CreateCrmOrderResult"/>
  </wsdl:message>
  <wsdl:message name="validateCrmOrderRequest">
    <wsdl:part name="request" element="stypes:ValidateCrmOrderRequest"/>
  </wsdl:message>
  <wsdl:message name="validateCrmOrderResult">
    <wsdl:part name="response" element="stypes:ValidateCrmOrderResult"/>
  </wsdl:message>
  <wsdl:message name="getHandsetDelockDataRequest">
    <wsdl:part name="request" element="stypes:GetHandsetDelockDataRequest"/>
  </wsdl:message>
  <wsdl:message name="getHandsetDelockDataResult">
    <wsdl:part name="response" element="stypes:GetHandsetDelockDataResult"/>
  </wsdl:message>
  <wsdl:message name="notifyCustomerDirectDebitLimitExceededRequest">
    <wsdl:part name="notifyCustomerDirectDebitLimitExceededRequest" element="stypes:NotifyCustomerDirectDebitLimitExceededRequest"/>
  </wsdl:message>
  <wsdl:message name="notifyCustomerDirectDebitLimitExceededResult">
    <wsdl:part name="notifyCustomerDirectDebitLimitExceededResult" element="stypes:NotifyCustomerDirectDebitLimitExceededResult"/>
  </wsdl:message>
  <wsdl:message name="getRechargeOptionsRequest">
    <wsdl:part name="getRechargeOptionsRequest" element="stypes:GetRechargeOptionsRequest"/>
  </wsdl:message>
  <wsdl:message name="getRechargeOptionsResult">
    <wsdl:part name="getRechargeOptionsResult" element="stypes:GetRechargeOptionsResult"/>
  </wsdl:message>
  <wsdl:message name="notifyAboutBankTransactionRequest">
    <wsdl:part name="notifyAboutBankTransactionRequest" element="stypes:NotifyAboutBankTransactionRequest"/>
  </wsdl:message>
  <wsdl:message name="notifyAboutBankTransactionResult">
    <wsdl:part name="notifyAboutBankTransactionResult" element="stypes:NotifyAboutBankTransactionResult"/>
  </wsdl:message>
  <wsdl:message name="changeBankAccountRequest">
    <wsdl:part name="changeBankAccountRequest" element="stypes:ChangeBankAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="changeBankAccountResult">
    <wsdl:part name="changeBankAccountResult" element="stypes:ChangeBankAccountResult"/>
  </wsdl:message>
  <wsdl:message name="prepareClawbackRequest">
    <wsdl:part name="prepareClawbackRequest" element="stypes:PrepareClawbackRequest"/>
  </wsdl:message>
  <wsdl:message name="prepareClawbackResult">
    <wsdl:part name="prepareClawbackResult" element="stypes:PrepareClawbackResult"/>
  </wsdl:message>
  <wsdl:message name="confirmSepaMandateRequest">
    <wsdl:part name="confirmSepaMandateRequest" element="stypes:ConfirmSepaMandateRequest"/>
  </wsdl:message>
  <wsdl:message name="confirmSepaMandateResult">
    <wsdl:part name="confirmSepaMandateResult" element="stypes:ConfirmSepaMandateResult"/>
  </wsdl:message>
  <wsdl:message name="searchTenantBrandAssignmentRequest">
    <wsdl:part name="searchTenantBrandAssignmentRequest" element="stypes:SearchTenantBrandAssignmentRequest"/>
  </wsdl:message>
  <wsdl:message name="searchTenantBrandAssignmentResult">
    <wsdl:part name="searchTenantBrandAssignmentResult" element="stypes:SearchTenantBrandAssignmentResult"/>
  </wsdl:message>
  <wsdl:message name="getBrandConfigurationRequest">
    <wsdl:part name="getBrandConfigurationRequest" element="stypes:GetBrandConfigurationRequest"/>
  </wsdl:message>
  <wsdl:message name="getBrandConfigurationResult">
    <wsdl:part name="getBrandConfigurationResult" element="stypes:GetBrandConfigurationResult"/>
  </wsdl:message>
  <wsdl:message name="activateContractRequest">
    <wsdl:part name="activateContractRequest" element="stypes:ActivateContractRequest"/>
  </wsdl:message>
  <wsdl:message name="activateContractResult">
    <wsdl:part name="activateContractResult" element="stypes:ActivateContractResult"/>
  </wsdl:message>
  <wsdl:portType name="PrepaidITCustomerCareServices-Port">
    <wsdl:operation name="getAccountBalance">
      <wsdl:input message="ports:getAccountBalanceRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getAccountBalance"/>
      <wsdl:output message="ports:getAccountBalanceResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="resetAccount">
      <wsdl:input message="ports:resetAccountRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:resetAccount"/>
      <wsdl:output message="ports:resetAccountResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getNetworkServiceStatus">
      <wsdl:input message="ports:getNetworkServiceStatusRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getNetworkServiceStatus"/>
      <wsdl:output message="ports:getNetworkServiceStatusResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="importAccountContactHistory">
      <wsdl:input message="ports:importAccountContactHistoryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:importAccountContactHistory"/>
      <wsdl:output message="ports:importAccountContactHistoryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="exportAccountContactHistory">
      <wsdl:input message="ports:exportAccountContactHistoryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:exportAccountContactHistory"/>
      <wsdl:output message="ports:exportAccountContactHistoryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPackHistory">
      <wsdl:input message="ports:getPackHistoryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPackHistory"/>
      <wsdl:output message="ports:getPackHistoryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPackCounterStatus">
      <wsdl:input message="ports:getPackCounterStatusRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPackCounterStatus"/>
      <wsdl:output message="ports:getPackCounterStatusResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getSIMInfo">
      <wsdl:input message="ports:getSIMInfoRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getSIMInfo"/>
      <wsdl:output message="ports:getSIMInfoResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="applyCreditDebit">
      <wsdl:input message="ports:applyCreditDebitRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:applyCreditDebit"/>
      <wsdl:output message="ports:applyCreditDebitResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPortingOutStatus">
      <wsdl:input message="ports:getPortingOutStatusRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPortingOutStatus"/>
      <wsdl:output message="ports:getPortingOutStatusResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPortingInStatus">
      <wsdl:input message="ports:getPortingInStatusRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPortingInStatus"/>
      <wsdl:output message="ports:getPortingInStatusResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="updatePortingInOrder">
      <wsdl:input message="ports:updatePortingInOrderRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:updatePortingInOrder"/>
      <wsdl:output message="ports:updatePortingInOrderResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelPortingInOrder">
      <wsdl:input message="ports:cancelPortingInOrderRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:cancelPortingInOrder"/>
      <wsdl:output message="ports:cancelPortingInOrderResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelFailedPortingOutOrder">
      <wsdl:input message="ports:cancelFailedPortingOutOrderRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:cancelFailedPortingOutOrder"/>
      <wsdl:output message="ports:cancelFailedPortingOutOrderResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeAccountOwner">
      <wsdl:input message="ports:changeAccountOwnerRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeAccountOwner"/>
      <wsdl:output message="ports:changeAccountOwnerResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getLastKnownQoSInformation">
      <wsdl:input message="ports:getLastKnownQoSInformationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getLastKnownQoSInformation"/>
      <wsdl:output message="ports:getLastKnownQoSInformationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeWhoCalledService">
      <wsdl:input message="ports:changeWhoCalledServiceRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeWhoCalledService"/>
      <wsdl:output message="ports:changeWhoCalledServiceResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="showVoiceMailboxPINStatus">
      <wsdl:input message="ports:showVoiceMailboxPINStatusRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:showVoiceMailboxPINStatus"/>
      <wsdl:output message="ports:showVoiceMailboxPINStatusResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeVoiceMailboxPIN">
      <wsdl:input message="ports:changeVoiceMailboxPINRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeVoiceMailboxPIN"/>
      <wsdl:output message="ports:changeVoiceMailboxPINResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getEGNData">
      <wsdl:input message="ports:getEGNDataRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getEGNData"/>
      <wsdl:output message="ports:getEGNDataResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getTopUpsAndCharges">
      <wsdl:input message="ports:getTopUpsAndChargesRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getTopUpsAndCharges"/>
      <wsdl:output message="ports:getTopUpsAndChargesResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="deactivateAccount">
      <wsdl:input message="ports:deactivateAccountRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:deactivateAccount"/>
      <wsdl:output message="ports:deactivateAccountResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="barUnbarAccount">
      <wsdl:input message="ports:barUnbarAccountRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:barUnbarAccount"/>
      <wsdl:output message="ports:barUnbarAccountResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeCLIPorCLIR">
      <wsdl:input message="ports:changeCLIPorCLIRRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeCLIPorCLIR"/>
      <wsdl:output message="ports:changeCLIPorCLIRResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="simValidation">
      <wsdl:input message="ports:simValidationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:simValidation"/>
      <wsdl:output message="ports:simValidationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getCustomerData">
      <wsdl:input message="ports:getCustomerDataRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getCustomerData"/>
      <wsdl:output message="ports:getCustomerDataResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeCustomerData">
      <wsdl:input message="ports:changeCustomerDataRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeCustomerData"/>
      <wsdl:output message="ports:changeCustomerDataResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPartnerBenefitPack">
      <wsdl:input message="ports:getPartnerBenefitPackRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPartnerBenefitPack"/>
      <wsdl:output message="ports:getPartnerBenefitPackResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPreferredCommunicationChannel">
      <wsdl:input message="ports:getPreferredCommunicationChannelRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPreferredCommunicationChannel"/>
      <wsdl:output message="ports:getPreferredCommunicationChannelResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getChurnCustomerData">
      <wsdl:input message="ports:getChurnCustomerDataRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getChurnCustomerData"/>
      <wsdl:output message="ports:getChurnCustomerDataResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getOrderStatus">
      <wsdl:input message="ports:getOrderStatusRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getOrderStatus"/>
      <wsdl:output message="ports:getOrderStatusResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="searchCustomers">
      <wsdl:input message="ports:searchCustomersRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:searchCustomers"/>
      <wsdl:output message="ports:searchCustomersResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeSIM">
      <wsdl:input message="ports:changeSIMRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeSIM"/>
      <wsdl:output message="ports:changeSIMResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="activateReplacementSim">
      <wsdl:input message="ports:activateReplacementSimRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:activateReplacementSim"/>
      <wsdl:output message="ports:activateReplacementSimResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getSIMStatistics">
      <wsdl:input message="ports:getSIMStatisticsRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getSIMStatistics"/>
      <wsdl:output message="ports:getSIMStatisticsResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getSIMHistory">
      <wsdl:input message="ports:getSIMHistoryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getSIMHistory"/>
      <wsdl:output message="ports:getSIMHistoryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="activateDSSEntry">
      <wsdl:input message="ports:activateDSSEntryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:activateDSSEntry"/>
      <wsdl:output message="ports:activateDSSEntryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="deactivateDSSEntry">
      <wsdl:input message="ports:deactivateDSSEntryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:deactivateDSSEntry"/>
      <wsdl:output message="ports:deactivateDSSEntryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getDSSEntry">
      <wsdl:input message="ports:getDSSEntryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getDSSEntry"/>
      <wsdl:output message="ports:getDSSEntryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getTariffChangeHistory">
      <wsdl:input message="ports:getTariffChangeHistoryRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getTariffChangeHistory"/>
      <wsdl:output message="ports:getTariffChangeHistoryResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeCustomerCommChannel">
      <wsdl:input message="ports:changeCustomerCommChannelRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeCustomerCommChannel"/>
      <wsdl:output message="ports:changeCustomerCommChannelResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="createPortingDeclaration">
      <wsdl:input message="ports:createPortingDeclarationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:createPortingDeclaration"/>
      <wsdl:output message="ports:createPortingDeclarationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="updatePortingDeclaration">
      <wsdl:input message="ports:updatePortingDeclarationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:updatePortingDeclaration"/>
      <wsdl:output message="ports:updatePortingDeclarationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPortingDeclaration">
      <wsdl:input message="ports:getPortingDeclarationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getPortingDeclaration"/>
      <wsdl:output message="ports:getPortingDeclarationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="removePortingDeclaration">
      <wsdl:input message="ports:removePortingDeclarationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:removePortingDeclaration"/>
      <wsdl:output message="ports:removePortingDeclarationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="resubmitPortingDate">
      <wsdl:input message="ports:resubmitPortingDateRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:resubmitPortingDate"/>
      <wsdl:output message="ports:resubmitPortingDateResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="verifyAvailability">
      <wsdl:input message="ports:verifyAvailabilityRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:verifyAvailability"/>
      <wsdl:output message="ports:verifyAvailabilityResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="subscribeBundle">
      <wsdl:input message="ports:subscribeBundleRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:subscribeBundle"/>
      <wsdl:output message="ports:subscribeBundleResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="deleteBundle">
      <wsdl:input message="ports:deleteBundleRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:deleteBundle"/>
      <wsdl:output message="ports:deleteBundleResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getCurrentBundle">
      <wsdl:input message="ports:getCurrentBundleRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getCurrentBundle"/>
      <wsdl:output message="ports:getCurrentBundleResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableBundles">
      <wsdl:input message="ports:getAvailableBundlesRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getAvailableBundles"/>
      <wsdl:output message="ports:getAvailableBundlesResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="subscribeArpPack">
      <wsdl:input message="ports:subscribeArpPackRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:subscribeArpPack"/>
      <wsdl:output message="ports:subscribeArpPackResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="deleteArpPack">
      <wsdl:input message="ports:deleteArpPackRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:deleteArpPack"/>
      <wsdl:output message="ports:deleteArpPackResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="checkArpEligibility">
      <wsdl:input message="ports:checkArpEligibilityRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:checkArpEligibility"/>
      <wsdl:output message="ports:checkArpEligibilityResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getCurrentProducts">
      <wsdl:input message="ports:getCurrentProductsRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getCurrentProducts"/>
      <wsdl:output message="ports:getCurrentProductsResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getDynamicCustomerData">
      <wsdl:input message="ports:getDynamicCustomerDataRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getDynamicCustomerData"/>
      <wsdl:output message="ports:getDynamicCustomerDataResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableProducts">
      <wsdl:input message="ports:getAvailableProductsRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getAvailableProducts"/>
      <wsdl:output message="ports:getAvailableProductsResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getProductList">
      <wsdl:input message="ports:getProductListRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getProductList"/>
      <wsdl:output message="ports:getProductListResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="updateFrontendRegistrationDate">
      <wsdl:input message="ports:updateFrontendRegistrationDateRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:updateFrontendRegistrationDate"/>
      <wsdl:output message="ports:updateFrontendRegistrationDateResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="storeFailedRechargeAttempt">
      <wsdl:input message="ports:storeFailedRechargeAttemptRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:storeFailedRechargeAttempt"/>
      <wsdl:output message="ports:storeFailedRechargeAttemptResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="createCrmOrder">
      <wsdl:input message="ports:createCrmOrderRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:createCrmOrder"/>
      <wsdl:output message="ports:createCrmOrderResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="validateCrmOrder">
      <wsdl:input message="ports:validateCrmOrderRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:validateCrmOrder"/>
      <wsdl:output message="ports:validateCrmOrderResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getHandsetDelockData">
      <wsdl:input message="ports:getHandsetDelockDataRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getHandsetDelockData"/>
      <wsdl:output message="ports:getHandsetDelockDataResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="notifyCustomerDirectDebitLimitExceeded">
      <wsdl:input message="ports:notifyCustomerDirectDebitLimitExceededRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:notifyCustomerDirectDebitLimitExceeded"/>
      <wsdl:output message="ports:notifyCustomerDirectDebitLimitExceededResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getRechargeOptions">
      <wsdl:input message="ports:getRechargeOptionsRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getRechargeOptions"/>
      <wsdl:output message="ports:getRechargeOptionsResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="notifyAboutBankTransaction">
      <wsdl:input message="ports:notifyAboutBankTransactionRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:notifyAboutBankTransaction"/>
      <wsdl:output message="ports:notifyAboutBankTransactionResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="changeBankAccount">
      <wsdl:input message="ports:changeBankAccountRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:changeBankAccount"/>
      <wsdl:output message="ports:changeBankAccountResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="prepareClawback">
      <wsdl:input message="ports:prepareClawbackRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:prepareClawback"/>
      <wsdl:output message="ports:prepareClawbackResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="confirmSepaMandate">
      <wsdl:input message="ports:confirmSepaMandateRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:confirmSepaMandate"/>
      <wsdl:output message="ports:confirmSepaMandateResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="searchTenantBrandAssignment">
      <wsdl:input message="ports:searchTenantBrandAssignmentRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:searchTenantBrandAssignment"/>
      <wsdl:output message="ports:searchTenantBrandAssignmentResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="getBrandConfiguration">
      <wsdl:input message="ports:getBrandConfigurationRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:getBrandConfiguration"/>
      <wsdl:output message="ports:getBrandConfigurationResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
    <wsdl:operation name="activateContract">
      <wsdl:input message="ports:activateContractRequest" wsam:Action="urn:tefo2de:PrepaidITCustomerCareServices_v15:activateContract"/>
      <wsdl:output message="ports:activateContractResult"/>
      <wsdl:fault name="sysFault" message="ports:PrepaidITServiceSystemFault"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
    <con:part>
      <con:url>file:\D:\Projects\Telefonica\DirectReCharge\soapUI-NG-Pro\WSDLs\PPIT\prepaiditcustomercareservicetypes.xsd</con:url>
      <con:content><![CDATA[<xsd:schema targetNamespace="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicetypes" elementFormDefault="qualified" xmlns="http://version15.prepaid.de.telefonica.com/prepaiditcustomercareservicetypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
  <xsd:simpleType name="MSISDN">
    <xsd:annotation>
      <xsd:documentation>Example: 4917658512085</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]+"/>
      <xsd:minLength value="10"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CustomerPackDescription">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="256"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Amount">
    <xsd:annotation>
      <xsd:documentation>Euro cents</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int"/>
  </xsd:simpleType>
  <xsd:simpleType name="AmountUnlimited">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNLIMITED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TelephoneNum">
    <xsd:annotation>
      <xsd:documentation>MSISDN or Fix line number, Example: 24425204</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="16"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DestinationNumber">
    <xsd:annotation>
      <xsd:documentation>MSISDN, Fix line number, or service number Example: 4444</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Pkk">
    <xsd:annotation>
      <xsd:documentation>Personal identification number (Persönliche Kunden-Kennzahl)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="4"/>
      <xsd:maxLength value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ContractId">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="11"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SpSubscriptionID">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">External subscription ID of services provider customers from SPAIN.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Agent">
    <xsd:annotation>
      <xsd:documentation>Name of the agent</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="3"/>
      <xsd:maxLength value="24"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PrepaidAgent">
    <xsd:annotation>
      <xsd:documentation>Name of the agent</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="24"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ShortComment">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="256"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Comment">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="512"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AccountContactHistoryComment">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="1024"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ID">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="OrderId">
    <xsd:annotation>
      <xsd:documentation>Unique identifier of a CRM order, defined by Prepaid IT</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackID">
    <xsd:annotation>
      <xsd:documentation>The system overall unique alphanumeric ID of a pack.
                Sometimes also called 'Referenz-ID' (CAT1) and 'ExternalPackPromotionID'.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="ID"/>
  </xsd:simpleType>
  <xsd:simpleType name="ShortDisplayName">
    <xsd:annotation>
      <xsd:documentation>A more concise product name for display in, e.g., USSD.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="25"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BookingShortCode">
    <xsd:annotation>
      <xsd:documentation>Defines a sequence of digits for booking a pack product via IVR.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1,5}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BundleID">
    <xsd:annotation>
      <xsd:documentation>The system overall unique alphanumeric ID of a bundle.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="ID"/>
  </xsd:simpleType>
  <xsd:simpleType name="PIN">
    <xsd:annotation>
      <xsd:documentation>A PIN with 4 digits</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9][0-9][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PUK">
    <xsd:annotation>
      <xsd:documentation>PUK (Personal Unblocking Key)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IBAN">
    <xsd:annotation>
      <xsd:documentation>IBAN (International Bank Account Number)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{2}\d{2}[A-Z\d]{0,30}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VoID">
    <xsd:annotation>
      <xsd:documentation>Dealer id. A string contains only digits. Can be up to 8 characters long.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{1,8}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CreditorId">
    <xsd:annotation>
      <xsd:documentation>Unique identifier of the creditor as defined by SEPA.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{2}\d{2}[A-Z\d]{0,31}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BIC">
    <xsd:annotation>
      <xsd:documentation>BIC (Business Identifier code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z\d]{11}|[A-Z\d]{8}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AccountNumber">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BankCode">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AccountOwner">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="61"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BankName">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="56"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MandateId">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="24"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Reason">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SEPAReasonCode">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExternalContractId">
    <xsd:annotation>
      <xsd:documentation>The external contract id of the customer in PPIT, e.g.: abcde12345678.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ThirdPartyBankAccountOwner">
    <xsd:sequence>
      <xsd:element name="salutation" type="Salutation" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Salutation (Herr/Frau) for the third party account owner</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="addressData" type="AddressData" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Postal address of the third party account owner</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="email" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Email address of the third party bank account owner</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="FirstName">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="32"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LastName">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--this salutation type is to be used by ThirdPartyBankAccountOwner only-->
  <xsd:simpleType name="Salutation">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HERR"/>
      <xsd:enumeration value="FRAU"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LapiArticleId">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LapiTariffId">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LapiExternalOrderId">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FrontendOrderId">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FrontendSubscriptionId">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SepaMandateTrackingId">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="42"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PortingCode">
    <xsd:annotation>
      <xsd:documentation>A porting code identifies a service provider.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="2"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NetworkOperator">
    <xsd:annotation>
      <xsd:documentation>A network operator.
                Examples: O2, E1.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="2"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VoucherCode">
    <xsd:annotation>
      <xsd:documentation>Secret voucher code for redemption</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{12}|\d{16}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String3">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String4">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String5">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String6">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String8">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String10">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String12">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="12"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String15">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String16">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="16"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ContentCardCode">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="19"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String20">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String24">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="24"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String25">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String32">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="32"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String40">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String50">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String60">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="60"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String64">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String75">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="75"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String96">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="96"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String128">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String256">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="256"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String2048">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2048"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PositiveInteger">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimChangeStatusEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Status of an existing SIM replacement request</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="ACTIVATION_IN_PROGRESS">
        <xsd:annotation>
          <xsd:documentation>Activation in progress</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ACTIVATION_FAILED">
        <xsd:annotation>
          <xsd:documentation>Activation failed</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ACTIVATION_SUCCESSFUL">
        <xsd:annotation>
          <xsd:documentation>Activation successful</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ORDERED">
        <xsd:annotation>
          <xsd:documentation>Replacement SIM ordered</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ORDERING_FAILED">
        <xsd:annotation>
          <xsd:documentation>Ordering failed</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SHIPPED">
        <xsd:annotation>
          <xsd:documentation>SIM shipped</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SHIPPING_FAILED">
        <xsd:annotation>
          <xsd:documentation>Shipping failed</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SHIPMENT_RETURNED">
        <xsd:annotation>
          <xsd:documentation>Shipment returned (Retoure)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CycleTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Cycle type code</xsd:documentation>
        <xsd:documentation>Cycle interval</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="daily">
        <xsd:annotation>
          <xsd:documentation>Daily</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="twentyfourhours">
        <xsd:annotation>
          <xsd:documentation>24 hours</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="weekly">
        <xsd:annotation>
          <xsd:documentation>Weekly</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="monthly">
        <xsd:annotation>
          <xsd:documentation>Monthly</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="calendarmonthly">
        <xsd:annotation>
          <xsd:documentation>One calendar month</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="yearly">
        <xsd:annotation>
          <xsd:documentation>Yearly</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="non-cyclic">
        <xsd:annotation>
          <xsd:documentation>Non Cyclic</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CounterUnitEnum">
    <xsd:annotation>
      <xsd:documentation>The CounterUnitEnum is a type-safe enumeration of qualifiers for counter unit types</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Counter unit code</xsd:documentation>
        <xsd:documentation>Counter unit</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="SMS">
        <xsd:annotation>
          <xsd:documentation>SMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Minutes">
        <xsd:annotation>
          <xsd:documentation>Voice</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Seconds">
        <xsd:annotation>
          <xsd:documentation>Voice</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MB">
        <xsd:annotation>
          <xsd:documentation>Data in MeBi (1024-based)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="KB">
        <xsd:annotation>
          <xsd:documentation>Data in KiBi (1024-based)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Eurocents">
        <xsd:annotation>
          <xsd:documentation>Monetary</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MMS">
        <xsd:annotation>
          <xsd:documentation>MMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Units">
        <xsd:annotation>
          <xsd:documentation>General units that are used for packs with a combined service type like SMS/Voice combined</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackSubCategoryType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Throttling Pack"/>
      <xsd:enumeration value="NFC Pack"/>
      <xsd:enumeration value="ARP Pack"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="OrderInfoStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The OrderInfoStatusEnum is a type-safe enumeration of possible status of orders to be return in getOrderStatus service.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Order info status code</xsd:documentation>
        <xsd:documentation>Order info status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Pending</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Acknowledged</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Success</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Error</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AccountContactTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The AccountContactTypeEnum is a type-safe enumeration of possible account contact types to be used in customer contacts.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Account contact type</xsd:documentation>
        <xsd:documentation>Description</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="AUTOMATIC_EVENT">
        <xsd:annotation>
          <xsd:documentation>Automatic events are ones such as 'pack booked' or BIC event</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL_CONTACT">
        <xsd:annotation>
          <xsd:documentation>Manual contacts are written explicitly by a customer care service agent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SepaMandateSourceEnum">
    <xsd:annotation>
      <xsd:documentation>The SepaMandateSourceEnum is a type-safe enumeration of how the SEPA mandate is received</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Sepa mandate type</xsd:documentation>
        <xsd:documentation>Description</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="ONLINE_CHECK_BOX">
        <xsd:annotation>
          <xsd:documentation>The customer agreed by clicking a SEPA checkbox in an online frontend or the app</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PDF_ATTACHED">
        <xsd:annotation>
          <xsd:documentation>The SEPA mandate is attached to the order as a PDF document</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FAX_EXPECTED">
        <xsd:annotation>
          <xsd:documentation>The SEPA mandate was printed out and will be faxed by the shop agent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TO_BE_REQUESTED">
        <xsd:annotation>
          <xsd:documentation>The SEPA mandate will be requested from the customer directly</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DSSUsageEnum">
    <xsd:annotation>
      <xsd:documentation>The DSSUsageEnum is a type-safe enumeration of possible usage of DSS Entry.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>DSS usage code</xsd:documentation>
        <xsd:documentation>DSS usage</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>DSS entry can not be used</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Only telephone number can be used</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Telephone number and address can be used</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DSSRequestStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The DSSRequestStatusEnum is a type-safe enumeration of possible status of DSS request in Prepaid IT.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>DSS Request status code</xsd:documentation>
        <xsd:documentation>DSS Request status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Invalid</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Ready for transmission</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>In Progress</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Responded</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Accepted</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DSSResponseStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The DSSResponseStatusEnum is a type-safe enumeration of possible status of response from DSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>DSS response status code</xsd:documentation>
        <xsd:documentation>DSS response status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Success</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Rejected</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Accepted but corrected</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CLIPCLIREnum">
    <xsd:annotation>
      <xsd:documentation>The CLIPCLIREnum is a type-safe enumeration of possible values of CLIP and CLIR.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>CLIP/CLIR code</xsd:documentation>
        <xsd:documentation>CLIP/CLIR value</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>ON</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>OFF</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>PCB</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>PCBN</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="QueryCustMSISDN">
    <xsd:annotation>
      <xsd:documentation>Example: 49179</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IccId">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]+"/>
      <xsd:minLength value="18"/>
      <xsd:maxLength value="19"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IMEI">
    <xsd:restriction base="xsd:string">
      <xsd:length value="15"/>
      <xsd:pattern value="[0-9]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IMSI">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="15"/>
      <xsd:pattern value="[0-9]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SourceBrandEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EPLUS"/>
      <xsd:enumeration value="BASE"/>
      <xsd:enumeration value="MTV"/>
      <xsd:enumeration value="BLAU"/>
      <xsd:enumeration value="SIMYO"/>
      <xsd:enumeration value="AY_YILDIZ"/>
      <xsd:enumeration value="BLAUWORLD_TELEFONICA"/>
      <xsd:enumeration value="MOBILKA_TELEFONICA"/>
      <xsd:enumeration value="NETTOKOM"/>
      <xsd:enumeration value="NORMA_MOBIL"/>
      <xsd:enumeration value="ORTEL_MOBILE"/>
      <xsd:enumeration value="WHATSAPP_SIM"/>
      <xsd:enumeration value="MOBILKA_ORTEL"/>
      <xsd:enumeration value="ALDITALK"/>
      <xsd:enumeration value="BLAUWORLD_ORTEL"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CustomerReferenceNumber">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Individual">
    <xsd:sequence>
      <xsd:element name="lastName" type="LastName"/>
      <xsd:element name="firstName" type="FirstName"/>
      <xsd:element name="birthDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Company">
    <xsd:sequence>
      <xsd:element name="companyName" type="xsd:string"/>
      <xsd:element name="customerNumber" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EmailAddressWithValidation">
    <xsd:annotation>
      <xsd:documentation>An Email Address with validation flag</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="String64">
        <xsd:attribute name="validated" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>Whether the email address has been validated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AddressData">
    <xsd:sequence>
      <xsd:element name="street" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Street name</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="houseNumber" type="String8" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>House number</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryCode" type="String4" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Country. For example, "Deutschland" will be represented as "DE" Format: ISO3166-1alpha2.
                        The same object will be used for read and write operations. So while writing, system accepts only length of two
                        country code.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="zipCode" type="String8" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Zip Code. Example: 80997</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="city" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>City</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonalData">
    <xsd:sequence>
      <xsd:element name="lastName" type="LastName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional (At least one parameter from lastName, firstname or birthDate should be present for ChangeAccountOwner).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstName" type="FirstName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional (At least one parameter from lastName, firstname or birthDate should be present for ChangeAccountOwner).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="birthDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date of Birth. Should be in YYYY-MM-DD format. In case of "Firma" if birthdate is null no error will be thrown.
                        Eg: YYYY-MM-DD. Optional (At least one parameter from lastName, firstname or birthDate should be present for
                        ChangeAccountOwner).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="title" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Customer's title. e.g. Dr., Prof.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="gender" type="GenderEnum" minOccurs="0"/>
      <xsd:element name="personalIdNumber" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Passport Number</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="personalIdType" type="PersonalIDTypeEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>PersonalIdType is optional, but Mandatory for RegisterCustomer and GetCustomerData Services.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="personalIdExpDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Expiry date of the passport. Format: YYYY-MM-DD default value for updating this field to null in database is
                        1900-01-01</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="nationality" type="NationalityEnum" minOccurs="0"/>
      <xsd:element name="contactPhone" type="TelephoneNum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Contact phone number. Eg: e.g. 491... (E. 164) Format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="email" type="EmailAddressWithValidation" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Email address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="addressData" type="AddressData" minOccurs="0"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerAgreementFlagsCategory">
    <xsd:annotation>
      <xsd:documentation>This structure represents a customer agreement flags category for which
                the agreement can be set for individual communication channels.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="letter" type="xsd:boolean"/>
      <xsd:element name="sms" type="xsd:boolean"/>
      <xsd:element name="email" type="xsd:boolean"/>
      <xsd:element name="phone" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerAgreementFlags">
    <xsd:sequence>
      <xsd:element name="useCustomerInfo" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional in requests.
                        When absent, this value is derived from other values.
                        When present, it must be consistent with the calculation, i.e., any non-partner permission requires this to be set to true.
                        If the value is not set correctly, it will be treated as absent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="companyUseTrafficData" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether the customer allows the usage of their traffic data for the company.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="companyUseCustomerData" type="CustomerAgreementFlagsCategory">
        <xsd:annotation>
          <xsd:documentation>Through which channels the customer allows the usage of their customer data for the company.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="partnerUseCustomerAndTrafficData" type="CustomerAgreementFlagsCategory">
        <xsd:annotation>
          <xsd:documentation>Through which channels the customer allows the usage of their customer data for partner companies.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerAgreementReminder">
    <xsd:annotation>
      <xsd:documentation>Represents the state of reminder for updating the customer agreement flags</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="allowsReminder" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Whether the customer agrees to be asked to update their agreement flags. This field will always be returned in a
                        getCustomerData result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lastReminderDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The last known time the customer has been asked to update their agreement flags. This field may be empty / left out
                        if the customer has never been asked before.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerData">
    <xsd:sequence>
      <xsd:element name="personalData" type="PersonalData" minOccurs="0"></xsd:element>
      <xsd:element name="pkk" type="Pkk" minOccurs="0"/>
      <xsd:element name="pkkType" type="PKKTypeEnum" minOccurs="0"/>
      <xsd:element name="fskLevel" type="FskLevelEnum" minOccurs="0"/>
      <xsd:element name="dealerCode" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Id of the dealer who sold the handset to the customer. Default: 0. e.g. vo_number.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="churnStatus" type="ChurnStatusEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Churn status of the customer. The status are: 0: valid, 1: active, 2: warned 1, 3: warned 2, 4: locked, 5: warned 3,
                        6: balance deleted, 7: warned 4, 8: already barred, 9: barred, 10: deletion started, 11: deleted.
                        Optional, Non editable in case of changeCustomerData request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerAgreementFlags" type="CustomerAgreementFlags" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional for changeCustomerData. Mandatory for registration. Will always be returned via getCustomerData.
                        Contact permission for letter, telephone, SMS/MMS or email may only be given if useCustomerInfo is allowed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerAgreementReminder" type="CustomerAgreementReminder" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This element will only be returned if the reminder functionality is enabled for the customer's brand.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Result">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>2</td><td>Chosen target tariff not allowed</td><td>Permanent</td></tr>
                <tr><td>3</td><td>Customer black list check failed</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>5</td><td>Customer address is invalid</td><td>Permanent</td></tr>
                <tr><td>6</td><td>Maximum SIM registration is exceeded</td><td>Permanent</td></tr>
                <tr><td>7</td><td>Content Card code check failed</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>102</td><td>MSISDN ICCID match check failed</td><td>Permanent</td></tr>
                <tr><td>103</td><td>MSISDN and Activation Code mapping not valid</td><td>Permanent</td></tr>
                <tr><td>105</td><td>Registration is ongoing (This result code is applicable for LOOP MSISDNs only)</td><td>Transient</td></tr>
                <tr><td>106</td><td>MSISDN does not exist in the network</td><td>Permanent</td></tr>
                <tr><td>109</td><td>MSISDN is already registered</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>500</td><td>Network Error: Error in Retrieving Balance Information.</td><td>Permanent</td></tr>
                <tr><td>501</td><td>Network Error </td><td>Permanent</td></tr>
                <tr><td>503</td><td>Customer Mailable Flag validation failed</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network Error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="resultCode" type="ResultCodeEnum"/>
      <xsd:element name="reasonMsg" type="String256">
        <xsd:annotation>
          <xsd:documentation>Description of the Message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionChannel">
    <xsd:sequence>
      <xsd:element name="subscriptionChannel" type="Channel">
        <xsd:annotation>
          <xsd:documentation>Possible subscription channel.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="activationFee" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee per channel wise is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionInfo">
    <xsd:sequence>
      <xsd:element name="customerSubscriptionId" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Unique ID of the packsubscription in Prepaid IT. In-case of stackable packs, different customer subscription ids
                        will be available for every instance of the subscription of the pack even though the pack is same.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="currentCycle" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Current cycle of the pack which is in use by MSISDN. Current cycle starts with 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="PackMainStateEnum"/>
      <xsd:element name="bookingDate" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>The date when the pack was subscribed by the MSISDN. Format: YYYY-MM-DDThh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="subscriptionStartDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Subscription Start date of the pack for the MSISDN. Format: YYYY-MM-DDThh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cycleStartDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Current cycle start date. Format: YYYY-MM-DDThh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cycleEndDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Current cycle end date. Format: YYYY-MM-DDThh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packEndDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>End date of the pack subscription and this is only for the non-cyclic packs. Format: YYYY-MM-DDThh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ActuallyPaidSubscriptionFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Amount Fee of the channel through which pack is booked. Actually paid subscription fee. Depends on subscription
                        channel and whether it was overridden or not (see subscribePack). Optional</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="stateChangeDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time and date when the status or the end date of the subscription has changed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackGroup">
    <xsd:sequence>
      <xsd:element name="packGroupID" type="String64">
        <xsd:annotation>
          <xsd:documentation>Unique ID of the pack group</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packGroupName" type="String64">
        <xsd:annotation>
          <xsd:documentation>Name of the pack group</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="minPackAllowed" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Minimum number of packs that can be subscribed in the pack group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="maxPackAllowed" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Maximum number of packs that can be subscribed in the pack group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="migrationFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Fee is to be charge if customer migrates from one pack to other within pack group is in Eurocents.
                        Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isNonStackable" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>To differentiate whether the pack group is stackable or non-stackable.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PendingOrderType">
    <xsd:sequence>
      <xsd:element name="event" type="PackEventTypeEnum">
        <xsd:annotation>
          <xsd:documentation>The type of the pack event</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="channel" type="Channel">
        <xsd:annotation>
          <xsd:documentation>Channel from where the request is received.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="requestDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date when the request is received. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NetworkBarringStatus">
    <xsd:sequence>
      <xsd:element name="simCardStatus" type="SimCardStatusEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>SIM card status. Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="internetBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the internet barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="premiumServiceBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the premium service barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="simOutgoingBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the sim outgoing barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dataUsageOutboundRoamingBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the data usage outbound roaming barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="moCallsInternationalBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the outgoing international calls barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="moCallsRoamingBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the outgoing calls barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mtCallsRoamingBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the incoming call in roaming barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mtCallsBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the incoming calls barring. 0 - bar, 1 - unbar.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="missedCallsBarringStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Status of the missed calls barring. 0 - bar, 1 - unbar, 2 - Error, 3 - InProcess.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="clipStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>CLIP (Caller Line Identification Presentation) status possible values are 0 - ON (default value) 1 - OFF.
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="clirStatus" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>CLIR (Caller Line Identification Restriction) status possible values are 0 - ON (Not Restricted), 1 - OFF
                        (Permanently Restricted), 2 - PCB (Per Call Basis), 3 - PCBN (Per Call Basis Not Active) (default value)
                        Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Cycle">
    <xsd:annotation>
      <xsd:documentation>Note: In the cyclic pack subscription the activationFee in the SubscriptionChannel
                complex type is treated as the first cycle fee and in the non-cyclic pack subscription
                it is treated as normal activation fee of the pack.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="cycleType" type="CycleTypeEnum"/>
      <xsd:element name="noOfCycles" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Number of cycles for pack, if the pack is cyclic. Total number of cycles and -1 is infinite cycle.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="secondCycleFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Fee for second cycle is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="thirdCycleFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Fee for third cycle is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="fourthCycleFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Fee for fourth cycle is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="withGrace" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Pack has grace period allowed or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="renewalGracePeriod" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Renewal grace period in days. For no renewal grace period this element is absent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="startDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The start date of the cyclic and non-cyclic packs. Format: YYYY-MM-DD.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The end date of non-cyclic packs which has been defined in the pack. Format: YYYY-MM-DD
                        Optional (Mandatory for Non-cyclic).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cycleMultiplicationFactor" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The CycleMultiplicationFactor is the value to set the duration of one cycle as a multiple of days/weeks/months/years
                        (the cycleType of the pack). This shall be applied to cyclic packs only. Eg. If the cycleMultiplicationFactor = 3.
                        In case of daily pack: It should be renewed for every 3 days. In case of monthly pack then it should be renewed
                        after every 3 months. The value is only set to the cyclic pack and the value is greater than 0.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackCounters">
    <xsd:sequence>
      <xsd:element name="packID" type="PackID">
        <xsd:annotation>
          <xsd:documentation>Pack id which is configured from CAT</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerSubscriptionID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Unique ID of the packsubscription in Prepaid IT. In case of stackable packs, different customer subscription id’s
                        will be available for every instance of the subscription of the pack even though the pack is same.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="subscriptionID" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Unique ID of the pack subscription within Prepaid IT.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packGroup" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The group identifier of the pack. It is returned if the pack belongs to a pack group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="announcementPriority" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The priority of the pack inside the announcement order of the returned packs. Lower numerical value means higher
                        priority!</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="counter" type="Counter" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Contains all current values of the counters of the pack subscription of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Counter">
    <xsd:sequence>
      <xsd:element name="counterUnit" type="CounterUnitEnum"/>
      <xsd:element name="value" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>The meaning of the actual value of this field depends on the context the Counter type is used in.
                        The value is always of the counterUnit type.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="counterName" minOccurs="0" maxOccurs="1" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>The name of the counter</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="counterType" type="CounterTypeEnum"/>
      <xsd:element name="serviceType" type="CounterServiceType">
        <xsd:annotation>
          <xsd:documentation>The service types offered by the pack.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="qosDefinition" type="QosDefinition" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>QoS configured for the counter</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SIMInfo">
    <xsd:annotation>
      <xsd:documentation>Contains customer-specific information regarding the subscription of the SIM-product.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductSubscriptionInfo">
        <xsd:sequence>
          <xsd:element name="purchaseDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Purchase date of the SIM card. Format: YYYY-MM-DD, default - 1900-01-01 if want to make null in database
                                other-wise
                                suppress the field.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="iccID" type="IccId">
            <xsd:annotation>
              <xsd:documentation>ICCID of SIM-Card Integrated Circuit Card Identifier</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="imsi" type="IMSI">
            <xsd:annotation>
              <xsd:documentation>International mobile subscriber identity.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="imei" type="IMEI" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>International mobile equipment identity.
                                The default value is set to "000000000000000" and will be sent until all clients have adopted imei as
                                optional.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pin1" type="PIN">
            <xsd:annotation>
              <xsd:documentation>First PIN (Personal Identification Number) number of the SIM.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pin2" type="PIN" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Second PIN (Personal Identification Number) number of the SIM.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="puk1" type="PUK">
            <xsd:annotation>
              <xsd:documentation>First PUK (Personal Unblocking Key)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="puk2" type="PUK" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Second PUK (Personal Unblocking Key)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mobileType" type="String96" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Manufacturer of handset type with particular handset model (eg : Nokia 2600)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="simCardStatus" type="SimCardStatusEnum" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>SIM card status.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="simPackagingType" type="SimPackagingTypeEnum"/>
          <xsd:element name="simLock" type="String40" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Sim de-locking code (unlocks device to accept SIM cards from other phone operators). Only available if IMEI
                                is present. The default value is set to "*#0000#00000000#" and will be sent only until all clients have
                                adopted simLock as optional.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="buPurpose" type="String20" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Combination of MSISDN and automatically generated checksum.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="remainingLifeInDays" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Time (in days after which SIM-de-locking code maybe shown in the CC-GUI for the agents )</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="possibleDeletionDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The possible date at which IT status "Balance deleted" is to be reached. This is approx date based on BIC
                                inactive date.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BalanceInfo">
    <xsd:sequence>
      <xsd:element name="mainBalance" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Main account balance of the customer is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mainExpiryDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Main account expiry date of the customer. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="bonusBalance" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Bonus account balance of the customer is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="bonusExpiryDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Bonus account expiry date of the
                        customer. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChangeAccountOwner">
    <xsd:sequence>
      <xsd:element name="customerData" type="CustomerData">
        <xsd:annotation>
          <xsd:documentation>If the 'validated' attribute in Email element is absent, the new address will be invalidated if and only if it
                        differs from the currently stored email address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="permitsCallStore" type="PermitsCallStoreEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Defines whether and how call details may be stored, e.g., for use in EGN reports.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="forwardData" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicates whether the data is allowed to forward to external parties or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dssEntry" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This flag specifies whether to publish the phone number on telephone book or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="preferredCommunicationChannel" type="PreferredCommunicationChannelEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional. The field may be absent in case no preferred channel is known for the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="comment" type="Comment" minOccurs="0"></xsd:element>
      <xsd:element name="tchiboAdditionalInfo" type="TchiboAdditionalInfo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Tchibo specific additional info.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TchiboAdditionalInfo">
    <xsd:sequence>
      <xsd:element name="inverseSearch" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates whether inverse search is allowed on telephone book. 0 - False
                        (Default : if not given will be handled as default), 1 - True</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerGroup" type="String5" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates customer belongs to which group(A1-15).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="businessCustomer" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Filed to indicate whether the customer is private or business. Prepaid doesn’t support business customers. 0 - False
                        (Default : if not given will be handled as default), 1 - True.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ustID" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Tax Id for the business customers</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="payMethod" type="String20" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Payment method</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="billType" minOccurs="0" maxOccurs="1" type="BillTypeEnum"/>
      <xsd:element name="billDay" type="BillDay" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates the day of month for which the bill should be generated for this customer. Default value is 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="a1" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For future use</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="a2" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For future use</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="a3" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For future use</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PortingOutInfo">
    <xsd:sequence>
      <xsd:element name="orderID" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The porting out order id (MNP_ID from Nums).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderType" type="OrderTypeEnum">
        <xsd:annotation>
          <xsd:documentation>Type of the order migration. 0 = PPO normal porting order, 1 = PPO_O2 porting order for O2 service providers,
                        2 = PPM prepaid postpaid migration order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="PortOutStatusEnum">
        <xsd:annotation>
          <xsd:documentation>State of porting out request. 0 = NEW, 20 = ACCEPTED, 21 = DEBITTING, 22 = CREDITING, 30 = DEPROVISIONING,
                        40 = RESURRECTION, 51 = CANCELLED, 52 = PORTED_OUT, 53 = TIME_OUT, 54 = COMPLETED, 91 = REJECTED,
                        92 = PORTING_FAILURE, 93 = IN_FAILURE, 94 = RESURRECTION_FAILURE, 95 = NUMS_FAILURE, 96 = ABORTED, 97 = RESEND.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="amount" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Amount deducted for porting out fees (in Eurocents). Example: 123 (123 cents).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="portingDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date on which porting out shall happen. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="receipientSP" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The service provider to which the number shall be ported.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="receipientNO" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The network operator to which the number shall be ported.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="name" type="String50" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Last Name of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="preName" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>First name of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="birthDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date of birth of the customer. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="errorCode" type="String24" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Error code while porting out order processing if any.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="errorSource" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Error source while porting out order processing if any.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="errorText" type="String256" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Error text while porting out order processing if any.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PortingInInfo">
    <xsd:sequence>
      <xsd:element name="msisdn" type="MSISDN">
        <xsd:annotation>
          <xsd:documentation>Interim/Current MSISDN of customer in Tchibo. e.g. 491... (E. 164) Format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="portInMsisdn" type="MSISDN">
        <xsd:annotation>
          <xsd:documentation>MSISDN of donating service provider that is to be ported in the system. e.g. 491... (E. 164) Format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="donatingNO" type="String32">
        <xsd:annotation>
          <xsd:documentation>The network operator from which the number is ported. Refer to list in CustomerCare IFS.
                        This input-parameter might be ignored in future (because EAI-NMF will provide the correct value during the
                        workflow).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="donatingSP" type="String32">
        <xsd:annotation>
          <xsd:documentation>The service provider from which the number is ported. Refer to list in CustomerCare IFS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerType" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Type of the customer on donating party. Possible values are 1: ‘PRIVATE’, 2: ‘BUSINESS’.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="emailID" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Email id of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="voID" type="VoID" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Dealer id from where the request is initiated.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstName" type="FirstName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>First name in donating customer. It would not be present in case if customerType is ‘BUSINESS’.
                        Optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lastName" type="LastName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Last name in donating customer. It would not be present in case if customerType is ‘BUSINESS’.
                        Optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="birthDate" type="xsd:date" default="1900-01-01" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date of Birth in donating customer. It would not be present in case if customerType is ‘BUSINESS’.
                        Format: YYYY-MM-DD. Default : 1900-01-01, should be provided when null value needs to be updated in database.
                        Optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="companyName" type="String75" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Company name. It would not be present in case if customerType is ‘PRIVATE’.
                        Optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerAccountNumber" type="String20" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Customer account number. It would not be present in case if customerType is ‘PRIVATE’.
                        Optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cancellationDate" type="xsd:date" default="1900-01-01" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Cancellation or quit claim date. Default: 1900-01-01, should be provided when null value needs to be updated in
                        database.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="portingType" type="PortingType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Porting type. May be any of ASAP, VTEN. Optional (assumed ASAP if not set).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PortingInStatus">
    <xsd:sequence>
      <xsd:element name="portingInInfo" type="PortingInInfo"/>
      <xsd:element name="portingOrderID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Internal Order id of the porting-in order in Prepaid IT.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="PortinStatusEnum"/>
      <xsd:element name="subStatus" type="PortinSubStatusEnum"/>
      <xsd:element name="portingDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date on which porting-in shall happen. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="requestDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date of the porting in request capture. Format: YYYY-MM-DD.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="modifiedDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date of the porting in request modification. Format: YYYY-MM-DD.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="createdBy" type="PrepaidAgent">
        <xsd:annotation>
          <xsd:documentation>Name of the agent who created the porting in request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="modifiedBy" type="PrepaidAgent" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Name of the agent who updated the porting in request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="errorCode" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Error code, if any error occurred while processing porting in order.
                        Details of these codes are given in CustomerCare IFS "Porting In Error Code and Reasons".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="errorReason" type="String256" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Error text, if any error occurred while processing porting in order.
                        Details of these codes are given in CustomerCare IFS "Porting In Error Code and Reasons".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PortingType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ASAP"/>
      <xsd:enumeration value="VTEN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Transaction">
    <xsd:sequence>
      <xsd:element name="date" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date of the transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dateTimeString" type="String24">
        <xsd:annotation>
          <xsd:documentation>Date and time of the transaction (without time zone) in a format the can be displayed to the user directly. Value will
                        usually be in operator local time.
                        String type because the dateTime type has a mandatory time zone and Prepaid IT doesn't actually know the time zone.
                        Format is: DD.MM.YYYY hh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="serialNumber" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The serial number of the voucher.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="activationCode" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The activation code of the voucher/recharge.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="info" type="String60" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Information of the transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="rechargeBenefit" type="String64" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>The benefit for recharge done.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="amount" type="Amount">
        <xsd:annotation>
          <xsd:documentation>The signed amount in Eurocents. Top ups are denoted positive, charges negative. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creditBalance" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>New balance of the customer (in Eurocents). Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="expiryDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date of the recharge expiry. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="displayComment" type="ShortComment">
        <xsd:annotation>
          <xsd:documentation>A customer facing description of the transaction.
                        For pack bookings or vouchers, this will be the pack name. For other
                        topups and charges, this will be the remote description of the corresponding
                        ER reference.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="agentComment" type="Comment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Comment entered by the agent with the credit debit request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="agent" type="PrepaidAgent" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Agent who had initiated the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EGNData">
    <xsd:sequence>
      <xsd:element name="usageDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>The date when a particular service was used. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="usageStartDateTimeString" type="String24">
        <xsd:annotation>
          <xsd:documentation>Usage Start date and time (without time zone) in a format the can be displayed to the user directly. Value will
                        usually be in operator local time.
                        String type because the dateTime type has a mandadory time zone and Prepaid IT doesn't actually know the time zone.
                        Format is: DD.MM.YYYY hh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="usageEndDateTimeString" type="String24" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Usage end date and time (without time zone) in a format the can be displayed to the user directly. Value will
                        usually be in operator local time.
                        String type because the dateTime type has a mandadory time zone and Prepaid IT doesn't actually know the time zone.
                        Format is: DD.MM.YYYY hh:mm:ss</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="telephoneNumber" type="DestinationNumber" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The destination number</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="serviceProvider" type="String128" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Information of the provider who actually provided the service. Refer to list in CustomerCare IFS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="serviceType" type="PackServiceTypeEnum">
        <xsd:annotation>
          <xsd:documentation>The service offered by the pack.
                        1 - voice, 2 - data, 3 - SMS, 4 - MMS, 5 - composite, 6 - standard-data.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="category" type="EgnDataCategoryEnum">
        <xsd:annotation>
          <xsd:documentation>Describes the category in which this information falls.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mainAmount" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Main account (in Eurocents) after usage. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="bonusAmount" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Bonus account (in Eurocents) after usage. This value shall not be present for Tchibo as Tchibo users do not have
                        bonus account. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cost" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Total cost of the service (in Eurocents). Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packDescription" type="CustomerPackDescription" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>The pack descriptions of the packs against which the service was utilized.
                        In case a pack is in a stackable pack group, the pack group description is returned instead.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="duration" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The service usage duration</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="sessionCreation" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>DateTime when session was created in YYYY-MM-DDThh:mm:ss format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="billingOption" type="String3" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Billing option of data charging, possible values are - TBB - Time Based Billing, VBB - Volume Based Billing.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="sessionId" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Session Id of customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="usageVolume" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Volume used in kilobytes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="usageTime" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Duration of usage in seconds.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="roamingOperator" type="String10" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Location information in case of data roming.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isThresholdBenefitApplied" type="xsd:boolean" maxOccurs="1" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This Flag is to indicate that whether the data has a 'Threshold Benefit' or not. "Airbag" field in the EGN display.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="comment" type="String128" maxOccurs="1" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Comment that can be displayed to the customer. "Bemerkung" field in the EGN display.
                        Sample content: "o2 Music Flatrate/o2 Germany", "SMS 22311/MEGA Com. GmbH"</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MigrationData">
    <xsd:sequence>
      <xsd:element name="sourceBrand" type="SourceBrandEnum">
        <xsd:annotation>
          <xsd:documentation>Brand on the source stack, e.g. Blau.
                        If the brand is not known it will be mapped to OTHER.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="migrationDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date when customer was migrated in YYYY-MM-DD format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerReferenceNumber" type="CustomerReferenceNumber">
        <xsd:annotation>
          <xsd:documentation>Source stack reference number of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackHistory">
    <xsd:sequence>
      <xsd:element name="packID" type="PackID">
        <xsd:annotation>
          <xsd:documentation>Pack id which is configured from CAT.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packName" type="String64">
        <xsd:annotation>
          <xsd:documentation>Name of the pack.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packState" type="PackStateEnum"/>
      <xsd:element name="action" type="String15">
        <xsd:annotation>
          <xsd:documentation>Action performed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packGroup" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The group identifier of the pack.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="agent" type="PrepaidAgent" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Agent who had initiated the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="comment" type="Comment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Comments by the agent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventDateTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date and time when event occurs i.e. subscription or unsubscription of pack.
                        Should be in YYYY-MM-DDThh:mm:ss format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HistoryRecord">
    <xsd:sequence>
      <xsd:element name="actionCode" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Action code of the history event. Refer to list in CustomerCare IFS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="comment" type="AccountContactHistoryComment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Description of history history event.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="callReason" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>CallReason is Thema. Refer to list in CustomerCare IFS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="process" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Process generating history event. Refer to list in CustomerCare IFS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="agent" type="PrepaidAgent" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Agent who had initiated the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="contactDateTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>DateTime of contact history made. Should be in YYYY-MM-DDThh:mm:ss format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="contactType" type="AccountContactTypeEnum">
        <xsd:annotation>
          <xsd:documentation>Type of the contact e.g. Automatic Event, Manual Contact.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TariffInfo">
    <xsd:sequence>
      <xsd:element name="tariffProductId" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Product ID of the current tariff.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tariffDesc" type="String128">
        <xsd:annotation>
          <xsd:documentation>Tariff description for client.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerTariffDesc" type="String128">
        <xsd:annotation>
          <xsd:documentation>Tariff description for display to customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="airBagApplicable" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates whether the tariff has an air bag or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChurnCustomerData">
    <xsd:sequence>
      <xsd:element name="pin" type="PIN" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>PIN number of customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dob" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date of birth. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="puk" type="PUK" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>PUK of customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="imsi" type="IMSI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>IMSI of customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="imei" type="IMEI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>IMEI of customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="deletionAmount" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Deleted Amount (Main Balance) of Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lastName" type="LastName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Last Name of Customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstName" type="FirstName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>First Name of Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="address" type="AddressData" minOccurs="0"></xsd:element>
      <xsd:element name="externalContractId" type="ExternalContractId">
        <xsd:annotation>
          <xsd:documentation>The external contract id.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="contractId" type="String15" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Deprecated. Will only be returned for client Tchibo. Contract Id. Eg. 549179xxxxxx</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lifeCycleState" type="LifeCycleStateEnum" minOccurs="0"/>
      <xsd:element name="delockCode" type="String40" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Sim locak code</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="delockDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date of delock code</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="contactHistory" type="HistoryRecord" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Array of HistoryRecord.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tchiboAdditionalInfo" type="TchiboAdditionalInfo" minOccurs="0"></xsd:element>
      <xsd:element name="iccid" type="IccId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>integrated chip card id.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountDeletionDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date when account is deleted. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="activationDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Activation date of customer should be in YYYY-MM-DD format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QueryCustomerData">
    <xsd:sequence>
      <xsd:element name="msisdn" type="QueryCustMSISDN" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>MSISDN number.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dob" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>From Date of Birth. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="toDob" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>To Date of Birth. Format: YYYY-MM-DD. The From Date of birth is mandatory for To Date of Birth</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="email" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Email of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="iccid" type="IccId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Integrated chip card id.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lastName" type="LastName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Last Name of Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstName" type="FirstName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>First Name of Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="address" type="AddressData" minOccurs="0"></xsd:element>
      <xsd:element name="imei" type="String15" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>IMEI of customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="purchaseDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>From Date of purchase. Format: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="toPurchaseDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>To Date of purchase. Format: YYYY-MM-DD. The From Date of Purchase is mandatory for To Date of Purchase</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="personalIdNumber" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Passport Number.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrderInfo">
    <xsd:sequence>
      <xsd:element name="orderId" type="TransactionID" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Unique Order Id of the original request. Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="OrderInfoStatusEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="functionName" type="String40" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Name of the original service requested. Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date when request was sent. Optional (Mandatory in case of successful request)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DSSEntry">
    <xsd:sequence>
      <xsd:element name="lastName" type="LastName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Last Name. Optional (Mandatory for activateDSSEntry)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstName" type="FirstName" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>First Name. Optional (Mandatory for activateDSSEntry)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="title" type="String10" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Customer's title. e.g. Dr., Prof., Mr.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="gender" type="GenderEnum" minOccurs="0"/>
      <xsd:element name="address" type="AddressData" minOccurs="0"></xsd:element>
      <xsd:element name="usage" type="DSSUsageEnum" minOccurs="0"/>
      <xsd:element name="cdRomUsage" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicate that DSS entry can be used in electronic directory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="printUsage" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicate that DSS entry can be used in printed directory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChangeSIMInfo">
    <xsd:sequence>
      <xsd:element name="msisdn" type="MSISDN">
        <xsd:annotation>
          <xsd:documentation>The MSISDN at the time the SIM card replacement order was created.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="oldIccid" type="IccId">
        <xsd:annotation>
          <xsd:documentation>The old ICCID before SIM replacement.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="newIccid" type="IccId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The ICCID of the new replacement SIM. Mandatory if status is ACTIVATION_IN_PROGRESS, ACTIVATION_FAILED, ACTIVATION_SUCCESSFUL, SHIPPED, SHIPMENT_RETURNED.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="SimChangeStatusEnum">
        <xsd:annotation>
          <xsd:documentation>Status of an existing SIM replacement request. For possible values see enumeration type.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="activationStartDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time when the activation of the SIM replacement was triggered by the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="activationEndDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time when replacement SIM card was activated in the network.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lapiExternalOrderId" type="LapiExternalOrderId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The ExternalOrderID returned by LAPI in the response to the CreateCustomerOrder operation for the SIM replacement.
                        Known as Websales ID in the PPIT CS GUI and LAPI GUI.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="reason" type="SimReplacementReason" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the reason for the requested SIM replacement.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="defaultFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The default fee for the SIM replacement for the given reason at the time the order was placed, in EuroCent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actualFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The actual fee paid by the customer, in EuroCent.
                        If the order fails (statuses: ordering failed, shipping failed) this amount is refunded.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderChannel" type="Channel" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Channel through which the SIM card replacement was ordered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="activationChannel" type="Channel" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Channel through which the activation of the SIM card replacement was requested.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date when the SIM replacement shipment was ordered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="shippingDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date when the SIM replacement was shipped.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackInfo">
    <xsd:complexContent>
      <xsd:extension base="ProductInfo">
        <xsd:sequence>
          <xsd:element name="packID" type="PackID">
            <xsd:annotation>
              <xsd:documentation>Pack id which is configured from CAT (Referenz-ID in CAT GUI)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="packName" type="String64">
            <xsd:annotation>
              <xsd:documentation>Name of the pack which is configured from CAT</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="customerPackDesc" type="CustomerPackDescription" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Brief description of the customer pack provided by the business which is configured in CAT.
                                ("Beschreibung fur Kunden" in CAT GUI)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="shortDisplayName" type="ShortDisplayName" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>A short display name for, e.g., USSD.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="bookingShortCode" type="BookingShortCode" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The booking short code which defines the sequence the customer has to enter to subscribe
                                the pack product via IVR.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="offerPeriodStartDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The start date of the offer period of the pack. Format: YYYY-MM-DD</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="offerPeriodEndDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The end date of the offer period of the pack. Format: YYYY-MM-DD</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="extendedEndDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Extended offer period end date. Format: YYYY-MM-DD</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="subscriptionChannel" type="SubscriptionChannel" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Complex type includes channel id and fee for channel.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="unsubscriptionChannel" type="Channel" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>The channel by which the pack can be unsubscribed. For possible values see the type enum.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="inLifeChannel" type="Channel" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>The channels where the pack can be displayed. For possible values see the type enumeration.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="packServiceType" type="PackServiceTypeEnum">
            <xsd:annotation>
              <xsd:documentation>The service offered by the pack:
                                1 - voice, 2 - data, 3 - SMS, 4 - MMS, 5 - composite, 6 - standard-data, 7 - MRP</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="packSubCategory" type="PackSubCategoryType" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>The subcategory of the pack</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="counter" type="Counter" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Contains the values of the counters defined for the pack.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="thresholdCounter" type="Counter" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the limit for the threshold counter.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="subscriptionID" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique ID of the pack subscription within Prepaid IT.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="packDesc" type="String64" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The Pack Description. (Name in CAT GUI)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="subscriptionCycle" type="Cycle">
            <xsd:annotation>
              <xsd:documentation>Cycle data for cyclic and noncyclic types.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="initialGracePeriod" type="xsd:int" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Length of initial grace period in days. Zero means no initial grace period.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="hasBillCap" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Flag to indicate if pack is BillCap pack.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="smsCommunication" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Flag to identify pack communication type</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mailCommunication" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Flag to identify pack communication type.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isTariffImmanent" type="xsd:boolean" maxOccurs="1" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates that the pack is immanent for the tariff, e.g. bonus packs for the Mix and Match tariffs and "o2
                                Kosten-Airbag".</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TariffHistory">
    <xsd:sequence>
      <xsd:element name="tariffID" type="ID">
        <xsd:annotation>
          <xsd:documentation>Tariff ID.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tariffName" type="String64">
        <xsd:annotation>
          <xsd:documentation>Name of the tariff</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="tariffState" type="String64">
        <xsd:annotation>
          <xsd:documentation>Status of the tariff for the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="action" type="String15">
        <xsd:annotation>
          <xsd:documentation>Action performed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="fee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Fee</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="agent" type="PrepaidAgent" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Agent who had initiated the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="comment" type="Comment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Comments by the agent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="eventDateTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date and time when event occurs i.e. subscription or unsubscription of pack.
                        Should be in YYYY-MM-DDThh:mm:ss format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DataOptionsInfo">
    <xsd:annotation>
      <xsd:documentation>This element is deprecated and will be removed in version 14 of this interface.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="dataId" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Data tariff id.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dataDesc" type="String128">
        <xsd:annotation>
          <xsd:documentation>Name of the Data Tariff.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="BrandID">
    <xsd:annotation>
      <xsd:documentation>Id for identifying Brand, e.g. O2:1 Blau:2 Tchibo:3</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int"/>
  </xsd:simpleType>
  <xsd:simpleType name="TenantID">
    <xsd:annotation>
      <xsd:documentation>Id for identifying Tenant, e.g. Telefonica:1 Tchibo:2</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int"/>
  </xsd:simpleType>
  <xsd:simpleType name="FrontendID">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TransactionID">
    <xsd:annotation>
      <xsd:documentation>Unique identifier for the request to track</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ServiceInfo">
    <xsd:sequence>
      <xsd:element name="brandID" type="BrandID"/>
      <xsd:element name="tenantID" type="TenantID"/>
      <xsd:group ref="ServiceInfoBasicGroup"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ServiceInfoBasic">
    <xsd:sequence>
      <xsd:group ref="ServiceInfoBasicGroup"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="ServiceInfoBasicGroup">
    <xsd:sequence>
      <xsd:element name="channelID" type="Channel">
        <xsd:annotation>
          <xsd:documentation>Channel from where the request is received. For possible values, see the channels allowed by configuration for the
                        client. If not allowed, an error is returned.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionID" type="TransactionID">
        <xsd:annotation>
          <xsd:documentation>
            This is a unique identifier for the request to track. Used for idempotency handling as described in the IFS (word
                        document).
            <br/>
            Note: The message id from the SOAP headers cannot be used instead, as not all clients are providing it yet.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="callingDateTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>DateTime of callingDateTime. Should be in YYYY-MM-DDThh:mm:ss format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="agent" type="Agent" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Agent who had initiated the request.
                        Optional. Mandatory in case of ApplyCreditDebit.
                        Not mandatory for Service Provider customers.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="roleId" type="RoleIdEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For the CS channel, the roleID is mandatory.
                        For other channels the roleID should not be set and will be ignored if present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="voID" type="VoID" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Dealer ID from where the request is initiated.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="frontendID" type="FrontendID">
        <xsd:annotation>
          <xsd:documentation>It shall contain the actual frontend that initiated the request, e.g WEBPORTAL-PREPAID WEBPORTAL-O2MORE
                        Prepaid IT does not actually use this value and will simply pass it on, hence there is not any restriction on it.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="ServiceResponse">
    <xsd:sequence>
      <xsd:element name="brandID" type="BrandID"/>
      <xsd:element name="tenantID" type="TenantID"/>
      <xsd:group ref="ServiceResponseBasicGroup"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ServiceResponseBasic">
    <xsd:sequence>
      <xsd:group ref="ServiceResponseBasicGroup"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="ServiceResponseBasicGroup">
    <xsd:sequence>
      <xsd:element name="transactionID" type="TransactionID">
        <xsd:annotation>
          <xsd:documentation>This is a unique identifier for the request to track.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="callingDateTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>DateTime of callingDateTime. Should be in YYYY-MM-DDThh:mm:ss format</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="success" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This flag indicates whether the request is successful or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="frontendID" type="FrontendID">
        <xsd:annotation>
          <xsd:documentation>It shall contain the actual frontend that initiated the request, e.g WEBPORTAL-PREPAID WEBPORTAL-O2MORE</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="GetAccountBalanceRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetAccountBalanceResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>106</td><td>MSISDN does not exist in the network</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned</td><td>Permanent</td></tr>
                <tr><td>500</td><td>Network Error: Error in Retrieving Balance Information.</td><td>Permanent</td></tr>
                <tr><td>501</td><td>Network Error </td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network Error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="balanceInfo" type="BalanceInfo" minOccurs="0"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResetAccountRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResetAccountResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active</td><td>Permanent</td></tr>
                <tr><td>207</td><td>Ongoing porting in/out order exist</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetNetworkServiceStatusRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetNetworkServiceStatusResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="networkBarringStatus" type="NetworkBarringStatus" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Network Barring status of all the services. Optional (Mandatory in case of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ImportAccountContactHistoryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="actionCode" type="xsd:int">
              <xsd:annotation>
                <xsd:documentation>Action code of the history event. Refer to Call Action list in CustomerCare IFS.
                                    Select SHOW_FLAG not equal 0 and look for MEMBER_NR for the "action-Code" int value.
                                    Displayed string should be MEMBER_VALUE (like in CS-GUI).</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="callReason" type="xsd:int">
              <xsd:annotation>
                <xsd:documentation>CallReason is Thema. Refer to Call Reason list in CustomerCare IFS.
                                    Note: The usage of callReason is described as below:
                                    1) Use Callreason.xls (attached in 5.11) and select SHOW_FLAG not equal 0 and look for MEMBER_NR value
                                    starting with MEMBER_NR of the associated process (e.g. 43xxxx) choosen, see below process field.
                                    Displayed string should be MEMBER_VALUE (like in CS-GUI).</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="process" type="xsd:int">
              <xsd:annotation>
                <xsd:documentation>Process generating history event. Refer to Process list in CustomerCare IFS.
                                    Note: The usage of process is described below.
                                    1) Use Process.xls and select SHOW_FLAG not equal 0.
                                    2) Select MEMBER_VALUE string from the sheet (e.g. ‘SubsetCode’), and note the corresponding MEMBER_NR
                                    value (e.g. 43).</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="comment" type="AccountContactHistoryComment" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Comment (Simple Type)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="contactDateTime" type="xsd:dateTime" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>DateTime of contact. Should be in YYYY-MM-DDThh:mm:ss format.
                                    Optional (sysdate will be taken in case of null received from client)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="contactType" type="AccountContactTypeEnum">
              <xsd:annotation>
                <xsd:documentation>Type of the contact e.g. Automatic Event, Manual Contact.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ImportAccountContactHistoryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>206</td><td>Invalid combination of process and call reason.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ExportAccountContactHistoryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="startDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Start date of the history events should be in YYYY-MM-DD format.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>End date of the history events should be in YYYY-MM-DD format.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ExportAccountContactHistoryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>205</td><td>Contact History not found.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="historyRecordArrayHolder" type="HistoryRecord" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Array of HistoryRecord. Optional (Mandatory in case of successful request with contact history)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPackHistoryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="startDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Start date for search criteria. Format: YYYY-MM-DD.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>End date for search criteria. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPackHistoryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>202</td><td>No Pack History available</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="packHistory" type="PackHistory" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Array of PackHistory.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPackCounterStatusRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPackCounterStatusResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>212</td><td>No Counter Pack Available</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network Error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="packCounters" type="PackCounters" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Array of PackCounter</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSIMInfoRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSIMInfoResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="simInfo" type="SIMInfo" minOccurs="0"/>
            <xsd:element name="nfcCapable" type="xsd:boolean">
              <xsd:annotation>
                <xsd:documentation>Indicates if the SIM card supports NFC functionality. If the field is not set, this property is unknown.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="CustomerCareRequest">
    <xsd:sequence>
      <xsd:element name="serviceInfo" type="ServiceInfo">
        <xsd:annotation>
          <xsd:documentation>Client and transaction information.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareRequestBasic">
    <xsd:sequence>
      <xsd:element name="serviceInfoBasic" type="ServiceInfoBasic">
        <xsd:annotation>
          <xsd:documentation>Client, transaction and request status information</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareMsisdnRequest">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareRequest">
        <xsd:sequence>
          <xsd:element name="msisdn" type="MSISDN">
            <xsd:annotation>
              <xsd:documentation>MSISDN (Simple Type)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareWithMsisdnOrIccIdRequest">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareRequest">
        <xsd:choice>
          <xsd:element name="msisdn" type="MSISDN">
            <xsd:annotation>
              <xsd:documentation>The field MSISDN is used to identify the SIM card.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="iccId" type="IccId">
            <xsd:annotation>
              <xsd:documentation>The field ICCID is used to identify the SIM card.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareOptionalMsisdnRequest">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareRequest">
        <xsd:sequence>
          <xsd:element name="msisdn" type="MSISDN" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The field MSISDN is optional in certain cases.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareGeneralResult">
    <xsd:sequence>
      <xsd:element name="serviceResponse" type="ServiceResponse">
        <xsd:annotation>
          <xsd:documentation>Client, transaction and request
                        status information</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareResult">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareGeneralResult">
        <xsd:sequence>
          <xsd:element name="resultCode" type="ResultCodeEnum"/>
          <xsd:element name="reasonMsg" type="String256">
            <xsd:annotation>
              <xsd:documentation>Description of the Message</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareGeneralResultBasic">
    <xsd:sequence>
      <xsd:element name="serviceResponseBasic" type="ServiceResponseBasic">
        <xsd:annotation>
          <xsd:documentation>Client, transaction and request status information</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareResultBasic">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareGeneralResultBasic">
        <xsd:sequence>
          <xsd:element name="resultCode" type="ResultCodeEnum"/>
          <xsd:element name="reasonMsg" type="String256">
            <xsd:annotation>
              <xsd:documentation>Description of the Message</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ApplyCreditDebitRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="accountType" type="AccountTypeEnum">
              <xsd:annotation>
                <xsd:documentation>Type of the account: 0 - Main, 1 - Bonus</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="amount" type="Amount">
              <xsd:annotation>
                <xsd:documentation>Amount to be credited/debited is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:choice minOccurs="0">
              <xsd:element name="extendExpiryDate" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>If true the expiry date is prolongated with a pre-configured value.
                                        Otherwise the expiry date is not prolongated. This element is mandatory for service providers.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="daysExtended" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>Number of days by which expiry date shall be prolongated.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="reason" type="xsd:int" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Reason code for credit or debit (Refer to process list in CustomerCare IFS.)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="comment" type="Comment" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Comment (Simple Type)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ApplyCreditDebitResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>501</td><td>Network Error</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network Error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPortingOutStatusRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPortingOutStatusResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>213</td><td>No Porting-out Order exists</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="portingOutInfo" type="PortingOutInfo" minOccurs="0" maxOccurs="unbounded"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPortingInStatusRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence></xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPortingInStatusResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>200</td><td>No Porting-in order exists.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="portingInStatus" type="PortingInStatus" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Optional(Mandatory in case of successful request )</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UpdatePortingInOrderRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="portingInInfo" type="PortingInInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Porting in information of the customer.
                                    Optional (Mandatory in case of Import_Rejected received and resending the request with corrected data)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="portingOrderId" type="xsd:long">
              <xsd:annotation>
                <xsd:documentation>Order id of the porting in order.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="portingDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Date of the porting-in if the order is confirmed. Format: YYYY-MM-DD
                                    Optional (Mandatory if the porting order is in import_cancelled state and resending the request for
                                    negotiation of date)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UpdatePortingInOrderResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>200</td><td>No Porting-in order exists.</td><td>Permanent</td></tr>
                <tr><td>208</td><td>Invalid request due to non editable field.</td><td>Permanent</td></tr>
                <tr><td>209</td><td>Invalid Porting Order ID and Interim MSISDN combination.</td><td>Permanent</td></tr>
                <tr><td>219</td><td>Invalid porting date (too late).</td><td>Permanent</td></tr>
                <tr><td>220</td><td>Invalid porting date (too early).</td><td>Permanent</td></tr>
                <tr><td>221</td><td>Operation not permitted, porting workflow in invalid state.</td><td>Permanent</td></tr>
                <tr><td>223</td><td>Porting date not in allowed porting dates.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CancelPortingInOrderRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="portingOrderId" type="xsd:long">
              <xsd:annotation>
                <xsd:documentation>Order id of the porting in order.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CancelPortingInOrderResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>200</td><td>No Porting-in order exists.</td><td>Permanent</td></tr>
                <tr><td>209</td><td>Invalid Porting Order ID and Interim MSISDN combination</td><td>Permanent</td></tr>
                <tr><td>210</td><td>Porting order could not be cancelled at this state of porting order</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CancelFailedPortingOutOrderRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="portingOrderId" type="xsd:long">
              <xsd:annotation>
                <xsd:documentation>Order id of the porting out order.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CancelFailedPortingOutOrderResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>209</td><td>Invalid Porting Order ID and MSISDN combination</td><td>Permanent</td></tr>
                <tr><td>210</td><td>Porting order could not be cancelled at this state of porting order</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeAccountOwnerRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="changeCustomer" type="ChangeAccountOwner"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeAccountOwnerResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeWhoCalledServiceRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="action" type="ActionEnum">
              <xsd:annotation>
                <xsd:documentation>Action whether to disable or enable who called service. 0: Enable, 1: Disable.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeWhoCalledServiceResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>113</td><td>MSISDN is already unbarred</td><td>Permanent</td></tr>
                <tr><td>114</td><td>MSISDN is already barred</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ShowVoiceMailboxPINStatusRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ShowVoiceMailboxPINStatusResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>10</td><td>Timeout</td><td>Transient</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="pinStatus" type="xsd:int" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Voice mailbox PIN status of the customer</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeVoiceMailboxPINRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="pin" type="PIN">
              <xsd:annotation>
                <xsd:documentation>New Voice mailbox PIN of the customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeVoiceMailboxPINResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetEGNDataRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="startDate" type="xsd:date">
              <xsd:annotation>
                <xsd:documentation>Start date for search criteria. The earliest possible start date is limited by the storage period configured in
                                    PPIT and cannot be earlier than the date when the customer gave his agreement to store EVN data. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endDate" type="xsd:date">
              <xsd:annotation>
                <xsd:documentation>End date for search criteria. Must not be in the future. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetEGNDataResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>403</td><td>EVN flag is not set for customer.</td><td>Permanent</td></tr>
                <tr><td>227</td><td>Date range outside storage period.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="migrationData" type="MigrationData" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Migration relevant data of the customer</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="egnData" type="EGNData" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Array of the EGNData</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetTopUpsAndChargesRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="startDate" type="xsd:date">
              <xsd:annotation>
                <xsd:documentation>Start date for search criteria. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endDate" type="xsd:date">
              <xsd:annotation>
                <xsd:documentation>End date for search criteria. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetTopUpsAndChargesResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="migrationData" type="MigrationData" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Migration relevant data of the customer</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="transaction" type="Transaction" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Lists the individual top-up and charge transactions.
                                    This list will be empty if no transaction could be found.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeactivateAccountRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeactivateAccountResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BarUnbarAccountRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="serviceType" type="ServiceTypeEnum">
              <xsd:annotation>
                <xsd:documentation>Network Service Types:
                                    0- Premium Service (0900), 1- Data, 2- SIM (in- and outgoing), 3- SIM (outgoing only),
                                    4- Data Usage Outbound Roaming, 5- MO Calls to International, 6- MO Calls Roaming, 7- MT Calls Roaming,
                                    8- MT Calls
                                    (For service Type 3, 5, 6 generic unbar request will be generated. Which means if one of the 3, 5, 6
                                    service types is unbarred, and then all of them in unbarred state. Same applies for 7 and 8 which are
                                    for incoming)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="action" type="ActionEnum"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BarUnbarAccountResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>2</td><td>Chosen target tariff not allowed</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>113</td><td>MSISDN is already unbarred</td><td>Permanent</td></tr>
                <tr><td>114</td><td>MSISDN is already barred</td><td>Permanent</td></tr> </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeCLIPorCLIRRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="serviceType" type="xsd:int">
              <xsd:annotation>
                <xsd:documentation>Possible values: 0 - CLIP or 1 - CLIR</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="action" type="CLIPCLIREnum">
              <xsd:annotation>
                <xsd:documentation>Possible values would be: 0 - ON, 1 - OFF, 2- PCB (Per Call Basis, only for serviceType CLIR),
                                    3 - PCBN (Per Call Basis Not Active, only for serviceType CLIR)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeCLIPorCLIRResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SimValidationRequest">
    <xsd:annotation>
      <xsd:documentation>For on-demand SIMs, no MSISDN may be provided and both ICCID and PUK2 must be supplied.
                Otherwise the MSISDN must be present, and ICCID or activation code can optionally be provided in order to check
                that the MSISDN and the preprovisioned SIM card data match.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareOptionalMsisdnRequest">
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="iccId" type="IccId">
                <xsd:annotation>
                  <xsd:documentation>ICCID of the SIM card. If the MSISDN is not present, the ICCID is mandatory.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="activationCode" type="String6">
                <xsd:annotation>
                  <xsd:documentation>Activation Code shall be the last 6 digits of ICCID.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="puk2" type="PUK" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>PUK2 of the SIM card. If the MSISDN is not present, the PUK2 is mandatory.
                                    The PUK2 may only be given for On-Demand SIMs.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeCustomerDataRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:choice>
              <xsd:element name="customerData" type="CustomerData" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>
                    Optional but between CustomerData and PermitCallStore either one is Mandatory.
                    <br/>
                    If the 'validated' attribute in Email element is absent, the new address will be invalidated if and
                                        only if it differs from the currently stored email address.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="permitsCallStore" type="PermitsCallStoreEnum" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Defines whether and how call details may be stored, e.g., for use in EGN reports.
                                        This defaults to "none.".</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="tchiboAdditionalInfo" type="TchiboAdditionalInfo" minOccurs="0"></xsd:element>
            <xsd:element name="preferredCommunicationChannel" type="PreferredCommunicationChannelEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Optional. The field may be absent in case no preferred channel is known for the customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="forwardData" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Indicates whether the data is allowed to forward to external parties or not.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="addressAlreadyChecked" type="xsd:boolean">
              <xsd:annotation>
                <xsd:documentation>Whether the address was already checked by the frontend.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCustomerDataRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="listDisallowedUseCases" type="xsd:boolean">
              <xsd:annotation>
                <xsd:documentation>Whether the list of currently disallowed use cases should be filled. Should be set to false if the
                                    frontend does not use the mechanism.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SimValidationResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>102</td><td>MSISDN ICCID match check failed</td><td>Permanent</td></tr>
                <tr><td>103</td><td>MSISDN and Activation Code mapping not valid</td><td>Permanent</td></tr>
                <tr><td>105</td><td>Registration is ongoing</td><td>Permanent</td></tr>
                <tr><td>107</td><td>Customer is already registered</td><td>Permanent</td></tr>
                <tr><td>108</td><td>Registration is success and barred because of welcome letter came back</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>118</td><td>Pending online order exists: No registration possible, only activation</td><td>Permanent</td></tr>
                <tr><td>120</td><td>Canceled or failed online order exists</td><td>Permanent</td></tr>
                <tr><td>121</td><td>Postpaid SIM not allowed</td><td>Permanent</td></tr>
                <tr><td>122</td><td>Fully whitelabel SIM not allowed for On demand registration</td><td>Permanent</td></tr>
                <tr><td>124</td><td>SIM not found</td><td>Permanent</td></tr>
                <tr><td>125</td><td>PUK2 does not match</td><td>Permanent</td></tr>
                <tr><td>126</td><td>PUK2 missing but ICCID given, MSISDN not given</td><td>Permanent</td></tr>
                <tr><td>127</td><td>MSISDN given, but PUK2 also given</td><td>Permanent</td></tr>
                <tr><td>128</td><td>Not an On Demand SIM</td><td>Permanent</td></tr>
                <tr><td>132</td><td>Cross usage not allowed</td><td>Permanent</td></tr>
                </tbody></table>
                <p>Error code 111 is returned: If MSISDN is not provisioned, if MSISDN is not available, if for example Portal uses non-LOOP
                O2 MSISDN’s (Tchibo, SP) or Tchibo using the LOOP O2 MSISDN’s.</p>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="tariffInfo" type="TariffInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Current Tariff of the SIM card. Only present if the request is successful and the SIM card is not an
                                    on-demand SIM.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeCustomerDataResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>1</td><td>Customer is not Active.</td><td>Permanent</td></tr>
                <tr><td>3</td><td>Customer black list check failed</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>5</td><td>Address is not valid</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned.</td><td>Permanent</td></tr>
                <tr><td>467</td><td>The customer is barred because of fraud</td><td>Permanent</td></tr>
                <tr><td>503</td><td>Customer Mailable Flag validation failed.</td><td>Permanent</td></tr>
                <tr><td>515</td><td>Brand does not support the customer agreement flag reminder</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="addressCheckResult" type="AddressResult" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>In case of accepted address, result code 0 is returned. If the address was corrected, it is returned
                                    too.
                                    In case of error 5, i.e. the provided address is not valid, a list with correction candidates
                                    can be returned if they are available. Otherwise nothing is returned.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="AddressResult">
    <xsd:choice minOccurs="0">
      <xsd:element name="correctedAddress" type="AddressData">
        <xsd:annotation>
          <xsd:documentation>Returned if the address was corrected and then accepted.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="addressCorrectionCandidates" type="AddressList">
        <xsd:annotation>
          <xsd:documentation>Returned if the address was not accepted but correction candidates are available.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="BankAccountBaseType">
    <xsd:sequence>
      <xsd:element name="iban" type="IBAN"/>
      <xsd:element name="bic" type="BIC"/>
      <xsd:element name="accountNumber" type="AccountNumber" minOccurs="0"/>
      <xsd:element name="bankCode" type="BankCode" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BankAccountData">
    <xsd:complexContent>
      <xsd:extension base="BankAccountBaseType">
        <xsd:sequence>
          <xsd:element name="bankName" type="BankName" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BankAccountCustomerData">
    <xsd:annotation>
      <xsd:documentation>Only present if customer has specified a bank account.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="BankAccountBaseType">
        <xsd:sequence>
          <xsd:element name="sepaMandateId" type="MandateId" minOccurs="0"/>
          <xsd:element name="bankAccountOwner" type="AccountOwner"/>
          <xsd:element name="thirdPartyAccountOwner" type="ThirdPartyBankAccountOwner" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Present if bank account belongs to a third party account owner</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="bankName" type="BankName" minOccurs="0"/>
          <xsd:element name="creditorId" type="CreditorId"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ThirdPartyAccountOwnerToRegister">
    <xsd:complexContent>
      <xsd:extension base="ThirdPartyBankAccountOwner">
        <xsd:sequence>
          <xsd:element name="bankAccountOwner" type="AccountOwner"/>
          <xsd:element name="addressAlreadyChecked" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Defines whether or not Prepaid IT should validate the given address. If no address was provided, the flag
                                is ignored.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BankAccountRegisterDirectDebit">
    <xsd:complexContent>
      <xsd:extension base="BankAccountBaseType">
        <xsd:sequence>
          <xsd:element name="bankName" type="BankName" minOccurs="0"/>
          <xsd:element name="thirdPartyAccountOwner" type="ThirdPartyAccountOwnerToRegister" minOccurs="0"/>
          <xsd:element name="quality" type="DataCheckQualityEnum">
            <xsd:annotation>
              <xsd:documentation>Defines how the bank data has been checked.
                                The value CHECKED_UNKNOWN is only valid for SIM orders.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GetCustomerDataResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active, but churned MSISDN exists.</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned (No active or churn records found)</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="msisdn" type="MSISDN" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>MSISDN number. Eg. 49179xxxxx Optional (Mandatory in case of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="externalContractId" type="ExternalContractId" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>The external contract id. Optional (Mandatory when of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="contractId" type="String15" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Deprecated. Will only be returned for client Tchibo or channel ONLINESELFCARE.
                                    Contract Id. E.g. "549179xxxxxx". Mandatory when request successful.
                                    This is a PPIT-internal ID and should not be communicated to customers.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="customerData" type="CustomerData" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Optional (Mandatory when request successful)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="permitsCallStore" type="PermitsCallStoreEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Defines whether and how call details may be stored, e.g., for use in EGN reports.
                                    This defaults to "none.".
                                    This field is optional, but will be set if the request was successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="lifeCycleState" type="LifeCycleStateEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Optional (Mandatory in case of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="migrationDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>This field is only present for customers who have been migrated from a foreign Prepaid stack.
                                    If present, this is the date on which the customer has been migrated into Prepaid IT.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="preferredCommunicationChannel" type="PreferredCommunicationChannelEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Optional. The field may be absent in case no preferred channel is known for the customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="tariffInfo" type="TariffInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Current Tariff of the MSISDN.
                                    Optional (Mandatory in case of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="tchiboAdditionalInfo" type="TchiboAdditionalInfo" minOccurs="0"></xsd:element>
            <xsd:element name="forwardData" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Indicates whether the data is allowed to forward to external parties or not.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="dataOptionsInfo" type="DataOptionsInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>This element is deprecated and will be removed in version 14 of this interface.
                                    Data tariff info of the customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationChannel" type="Channel" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>The channel used during registration of the customer. For possible values see the type enumeration.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationType" type="RegistrationTypeEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>The registration types are: 1 - Address data already verified , 2 - Address data not verified yet</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="bankAccount" type="BankAccountCustomerData" minOccurs="0"/>
            <xsd:element name="directDebitRegistrationState" type="DirectDebitRegistrationStateEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>The registration state for Direct Debit. Present if the request was successful and the brand has
                                    Direct Debit enabled.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>The date the card was registered. Optional (Mandatory when of request successful)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="disallowedUseCases" type="DisallowedUseCasesList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>A list of use cases that are currently not allowed.
                                    Only filled if requested by setting listDisallowedUseCases = true in the request.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="DisallowedUseCasesList">
    <xsd:sequence>
      <xsd:element name="disallowedUseCase" type="DisallowedUseCaseElement" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DisallowedUseCaseElement">
    <xsd:sequence>
      <xsd:element name="useCase" type="DisallowedUseCaseEnum">
        <xsd:annotation>
          <xsd:documentation>Use case that is currently not allowed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="reason" type="DisallowedReasonEnum">
        <xsd:annotation>
          <xsd:documentation>The most important reason why the use case is not allowed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="DisallowedUseCaseEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REGISTER_FOR_DIRECT_DEBIT">
        <xsd:annotation>
          <xsd:documentation>Not allowed to call registerForDirectDebit (CrmOrder item)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CHANGE_BANK_ACCOUNT">
        <xsd:annotation>
          <xsd:documentation>Not allowed to call changeBankAccount (SOAP action)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CHANGE_RECHARGE_OPTIONS">
        <xsd:annotation>
          <xsd:documentation>Not allowed to call changeRechargeOptions (CrmOrder item)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOP_UP_ON_DEMAND">
        <xsd:annotation>
          <xsd:documentation>Not allowed call to rechargeViaDirectDebit (CrmOrder item)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CHANGE_CUSTOMER_DATA">
        <xsd:annotation>
          <xsd:documentation>Not allowed call to changeCustomerData (SOAP action)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIM_REPLACEMENT">
        <xsd:annotation>
          <xsd:documentation>Not allowed call to shipReplacementSim (CrmOrder item)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DisallowedReasonEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CUSTOMER_IN_DUNNING">
        <xsd:annotation>
          <xsd:documentation>The customer is barred because of dunning and not because of fraud</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CUSTOMER_IN_FRAUD">
        <xsd:annotation>
          <xsd:documentation>The customer is barred because of fraud</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DIRECT_DEBIT_NOT_ALLOWED_FOR_BRAND">
        <xsd:annotation>
          <xsd:documentation>The brand does not allow direct debit registrations</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DIRECT_DEBIT_SUSPENDED">
        <xsd:annotation>
          <xsd:documentation>Direct debit is suspended</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DIRECT_DEBIT_REGISTRATION_ONGOING">
        <xsd:annotation>
          <xsd:documentation>Direct debit registration is ongoing</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INVALID_DIRECT_DEBIT_STATE">
        <xsd:annotation>
          <xsd:documentation>Invalid Direct Debit State</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PERMANENT_BACKEND_SYSTEM_ERROR">
        <xsd:annotation>
          <xsd:documentation>Permanent error in a backend system</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="RECHARGE_LIMIT_EXCEEDED">
        <xsd:annotation>
          <xsd:documentation>Direct debit limit exceeded</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TOO_MANY_BANK_ACCOUNT_CHANGES">
        <xsd:annotation>
          <xsd:documentation>Too many bank account changes were performed in the past</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIM_AUTO_BARRED_OR_HOTLINED">
        <xsd:annotation>
          <xsd:documentation>The SIM is barred or hotlined</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="GetPartnerBenefitPackRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="campaignName" type="String50">
              <xsd:annotation>
                <xsd:documentation>Name of the campaign, defined by Business.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="packServiceType" type="String40">
              <xsd:annotation>
                <xsd:documentation>The service offered by the partner benefit pack being queried: sms, min, mb Only these services can be
                                    present in a partner benefit pack, so if any other service type is sent in the request, the error code 4
                                    shall be returned by PPIT, indicating the wrong parameters in the request.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="benefitAmount" type="xsd:long">
              <xsd:annotation>
                <xsd:documentation>Benefit amount for the pack e.g. number of sms, free minutes or data in mb.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPartnerBenefitPackResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>505</td><td>No partner benefit pack exists for given campaign name, service type and benefit amount.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="partnerBenefitPackID" type="xsd:int" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Unique ID of the pack subscription within Prepaid IT.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPreferredCommunicationChannelRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPreferredCommunicationChannelResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned.</td><td>Permanent</td></tr>  </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="preferredCommunicationChannel" type="PreferredCommunicationChannelEnum" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Optional. The field may be absent in case no preferred channel is known for the customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetProductListRequest">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="limitResponseTo" type="ProductTypeFilterList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Limit the response generated by the request to certain product types.
                                    &lt;em>If not specified, the information for all products will be returned.&lt;/em></xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetProductListResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="products" type="AvailableProductsList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is omitted in case the result is not successful.
                                    In case no products are available, an empty list is returned.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetChurnCustomerDataRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetChurnCustomerDataResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>510</td><td>MSISDN is not churned</td><td>Permanent</td></tr>  </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="msisdn" type="MSISDN" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>MSISDN number. Eg. 49179xxxxx. Optional (Mandatory in case of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="churnCustomerData" type="ChurnCustomerData" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>List of of churnCustomerData records. Optional (Mandatory in case of successful request)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetOrderStatusRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetOrderStatusResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>509</td><td>Too Many Requests</td><td>Transient</td></tr>
                <tr><td>512</td><td>Previous request already in process.</td><td>Transient</td></tr>
                <tr><td>513</td><td>Previous No record found</td><td>Transient</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="orderInfo" type="OrderInfo" minOccurs="0" maxOccurs="unbounded"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SearchCustomersRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="queryCustomerData" type="QueryCustomerData">
              <xsd:annotation>
                <xsd:documentation>Input data to query the customers. All String fields support the wildcard character
                                    *(multiple characters) and ? (single character). If no wildcard is given in input field
                                    then exact match will be searched for that field.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SearchCustomersResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>11</td><td>No input given for search</td><td>Permanent</td></tr>
                <tr><td>12</td><td>Too many records found, please refine the search criteria. </td><td>Permanent</td></tr>
                <tr><td>513</td><td>No record found</td><td>Transient</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="queryCustomerData" type="QueryCustomerData" minOccurs="0" maxOccurs="unbounded"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeSIMRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="iccid" type="IccId" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>ICCID of the new SIM card.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeSIMResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>121</td><td>Postpaid SIM not allowed</td><td>Permanent</td></tr>
                <tr><td>123</td><td>Fully whitelabel SIM expected</td><td>Permanent</td></tr>
                <tr><td>508</td><td>Given ICCID does not exist in pool</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActivateReplacementSimRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="newIccid" type="IccId">
              <xsd:annotation>
                <xsd:documentation>The ICCID of the SIM replacement to be activated.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="birthDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Birth date given by the customer as authentication token.
                                    If given, it will be checked against the birth date stored for the customer.
                                    If the birth dates don't match, error 136 is returned and the SIM replacement is not activated.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActivateReplacementSimResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>105</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>121</td><td>Postpaid SIM not allowed</td><td>Permanent</td></tr>
                <tr><td>123</td><td>Fully whitelabel SIM expected</td><td>Permanent</td></tr>
                <tr><td>133</td><td>No SIM card with the given ICCID was shipped to the customer.</td><td>Permanent</td></tr>
                <tr><td>134</td><td>A SIM card activation is already in progress.</td><td>Transient</td></tr>
                <tr><td>135</td><td>Wrong SIM network operator.</td><td>Permanent</td></tr>
                <tr><td>136</td><td>Wrong customer authentication code given.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSIMStatisticsRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="startDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Date after which statistics are required, should be in YYYY-MM-DD format.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Date before which statistics are required, should be in YYYY-MM-DD format.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSIMStatisticsResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>513</td><td>No record found</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="simStatistics" type="ChangeSIMInfo" minOccurs="0" maxOccurs="unbounded"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSIMHistoryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"></xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSIMHistoryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>513</td><td>No record found</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="simHistory" type="ChangeSIMInfo" minOccurs="0" maxOccurs="unbounded"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActivateDSSEntryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="dssEntry" type="DSSEntry">
              <xsd:annotation>
                <xsd:documentation>DSS Entry of customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActivateDSSEntryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>506</td><td>MSISDN is ported out</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeactivateDSSEntryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeactivateDSSEntryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>507</td><td>No dss entry found for MSISDN</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetDSSEntryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetDSSEntryResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>506</td><td>MSISDN is ported out</td><td>Permanent</td></tr>
                <tr><td>507</td><td>No dss entry found for MSISDN</td><td>Permanent</td></tr>
                </tbody></table>
                <p>On successful webservice call following response will be sent back to caller. If no DSS Entry is available for customer
                then an error message is return and no fields will be returned. Only if DSS entry is triggered to DTAG fields will be
                returned.</p>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="requestStatus" type="DSSRequestStatusEnum" minOccurs="0"/>
            <xsd:element name="dssEntry" type="DSSEntry" minOccurs="0"></xsd:element>
            <xsd:element name="iccid" type="IccId" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>ICCID of the SIM card.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="responseStatus" type="DSSResponseStatusEnum" minOccurs="0"/>
            <xsd:element name="rejectionCode" type="xsd:int" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Reason code from DSS in case request is rejected from DSS</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="rejectionDesc" type="String64" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Description of rejection</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="command" type="xsd:int" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Describe the type of current entry/request.
                                    Possible values: 1 - Create/Modify (activateDSS), 3 - Delete (deactivateDSS)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetTariffChangeHistoryRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="startDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Start date for search criteria. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>End date for search criteria. Format: YYYY-MM-DD</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetTariffChangeHistoryResult">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="tariffHistory" type="TariffHistory" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Array of TariffHistory records. Optional (Mandatory in case of request successful and tariff history
                                    available)</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeCustomerCommChannelRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="packSubscriptionID" type="xsd:int">
              <xsd:annotation>
                <xsd:documentation>Unique ID of the pack subscription within Prepaid IT</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="smsCommunication" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Value false means the SMS will not be sent.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="mailCommunication" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Value false means the email will not be sent</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeCustomerCommChannelResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>106</td><td>MSISDN does not exist in the network</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PrepaidITServiceError">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<h4>This fault is thrown in the following error cases:</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>13</td><td>Request with same transaction id but different parameters or request type exists</td><td>Permanent</td></tr>
                <tr><td>14</td><td>Request with same transaction id still ongoing</td><td>Transient</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="resultCode" type="ResultCodeEnum"/>
      <xsd:element name="reasonMsg" type="String256">
        <xsd:annotation>
          <xsd:documentation>Description of the Message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="PrepaidITServiceSystemFault" type="PrepaidITServiceError"/>
  <xsd:simpleType name="RoleIdEnum">
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Role Id code</xsd:documentation>
        <xsd:documentation>Role Id</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>No Role (default)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Administrator</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Supervisor</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>CS Agent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Fraud Agent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>Read only Agent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NationalityEnum">
    <xsd:annotation>
      <xsd:documentation>The NationalityEnum is a type-safe enumeration of nationality according to the country code in ISO3166-1alpha2 format. If
                the country is not in the list, XX can be used instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AD"/>
      <xsd:enumeration value="AE"/>
      <xsd:enumeration value="AF"/>
      <xsd:enumeration value="AG"/>
      <xsd:enumeration value="AI"/>
      <xsd:enumeration value="AL"/>
      <xsd:enumeration value="AM"/>
      <xsd:enumeration value="AO"/>
      <xsd:enumeration value="AQ"/>
      <xsd:enumeration value="AR"/>
      <xsd:enumeration value="AS"/>
      <xsd:enumeration value="AT"/>
      <xsd:enumeration value="AU"/>
      <xsd:enumeration value="AW"/>
      <xsd:enumeration value="AX"/>
      <xsd:enumeration value="AZ"/>
      <xsd:enumeration value="BA"/>
      <xsd:enumeration value="BB"/>
      <xsd:enumeration value="BD"/>
      <xsd:enumeration value="BE"/>
      <xsd:enumeration value="BF"/>
      <xsd:enumeration value="BG"/>
      <xsd:enumeration value="BH"/>
      <xsd:enumeration value="BI"/>
      <xsd:enumeration value="BJ"/>
      <xsd:enumeration value="BL"/>
      <xsd:enumeration value="BM"/>
      <xsd:enumeration value="BN"/>
      <xsd:enumeration value="BO"/>
      <xsd:enumeration value="BQ"/>
      <xsd:enumeration value="BR"/>
      <xsd:enumeration value="BS"/>
      <xsd:enumeration value="BT"/>
      <xsd:enumeration value="BV"/>
      <xsd:enumeration value="BW"/>
      <xsd:enumeration value="BY"/>
      <xsd:enumeration value="BZ"/>
      <xsd:enumeration value="CA"/>
      <xsd:enumeration value="CC"/>
      <xsd:enumeration value="CD"/>
      <xsd:enumeration value="CF"/>
      <xsd:enumeration value="CG"/>
      <xsd:enumeration value="CH"/>
      <xsd:enumeration value="CI"/>
      <xsd:enumeration value="CK"/>
      <xsd:enumeration value="CL"/>
      <xsd:enumeration value="CM"/>
      <xsd:enumeration value="CN"/>
      <xsd:enumeration value="CO"/>
      <xsd:enumeration value="CR"/>
      <xsd:enumeration value="CU"/>
      <xsd:enumeration value="CV"/>
      <xsd:enumeration value="CW"/>
      <xsd:enumeration value="CX"/>
      <xsd:enumeration value="CY"/>
      <xsd:enumeration value="CZ"/>
      <xsd:enumeration value="DE"/>
      <xsd:enumeration value="DJ"/>
      <xsd:enumeration value="DK"/>
      <xsd:enumeration value="DM"/>
      <xsd:enumeration value="DO"/>
      <xsd:enumeration value="DZ"/>
      <xsd:enumeration value="EC"/>
      <xsd:enumeration value="EE"/>
      <xsd:enumeration value="EG"/>
      <xsd:enumeration value="EH"/>
      <xsd:enumeration value="ER"/>
      <xsd:enumeration value="ES"/>
      <xsd:enumeration value="ET"/>
      <xsd:enumeration value="FI"/>
      <xsd:enumeration value="FJ"/>
      <xsd:enumeration value="FK"/>
      <xsd:enumeration value="FM"/>
      <xsd:enumeration value="FO"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="GA"/>
      <xsd:enumeration value="GB"/>
      <xsd:enumeration value="GD"/>
      <xsd:enumeration value="GE"/>
      <xsd:enumeration value="GF"/>
      <xsd:enumeration value="GG"/>
      <xsd:enumeration value="GH"/>
      <xsd:enumeration value="GI"/>
      <xsd:enumeration value="GL"/>
      <xsd:enumeration value="GM"/>
      <xsd:enumeration value="GN"/>
      <xsd:enumeration value="GP"/>
      <xsd:enumeration value="GQ"/>
      <xsd:enumeration value="GR"/>
      <xsd:enumeration value="GS"/>
      <xsd:enumeration value="GT"/>
      <xsd:enumeration value="GU"/>
      <xsd:enumeration value="GW"/>
      <xsd:enumeration value="GY"/>
      <xsd:enumeration value="HK"/>
      <xsd:enumeration value="HM"/>
      <xsd:enumeration value="HN"/>
      <xsd:enumeration value="HR"/>
      <xsd:enumeration value="HT"/>
      <xsd:enumeration value="HU"/>
      <xsd:enumeration value="ID"/>
      <xsd:enumeration value="IE"/>
      <xsd:enumeration value="IL"/>
      <xsd:enumeration value="IM"/>
      <xsd:enumeration value="IN"/>
      <xsd:enumeration value="IO"/>
      <xsd:enumeration value="IQ"/>
      <xsd:enumeration value="IR"/>
      <xsd:enumeration value="IS"/>
      <xsd:enumeration value="IT"/>
      <xsd:enumeration value="JE"/>
      <xsd:enumeration value="JM"/>
      <xsd:enumeration value="JO"/>
      <xsd:enumeration value="JP"/>
      <xsd:enumeration value="KE"/>
      <xsd:enumeration value="KG"/>
      <xsd:enumeration value="KH"/>
      <xsd:enumeration value="KI"/>
      <xsd:enumeration value="KM"/>
      <xsd:enumeration value="KN"/>
      <xsd:enumeration value="KP"/>
      <xsd:enumeration value="KR"/>
      <xsd:enumeration value="KW"/>
      <xsd:enumeration value="KY"/>
      <xsd:enumeration value="KZ"/>
      <xsd:enumeration value="LA"/>
      <xsd:enumeration value="LB"/>
      <xsd:enumeration value="LC"/>
      <xsd:enumeration value="LI"/>
      <xsd:enumeration value="LK"/>
      <xsd:enumeration value="LR"/>
      <xsd:enumeration value="LS"/>
      <xsd:enumeration value="LT"/>
      <xsd:enumeration value="LU"/>
      <xsd:enumeration value="LV"/>
      <xsd:enumeration value="LY"/>
      <xsd:enumeration value="MA"/>
      <xsd:enumeration value="MC"/>
      <xsd:enumeration value="MD"/>
      <xsd:enumeration value="ME"/>
      <xsd:enumeration value="MF"/>
      <xsd:enumeration value="MG"/>
      <xsd:enumeration value="MH"/>
      <xsd:enumeration value="MK"/>
      <xsd:enumeration value="ML"/>
      <xsd:enumeration value="MM"/>
      <xsd:enumeration value="MN"/>
      <xsd:enumeration value="MO"/>
      <xsd:enumeration value="MP"/>
      <xsd:enumeration value="MQ"/>
      <xsd:enumeration value="MR"/>
      <xsd:enumeration value="MS"/>
      <xsd:enumeration value="MT"/>
      <xsd:enumeration value="MU"/>
      <xsd:enumeration value="MV"/>
      <xsd:enumeration value="MW"/>
      <xsd:enumeration value="MX"/>
      <xsd:enumeration value="MY"/>
      <xsd:enumeration value="MZ"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="NC"/>
      <xsd:enumeration value="NE"/>
      <xsd:enumeration value="NF"/>
      <xsd:enumeration value="NG"/>
      <xsd:enumeration value="NI"/>
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="NP"/>
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="NU"/>
      <xsd:enumeration value="NZ"/>
      <xsd:enumeration value="OM"/>
      <xsd:enumeration value="PA"/>
      <xsd:enumeration value="PE"/>
      <xsd:enumeration value="PF"/>
      <xsd:enumeration value="PG"/>
      <xsd:enumeration value="PH"/>
      <xsd:enumeration value="PK"/>
      <xsd:enumeration value="PL"/>
      <xsd:enumeration value="PM"/>
      <xsd:enumeration value="PN"/>
      <xsd:enumeration value="PR"/>
      <xsd:enumeration value="PS"/>
      <xsd:enumeration value="PT"/>
      <xsd:enumeration value="PW"/>
      <xsd:enumeration value="PY"/>
      <xsd:enumeration value="QA"/>
      <xsd:enumeration value="RE"/>
      <xsd:enumeration value="RO"/>
      <xsd:enumeration value="RS"/>
      <xsd:enumeration value="RU"/>
      <xsd:enumeration value="RW"/>
      <xsd:enumeration value="SA"/>
      <xsd:enumeration value="SB"/>
      <xsd:enumeration value="SC"/>
      <xsd:enumeration value="SD"/>
      <xsd:enumeration value="SE"/>
      <xsd:enumeration value="SG"/>
      <xsd:enumeration value="SH"/>
      <xsd:enumeration value="SI"/>
      <xsd:enumeration value="SJ"/>
      <xsd:enumeration value="SK"/>
      <xsd:enumeration value="SL"/>
      <xsd:enumeration value="SM"/>
      <xsd:enumeration value="SN"/>
      <xsd:enumeration value="SO"/>
      <xsd:enumeration value="SR"/>
      <xsd:enumeration value="SS"/>
      <xsd:enumeration value="ST"/>
      <xsd:enumeration value="SV"/>
      <xsd:enumeration value="SX"/>
      <xsd:enumeration value="SY"/>
      <xsd:enumeration value="SZ"/>
      <xsd:enumeration value="TC"/>
      <xsd:enumeration value="TD"/>
      <xsd:enumeration value="TF"/>
      <xsd:enumeration value="TG"/>
      <xsd:enumeration value="TH"/>
      <xsd:enumeration value="TJ"/>
      <xsd:enumeration value="TK"/>
      <xsd:enumeration value="TL"/>
      <xsd:enumeration value="TM"/>
      <xsd:enumeration value="TN"/>
      <xsd:enumeration value="TO"/>
      <xsd:enumeration value="TR"/>
      <xsd:enumeration value="TT"/>
      <xsd:enumeration value="TV"/>
      <xsd:enumeration value="TW"/>
      <xsd:enumeration value="TZ"/>
      <xsd:enumeration value="UA"/>
      <xsd:enumeration value="UG"/>
      <xsd:enumeration value="UM"/>
      <xsd:enumeration value="US"/>
      <xsd:enumeration value="UY"/>
      <xsd:enumeration value="UZ"/>
      <xsd:enumeration value="VA"/>
      <xsd:enumeration value="VC"/>
      <xsd:enumeration value="VE"/>
      <xsd:enumeration value="VG"/>
      <xsd:enumeration value="VI"/>
      <xsd:enumeration value="VN"/>
      <xsd:enumeration value="VU"/>
      <xsd:enumeration value="WF"/>
      <xsd:enumeration value="WS"/>
      <xsd:enumeration value="XX"/>
      <xsd:enumeration value="YE"/>
      <xsd:enumeration value="YT"/>
      <xsd:enumeration value="ZA"/>
      <xsd:enumeration value="ZM"/>
      <xsd:enumeration value="ZW"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ServiceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The ServiceTypeEnum is a type-safe enumeration of qualifiers for network service types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Service type code</xsd:documentation>
        <xsd:documentation>Service type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Premium Service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Data</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>SIM In and Outgoing</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>SIM outgoing only</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Data Usage outbound roaming</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>MO calls to International</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>MO calls roaming</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>MT calls roaming</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="8">
        <xsd:annotation>
          <xsd:documentation>MT calls</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackServiceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The PackServiceTypeEnum is a type-safe enumeration of qualifiers for pack service types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Pack service type code</xsd:documentation>
        <xsd:documentation>Pack service type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>voice</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>data</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>SMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>MMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>Composite</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>standard data</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>MRP</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EgnDataCategoryEnum">
    <xsd:annotation>
      <xsd:documentation>Describes the category in order to allow grouping of EGN information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VOICE_DOMESTIC"/>
      <xsd:enumeration value="VOICE_ROAMING_OUTBOUND"/>
      <xsd:enumeration value="VOICE_ROAMING_INBOUND"/>
      <xsd:enumeration value="IVR"/>
      <xsd:enumeration value="SMS_DOMESTIC"/>
      <xsd:enumeration value="SMS_ROAMING"/>
      <xsd:enumeration value="MMS"/>
      <xsd:enumeration value="DATA_DOMESTIC"/>
      <xsd:enumeration value="DATA_ROAMING"/>
      <xsd:enumeration value="PREMIUM_BILLING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CounterServiceType">
    <xsd:annotation>
      <xsd:documentation>A list of counter service type values. Multiple values indicate a combined counter, for example, SMS/VOICE combined.
                Each value may only appear once in the list.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="value" type="CounterServiceTypeEnum" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CounterServiceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>An enumeration of qualifiers for counter service types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Counter service type code</xsd:documentation>
        <xsd:documentation>Counter service type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="VOICE">
        <xsd:annotation>
          <xsd:documentation>Voice</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SMS">
        <xsd:annotation>
          <xsd:documentation>SMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MMS">
        <xsd:annotation>
          <xsd:documentation>MMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DATA">
        <xsd:annotation>
          <xsd:documentation>DATA</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OTHER">
        <xsd:annotation>
          <xsd:documentation>OTHER</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FskLevelEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>FSK level</xsd:documentation>
        <xsd:documentation>FSK level description</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="NotRatedContent">
        <xsd:annotation>
          <xsd:documentation>Only not rated content is allowed. This level is set on customer request only.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FSK16">
        <xsd:annotation>
          <xsd:documentation>FSK 16 content is allowed (default).</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FSK18">
        <xsd:annotation>
          <xsd:documentation>FSK 18 rated content is allowed. This level is set only at customers request after customer authentication.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimPackagingTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Packaging types of a SIM card.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Sim card type code</xsd:documentation>
        <xsd:documentation>Sim card type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="SIM_HARDWARE">
        <xsd:annotation>
          <xsd:documentation>SIM hardware</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SIM_ONLY">
        <xsd:annotation>
          <xsd:documentation>SIM Only</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GIVE_AWAY_SIM">
        <xsd:annotation>
          <xsd:documentation>Give Away SIM</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DATA_SIM_HARDWARE">
        <xsd:annotation>
          <xsd:documentation>Data-SIM Hardware</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DATA_SIM_ONLY">
        <xsd:annotation>
          <xsd:documentation>Data-SIM Only</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimCardStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The SimCardStatusEnum is a type-safe enumeration of qualifiers for SIM card status.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Sim card status code</xsd:documentation>
        <xsd:documentation>Sim card status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="ACTIVE">
        <xsd:annotation>
          <xsd:documentation>Active</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AUTOMATIC_DISABLED">
        <xsd:annotation>
          <xsd:documentation>Automatic Disabled</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MANUAL_DISABLED">
        <xsd:annotation>
          <xsd:documentation>Manual Disabled</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="HOTLINE_PREPROVISIONED">
        <xsd:annotation>
          <xsd:documentation>Hotline Preprovision</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="HOTLINE_REGISTERED">
        <xsd:annotation>
          <xsd:documentation>Hotline Registered</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimReplacementReason">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="THEFT"/>
      <xsd:enumeration value="DEFECT"/>
      <xsd:enumeration value="LOSS"/>
      <xsd:enumeration value="FORM_FACTOR"/>
      <xsd:enumeration value="NONE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="OrderTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The OrderTypeEnum is a type-safe enumeration of qualifiers for porting out order types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Order type code</xsd:documentation>
        <xsd:documentation>Order type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>PPO normal porting order</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>PPO_O2 porting order for O2 service providers</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>PPM prepaid postpaid migration order</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackEventTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The PackEventTypeEnum is a type-safe enumeration of qualifiers for pack event types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SUBSCRIPTION"/>
      <xsd:enumeration value="UNSUBSCRIPTION"/>
      <xsd:enumeration value="DELETION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PortOutStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The PortOutStatusEnum is a type-safe enumeration of qualifiers for porting out status.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Porting OUT status code</xsd:documentation>
        <xsd:documentation>Porting OUT status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>NEW</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="20">
        <xsd:annotation>
          <xsd:documentation>ACCEPTED</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="21">
        <xsd:annotation>
          <xsd:documentation>DEBITTING</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="22">
        <xsd:annotation>
          <xsd:documentation>CREDITING</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="30">
        <xsd:annotation>
          <xsd:documentation>DEPROVISIONING</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="40">
        <xsd:annotation>
          <xsd:documentation>RESURRECTION</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="51">
        <xsd:annotation>
          <xsd:documentation>CANCELLED</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="52">
        <xsd:annotation>
          <xsd:documentation>PORTED_OUT</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="53">
        <xsd:annotation>
          <xsd:documentation>TIME_OUT</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="54">
        <xsd:annotation>
          <xsd:documentation>COMPLETED</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="91">
        <xsd:annotation>
          <xsd:documentation>REJECTED</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="92">
        <xsd:annotation>
          <xsd:documentation>PORTING_FAILURE</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="93">
        <xsd:annotation>
          <xsd:documentation>IN_FAILURE</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="94">
        <xsd:annotation>
          <xsd:documentation>RESURRECTION_FAILURE</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="95">
        <xsd:annotation>
          <xsd:documentation>NUMS_FAILURE</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="96">
        <xsd:annotation>
          <xsd:documentation>ABORTED</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="97">
        <xsd:annotation>
          <xsd:documentation>RESEND</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AccountTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The AccountTypeEnum is a type-safe enumeration of qualifiers for AccountTypes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Account type code</xsd:documentation>
        <xsd:documentation>Account type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Main account</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Bonus account</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RegistrationTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The RegistrationTypeEnum is a type-safe enumeration of qualifiers for RegistrationTypes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Registration type code</xsd:documentation>
        <xsd:documentation>Registration type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Address data already verified</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Address data not verified yet</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PKKTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Describes how the PKK was chosen.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>PKK type code</xsd:documentation>
        <xsd:documentation>PKK type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Generated PKK (default)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Customer chosen PKK (always used by Tchibo and ePOS)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ChurnStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The churn status of the customer.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Churn status code</xsd:documentation>
        <xsd:documentation>Churn status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>valid</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>active</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>warned 1</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>warned 2</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>locked</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>warned 3</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>balance deleted</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>warned 4</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="8">
        <xsd:annotation>
          <xsd:documentation>already barred</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="9">
        <xsd:annotation>
          <xsd:documentation>barred</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="10">
        <xsd:annotation>
          <xsd:documentation>deletion started</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="11">
        <xsd:annotation>
          <xsd:documentation>deleted</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="20">
        <xsd:annotation>
          <xsd:documentation>contract canceled</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TitleEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DOCTOR">
        <xsd:annotation>
          <xsd:documentation>Doktor</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PROFESSOR">
        <xsd:annotation>
          <xsd:documentation>Professor</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GenderEnum">
    <xsd:annotation>
      <xsd:documentation>The GenderEnum is a type-safe enumeration of qualifiers for gender.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Gender code</xsd:documentation>
        <xsd:documentation>Gender</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Herr (default)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Frau</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Firma</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PersonalIDTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The PersonalIDTypeEnum is a type-safe enumeration of qualifiers for PersonalID Type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Personal ID type code</xsd:documentation>
        <xsd:documentation>Personal ID type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Keine Angabe</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Personalausweis</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Reisepass</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Aufenthaltsberechtigung</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Aufenthaltsberlaubnis</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PortinStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The PortinStatusEnum is a type-safe enumeration of qualifiers for Porting in Status.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Porting IN status code</xsd:documentation>
        <xsd:documentation>Porting IN status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Hold. Waiting for registration</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Accepted</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Confirmed</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Rejected</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Ported-in</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>Cancelled</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>Porting-in in progress</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>Closed</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="8">
        <xsd:annotation>
          <xsd:documentation>Technical Error</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PortinSubStatusEnum">
    <xsd:annotation>
      <xsd:documentation>The PortinSubStatusEnum is a type-safe enumeration of qualifiers for Porting in sub Status.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Porting IN sub status code</xsd:documentation>
        <xsd:documentation>Porting IN sub status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Ready</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Sent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Ack Received</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>SMS_Churn_DONE</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Assign Change</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>Req generated</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>Resend</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackMainStateEnum">
    <xsd:annotation>
      <xsd:documentation>The PackMainStateEnum is a type-safe enumeration of qualifiers for pack subscriptions.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Pack main state code</xsd:documentation>
        <xsd:documentation>Pack main state</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="ACTIVE">
        <xsd:annotation>
          <xsd:documentation>active</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PENDING">
        <xsd:annotation>
          <xsd:documentation>pending</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="GRACE">
        <xsd:annotation>
          <xsd:documentation>grace/deactivation</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DELETED">
        <xsd:annotation>
          <xsd:documentation>deleted</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ORDERED">
        <xsd:annotation>
          <xsd:documentation>ordered</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="RESERVED">
        <xsd:annotation>
          <xsd:documentation>reserved</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="WAITING">
        <xsd:annotation>
          <xsd:documentation>waiting</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INACTIVE">
        <xsd:annotation>
          <xsd:documentation>inactive</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackStateEnum">
    <xsd:annotation>
      <xsd:documentation>The PackStateEnum is a type-safe enumeration of qualifiers for Pack requests. The base type of the enumeration is xsd:int.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Pack state code</xsd:documentation>
        <xsd:documentation>Pack state</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>new</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>done</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>debited</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>apply monetary replenishment pack benefit partly done</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>apply monetary replenishment pack benefit completely done</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="20">
        <xsd:annotation>
          <xsd:documentation>confirmed (end state)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="21">
        <xsd:annotation>
          <xsd:documentation>rejected (duplicate request)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="25">
        <xsd:annotation>
          <xsd:documentation>error</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="26">
        <xsd:annotation>
          <xsd:documentation>error confirmed (end sate)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="30">
        <xsd:annotation>
          <xsd:documentation>insufficient balance (end state)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActionEnum">
    <xsd:annotation>
      <xsd:documentation>The ActionEnum is a type-safe enumeration of qualifiers for Action to be performed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Action code</xsd:documentation>
        <xsd:documentation>Action</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>bar/enable/set</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>unbar/disable/remove</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PermitsCallStoreEnum">
    <xsd:annotation>
      <xsd:documentation>Interface value</xsd:documentation>
      <xsd:documentation>Description</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="none">
        <xsd:annotation>
          <xsd:documentation>The customer does not allow storing call records.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="masked">
        <xsd:annotation>
          <xsd:documentation>The customer allows storing anonymized call records.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="full">
        <xsd:annotation>
          <xsd:documentation>The customer allows storing call records.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LifeCycleStateEnum">
    <xsd:annotation>
      <xsd:documentation>The LifeCycleStateEnum is a type-safe enumeration of qualifiers for LifeCycleState.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Life cycle state code</xsd:documentation>
        <xsd:documentation>Life cycle state</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>active (default)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>porting out</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>ported out</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>deactivated</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>ported out to Postpaid</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>ported out to O2 Service Provider</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>porting out to Postpaid and IN account deletion initiated</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>cancelled("storniert")</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="8">
        <xsd:annotation>
          <xsd:documentation>already barred</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="9">
        <xsd:annotation>
          <xsd:documentation>barred because of fraud suspicion</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="10">
        <xsd:annotation>
          <xsd:documentation>Preprovisioned</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="11">
        <xsd:annotation>
          <xsd:documentation>Port-in Initiated</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="12">
        <xsd:annotation>
          <xsd:documentation>deregistered</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="14">
        <xsd:annotation>
          <xsd:documentation>Waiting for activation</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PreferredCommunicationChannelEnum">
    <xsd:annotation>
      <xsd:documentation>The PreferredCommunicationChannelEnum is a type-safe enumeration of qualifiers for Preferred Communication Channel.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Prefered communication channel code</xsd:documentation>
        <xsd:documentation>Prefered communication channel</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>None</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>email</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>SMS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Letter</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Telephone</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CounterTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The CounterTypeEnum is a type-safe enumeration of qualifiers for Counter Type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Counter type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="Monetary"></xsd:enumeration>
      <xsd:enumeration value="Quantity"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DataCheckQualityEnum">
    <xsd:annotation>
      <xsd:documentation>Defines whether data has been verified by the requesting application.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNCHECKED">
        <xsd:annotation>
          <xsd:documentation>The requesting application was not able to perform a check or cannot be trusted.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CHECKED_VALID">
        <xsd:annotation>
          <xsd:documentation>The requesting application has verified that the data is valid.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CHECKED_UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>The requesting application has attempted to validate the data, but cannot guarantee that the data is valid.
                        A manual verification is necessary.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ResultCodeEnum">
    <xsd:annotation>
      <xsd:documentation>The ResultCodeEnum is a type-safe enumeration of qualifiers for Result codes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Result code</xsd:documentation>
        <xsd:documentation>Reason message</xsd:documentation>
        <xsd:documentation>Error type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="-2">
        <xsd:annotation>
          <xsd:documentation>Unmapped error</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="-1">
        <xsd:annotation>
          <xsd:documentation>General system error</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>Request Successful</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>Customer is not Active</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>Chosen target tariff not allowed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>Customer black list check failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="4">
        <xsd:annotation>
          <xsd:documentation>Wrong or missing mandatory parameters (Name of missing parameter)</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="5">
        <xsd:annotation>
          <xsd:documentation>Address is not valid</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="6">
        <xsd:annotation>
          <xsd:documentation>Maximum SIM registration is exceeded</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="7">
        <xsd:annotation>
          <xsd:documentation>Content Card code check failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="10">
        <xsd:annotation>
          <xsd:documentation>Timeout</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="11">
        <xsd:annotation>
          <xsd:documentation>No input given for search</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="12">
        <xsd:annotation>
          <xsd:documentation>Too many records found, please refine the search criteria.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="13">
        <xsd:annotation>
          <xsd:documentation>Request with same transaction id but different parameters or request type exists</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="14">
        <xsd:annotation>
          <xsd:documentation>Request with same transaction id still ongoing</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="15">
        <xsd:annotation>
          <xsd:documentation>Customer not found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="16">
        <xsd:annotation>
          <xsd:documentation>Operation could not be immediately finished because of a transient error in a backend system. It will be re-executed
                        later</xsd:documentation>
          <xsd:documentation>Pending</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="17">
        <xsd:annotation>
          <xsd:documentation>Operation could not be performed because of a permanent error in a backend system</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="18">
        <xsd:annotation>
          <xsd:documentation>Invalid date of birth</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="101">
        <xsd:annotation>
          <xsd:documentation>MSISDN doesnt exist in the system.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="102">
        <xsd:annotation>
          <xsd:documentation>MSISDN ICCID match check failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="103">
        <xsd:annotation>
          <xsd:documentation>MSISDN and Activation Code mapping not valid</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="104">
        <xsd:annotation>
          <xsd:documentation>MSISDN is not active.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="105">
        <xsd:annotation>
          <xsd:documentation>Registration is ongoing</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="106">
        <xsd:annotation>
          <xsd:documentation>MSISDN does not exist in the network</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="107">
        <xsd:annotation>
          <xsd:documentation>Customer is already registered</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="108">
        <xsd:annotation>
          <xsd:documentation>Registration is success and barred because of welcome letter came back</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="109">
        <xsd:annotation>
          <xsd:documentation>MSISDN is already registered</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="110">
        <xsd:annotation>
          <xsd:documentation>MSISDN is not registered</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="111">
        <xsd:annotation>
          <xsd:documentation>MSISDN not available or Customer not Provisioned</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="112">
        <xsd:annotation>
          <xsd:documentation>MSISDN is barred</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="113">
        <xsd:annotation>
          <xsd:documentation>MSISDN is already unbarred</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="114">
        <xsd:annotation>
          <xsd:documentation>MSISDN is already barred</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="115">
        <xsd:annotation>
          <xsd:documentation>Brand does not match (the requested contract belongs to the tenant but not to the brand)</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="116">
        <xsd:annotation>
          <xsd:documentation>TenantId is not known</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="117">
        <xsd:annotation>
          <xsd:documentation>BrandId is not known</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="118">
        <xsd:annotation>
          <xsd:documentation>Contract was already personalized, no registration possible, only activation</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="119">
        <xsd:annotation>
          <xsd:documentation>No MSISDN must be given in an order for a SIM shipment</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="120">
        <xsd:annotation>
          <xsd:documentation>Canceled or failed online order exists</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="121">
        <xsd:annotation>
          <xsd:documentation>Postpaid SIM not allowed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="122">
        <xsd:annotation>
          <xsd:documentation>Fully whitelabel SIM not allowed for On demand registration</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="123">
        <xsd:annotation>
          <xsd:documentation>Fully whitelabel SIM expected</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="124">
        <xsd:annotation>
          <xsd:documentation>SIM not found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="125">
        <xsd:annotation>
          <xsd:documentation>PUK2 does not match</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="126">
        <xsd:annotation>
          <xsd:documentation>PUK2 missing but ICCID given and MSISDN not given</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="127">
        <xsd:annotation>
          <xsd:documentation>MSISDN given, but PUK2 also given</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="128">
        <xsd:annotation>
          <xsd:documentation>Not an On Demand SIM</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="129">
        <xsd:annotation>
          <xsd:documentation>SIM is currently processed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="130">
        <xsd:annotation>
          <xsd:documentation>SIM registration failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="131">
        <xsd:annotation>
          <xsd:documentation>ICCID or ActivationCode not allowed for assignMsisdn action</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="132">
        <xsd:annotation>
          <xsd:documentation>Cross usage not allowed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="133">
        <xsd:annotation>
          <xsd:documentation>No SIM card with the given ICCID was shipped to the customer</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="134">
        <xsd:annotation>
          <xsd:documentation>A SIM card activation is already in progress</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="135">
        <xsd:annotation>
          <xsd:documentation>Wrong SIM network operator</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="136">
        <xsd:annotation>
          <xsd:documentation>Wrong customer authentication code given</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="137">
        <xsd:annotation>
          <xsd:documentation>SIM is barred or hotline because of returned welcome letter</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="138">
        <xsd:annotation>
          <xsd:documentation>Placing the shipping order in LAPI failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="139">
        <xsd:annotation>
          <xsd:documentation>The shipping order was cancelled</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="200">
        <xsd:annotation>
          <xsd:documentation>No Porting-in order exists</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="201">
        <xsd:annotation>
          <xsd:documentation>MSISDN is not registered. Porting in request is on Hold</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="202">
        <xsd:annotation>
          <xsd:documentation>No pack History Available</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="203">
        <xsd:annotation>
          <xsd:documentation>No pack(s) available to subscribe</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="204">
        <xsd:annotation>
          <xsd:documentation>Customer does not have any pack subscriptions</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="205">
        <xsd:annotation>
          <xsd:documentation>Contact History not found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="206">
        <xsd:annotation>
          <xsd:documentation>Invalid combination of process and call reason.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="207">
        <xsd:annotation>
          <xsd:documentation>Ongoing porting in/out order exist</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="208">
        <xsd:annotation>
          <xsd:documentation>Invalid request due to non editable field</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="209">
        <xsd:annotation>
          <xsd:documentation>Invalid Porting Order ID and Interim MSISDN combination</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="210">
        <xsd:annotation>
          <xsd:documentation>Porting order could not be cancelled at this state of porting order</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="211">
        <xsd:annotation>
          <xsd:documentation>No Data packs Available.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="212">
        <xsd:annotation>
          <xsd:documentation>No Counter Pack Available</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="213">
        <xsd:annotation>
          <xsd:documentation>No Porting-out Order exists</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="216">
        <xsd:annotation>
          <xsd:documentation>No Billing Data found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="217">
        <xsd:annotation>
          <xsd:documentation>Reason not found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="218">
        <xsd:annotation>
          <xsd:documentation>No porting declaration exists for customer</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="219">
        <xsd:annotation>
          <xsd:documentation>Invalid porting date (too late)</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="220">
        <xsd:annotation>
          <xsd:documentation>Invalid porting date (too early)</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="221">
        <xsd:annotation>
          <xsd:documentation>Operation not permitted, porting workflow in invalid state</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="222">
        <xsd:annotation>
          <xsd:documentation>Porting declaration already exists for customer</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="223">
        <xsd:annotation>
          <xsd:documentation>Porting date not in allowed porting dates</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="224">
        <xsd:annotation>
          <xsd:documentation>The porting code does not exist.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="225">
        <xsd:annotation>
          <xsd:documentation>The network operator does not exist.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="226">
        <xsd:annotation>
          <xsd:documentation>Tariff not changeable any more</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="227">
        <xsd:annotation>
          <xsd:documentation>Date range outside storage period</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="300">
        <xsd:annotation>
          <xsd:documentation>Pack not available to the customer to delete</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="301">
        <xsd:annotation>
          <xsd:documentation>Pack is not active</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="302">
        <xsd:annotation>
          <xsd:documentation>Eligibility Error</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="304">
        <xsd:annotation>
          <xsd:documentation>Subscription of pending pack not admissible</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="305">
        <xsd:annotation>
          <xsd:documentation>Unsubscription of non-cyclic pack not admissible</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="306">
        <xsd:annotation>
          <xsd:documentation>Bundle Promotion not offered</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="307">
        <xsd:annotation>
          <xsd:documentation>Customer does not have any bundle subscriptions</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="308">
        <xsd:annotation>
          <xsd:documentation>Product dependency is not fulfilled</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="403">
        <xsd:annotation>
          <xsd:documentation>EVN flag is not set for customer.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <!--Values 45X are reserved to be used for direct debit errors-->
      <xsd:enumeration value="450">
        <xsd:annotation>
          <xsd:documentation>Invalid recharge amount.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="451">
        <xsd:annotation>
          <xsd:documentation>Invalid threshold amount.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="452">
        <xsd:annotation>
          <xsd:documentation>Operation not possible because of invalid Direct Debit State</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="453">
        <xsd:annotation>
          <xsd:documentation>SEPA Mandate not given</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="454">
        <xsd:annotation>
          <xsd:documentation>Direct debit not active</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="455">
        <xsd:annotation>
          <xsd:documentation>Direct debit limit exceeded</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="456">
        <xsd:annotation>
          <xsd:documentation>Wrong or missing customer data [name of parameter]</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="457">
        <xsd:annotation>
          <xsd:documentation>Invalid recharge day</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="458">
        <xsd:annotation>
          <xsd:documentation>Too many bank account changes were performed in the past</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="459">
        <xsd:annotation>
          <xsd:documentation>Invalid passport number for direct debit. Mandatory for new customer registrations</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="460">
        <xsd:annotation>
          <xsd:documentation>Invalid identity card type for direct debit. Mandatory for new customer registrations</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="461">
        <xsd:annotation>
          <xsd:documentation>Invalid expiry date of the passport for direct debit. Mandatory for new customer registrations</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="462">
        <xsd:annotation>
          <xsd:documentation>Invalid date of birth for direct debit</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="463">
        <xsd:annotation>
          <xsd:documentation>Invalid email for direct debit</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="464">
        <xsd:annotation>
          <xsd:documentation>Invalid nationality for direct debit. Mandatory for new customer registrations</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="465">
        <xsd:annotation>
          <xsd:documentation>Change not allowed during direct debit activation</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="466">
        <xsd:annotation>
          <xsd:documentation>Invalid bank data for direct debit</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="467">
        <xsd:annotation>
          <xsd:documentation>The customer is barred because of fraud</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="468">
        <xsd:annotation>
          <xsd:documentation>The customer is barred because of dunning and not because of fraud</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="469">
        <xsd:annotation>
          <xsd:documentation>The brand does not allow direct debit registrations</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="470">
        <xsd:annotation>
          <xsd:documentation>The SEPA mandate request was aborted due to a timeout</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="471">
        <xsd:annotation>
          <xsd:documentation>A clawback is no longer possible because a confirmed porting out order exists</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="472">
        <xsd:annotation>
          <xsd:documentation>Direct Debit registration is not yet completed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="473">
        <xsd:annotation>
          <xsd:documentation>Selected on-demand recharge amount is not within limits</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="474">
        <xsd:annotation>
          <xsd:documentation>Invalid third party bank account owner address</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="475">
        <xsd:annotation>
          <xsd:documentation>The brand does not allow third party bank account owners</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="476">
        <xsd:annotation>
          <xsd:documentation>Recharge amount is below threshold value</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="477">
        <xsd:annotation>
          <xsd:documentation>Brand does not offer a customer specific monthly limit override</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="478">
        <xsd:annotation>
          <xsd:documentation>The customer chosen monthly recharge limit is not one of the allowed limit values</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="479">
        <xsd:annotation>
          <xsd:documentation>The customer has been rejected by the credit check.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="480">
        <xsd:annotation>
          <xsd:documentation>Missing SEPA mandate</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="481">
        <xsd:annotation>
          <xsd:documentation>No pending SEPA mandate found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="500">
        <xsd:annotation>
          <xsd:documentation>Network Error: Error in Retrieving Balance Information.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="501">
        <xsd:annotation>
          <xsd:documentation>Network Error</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="503">
        <xsd:annotation>
          <xsd:documentation>Customer Mailable Flag validation failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="504">
        <xsd:annotation>
          <xsd:documentation>No data pack usage received from network</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="505">
        <xsd:annotation>
          <xsd:documentation>No partner benefit pack exists for given campaign id, service type and benefit amount.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="506">
        <xsd:annotation>
          <xsd:documentation>MSISDN is ported out.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="507">
        <xsd:annotation>
          <xsd:documentation>No dss entry found for MSISDN.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="508">
        <xsd:annotation>
          <xsd:documentation>Given ICCID does not exist in pool.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="509">
        <xsd:annotation>
          <xsd:documentation>Too many Requests.</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="510">
        <xsd:annotation>
          <xsd:documentation>MSISDN is not churned.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="511">
        <xsd:annotation>
          <xsd:documentation>DSS entry does not exist to be accepted with modification by DSS.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="512">
        <xsd:annotation>
          <xsd:documentation>Previous request already in process.</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="513">
        <xsd:annotation>
          <xsd:documentation>No order found.</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="514">
        <xsd:annotation>
          <xsd:documentation>Insufficient Balance.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="515">
        <xsd:annotation>
          <xsd:documentation>Brand does not support the customer agreement flag reminder</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="516">
        <xsd:annotation>
          <xsd:documentation>Network error during provisioning.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="601">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-42 Action not allowed.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="602">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-2 Unable to comply.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="603">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-1900007 The subscriber does not have packages of that type.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="604">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-98800008 Tuxedo call exception.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="605">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-17 Incompatible transactions.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="606">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-18 Pending actions of the same type.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="607">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-99999 Unclassified error.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="608">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-1900008 The subscriber does not have active packages of that type.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="609">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-4000003 Account in incorrect lifecycle state.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="610">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-500009 Package is not allowed for tariff plan.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="611">
        <xsd:annotation>
          <xsd:documentation>Network Error: OCS-1900023 Unknown packageId.</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <!--Values 612-630 are reserved to be used for further Network Errors-->
      <xsd:enumeration value="701">
        <xsd:annotation>
          <xsd:documentation>Permanent error occurred for at least one product action</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="702">
        <xsd:annotation>
          <xsd:documentation>Transient error occurred for at least one product action</xsd:documentation>
          <xsd:documentation>Transient</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="703">
        <xsd:annotation>
          <xsd:documentation>Product does not exist</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="704">
        <xsd:annotation>
          <xsd:documentation>Validation of one or more product actions failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="705">
        <xsd:annotation>
          <xsd:documentation>Invalid combination of product actions</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="706">
        <xsd:annotation>
          <xsd:documentation>No pending online order found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="707">
        <xsd:annotation>
          <xsd:documentation>Online order has been canceled</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="801">
        <xsd:annotation>
          <xsd:documentation>IMEI not found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="802">
        <xsd:annotation>
          <xsd:documentation>Device info not found</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="803">
        <xsd:annotation>
          <xsd:documentation>Voucher redemption failed</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="804">
        <xsd:annotation>
          <xsd:documentation>Invalid shipping address</xsd:documentation>
          <xsd:documentation>Permanent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BillDay">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="28"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BillTypeEnum">
    <xsd:annotation>
      <xsd:documentation>The BillTypeEnum specifies the type of bill data which shall be generated for that customer.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>Bill type code</xsd:documentation>
        <xsd:documentation>Bill type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="0">
        <xsd:annotation>
          <xsd:documentation>provide no bill (default)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="1">
        <xsd:annotation>
          <xsd:documentation>provide EGN data only</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="2">
        <xsd:annotation>
          <xsd:documentation>provide VAT data only</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="3">
        <xsd:annotation>
          <xsd:documentation>provide EGN + VAT data</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitRegistrationStateEnum">
    <xsd:annotation>
      <xsd:documentation>The DirectDebitRegistrationStateEnum is a type-safe enumeration of qualifiers for DirectDebitRegistrationState.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Direct debit registration state code</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="UNREGISTERED">
        <xsd:annotation>
          <xsd:documentation>Registration is possible</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="REGISTRATION_IN_PROGRESS">
        <xsd:annotation>
          <xsd:documentation>Registration is ongoing (customer checking, SEPA mandate request or initial retention period in progress)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="REGISTERED">
        <xsd:annotation>
          <xsd:documentation>Registration is complete, recharges can be done</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PortingDeclarationInfo">
    <xsd:sequence>
      <xsd:element name="msisdn" type="MSISDN">
        <xsd:annotation>
          <xsd:documentation></xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="portingDeclarationStartDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date when the porting declaration becomes active in the system.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="portingDeclarationEndDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date until the porting declaration remains valid</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="portingValidityPeriod" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Number of days the porting declarations remains valid from portingDeclarationStartDate</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="serviceContinuityFlag" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This flag controls whether the customer should remain in the system after his number has been ported out.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CreatePortingDeclarationRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="portingDeclarationStartDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Date when the porting declaration should become active in the system.
                                    Optional, when not given will use the current system date as start date of the porting period.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="serviceContinuityFlag" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>This flag controls whether the customer should remain in the system after his number has been ported
                                    out. Optional, default true.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreatePortingDeclarationResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or customer not provisioned</td><td>Permanent</td></tr>
                    <tr><td>222</td><td>Porting declaration already exists for customer</td><td>Permanent</td></tr>
                    <tr><td>506</td><td>MSISDN is ported out</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="portingDeclarationInfo" type="PortingDeclarationInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Contains the system calculated details about the newly created porting declaration.
                                    Mandatory in case of successful request.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UpdatePortingDeclarationRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="portingDeclarationStartDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Date when the porting declaration should become active in the system</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="serviceContinuityFlag" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>This flag controls whether the customer should remain in the system after his number has been ported
                                    out. If not given the status of the flag stored in the system will not be changed.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UpdatePortingDeclarationResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or customer not provisioned</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    <tr><td>218</td><td>No porting declaration exists for customer</td><td>Permanent</td></tr>
                    <tr><td>506</td><td>MSISDN is ported out</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="portingDeclarationInfo" type="PortingDeclarationInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Contains the system calculated details about the updated porting declaration.
                                    Mandatory in case of successful request.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPortingDeclarationRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetPortingDeclarationResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or customer not provisioned</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    <tr><td>218</td><td>No porting declaration exists for customer</td><td>Permanent</td></tr>
                    <tr><td>506</td><td>MSISDN is ported out</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="portingDeclarationInfo" type="PortingDeclarationInfo" minOccurs="0"></xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RemovePortingDeclarationRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RemovePortingDeclarationResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or customer not provisioned</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    <tr><td>218</td><td>No porting declaration exists for customer</td><td>Permanent</td></tr>
                    <tr><td>506</td><td>MSISDN is ported out</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResubmitPortingDateRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="requestedPortingDate" type="xsd:date">
              <xsd:annotation>
                <xsd:documentation>Date on which porting shall happen (as negotiated with customer), date can not be later than 123 days
                                    in future.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResubmitPortingDateResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or customer not provisioned</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    <tr><td>200</td><td>No porting-in order exists</td><td>Permanent</td></tr>
                    <tr><td>213</td><td>No porting-out order exists</td><td>Permanent</td></tr>
                    <tr><td>218</td><td>No porting declaration exists for customer</td><td>Permanent</td></tr>
                    <tr><td>219</td><td>Invalid porting date (too late)</td><td>Permanent</td></tr>
                    <tr><td>220</td><td>Invalid porting date (too early)</td><td>Permanent</td></tr>
                    <tr><td>221</td><td>Operation not permitted, porting workflow in invalid state</td><td>Permanent</td></tr>
                    <tr><td>223</td><td>Porting date is not an allowed porting date. See adjustedPortingDate for a suggested valid date.</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="adjustedPortingDate" type="xsd:date" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Date on which porting shall happen as calculated and adjusted by the system by follow porting date
                                    calculation rules.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomerCareVerifyAvailabilityRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ValidateCrmOrderRequest">
    <xsd:annotation>
      <xsd:documentation>The MSISDN must be given except if one of the actions assignMsisdn or shipSim are present.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareOptionalMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="crmOrder" type="CrmOrderElements">
              <xsd:annotation>
                <xsd:documentation>The CRM order which shall be validated.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="suggestFurtherProducts" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>If present, the result will contain a list of products which would be available to the customer once this
                                   order is executed.&lt;br/>
                                   If a shipSim action is present, suggestFurtherProducts is not supported.

                                   &lt;b>Currently this action is only supported with limitResponseTo set to PACK.&lt;/b></xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="limitResponseTo" type="ProductTypeFilterList" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>Only list products of the given types. If not specified, products of all product types will be
                                               returned.
                                               &lt;b> Product type SIM and TARIFF are not supported for this request type at this time.&lt;/b></xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ValidateCrmOrderResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>
          <!--Note: if you change something here, consider changing createCrmOrder as well.--><![CDATA[
          <p>Note: This list contains only synchronous results. For possible asynchronous response codes refer to the response interface documentation.</p>

                    <h4>Possible results for complete order</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    <tr><td>704</td><td>Validation of one or more product actions failed</td><td>Permanent</td></tr>
                    <tr><td>705</td><td>Invalid combination of product actions</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Possible results for all action types</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>308</td><td>Product dependency is not fulfilled</td><td>Permanent</td></tr>
                    <tr><td>703</td><td>Product does not exist</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "SubscribePack"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                    <tr><td>304</td><td>Subscription of pending pack not admissible</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "UnsubscribePack"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>301</td><td>Pack is not active</td><td>Permanent</td></tr>
                    <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                    <tr><td>305</td><td>Unsubscription of non-cyclic pack not admissible</td><td>Permanent</td></tr>
                    </tbody></table>
                    <p>The Error code 302 is returned if for example: Portal is not available in the unsubscription channel and tries to
                    unsubscribe pack</p>

                    <h4>Additional possible results for action "DeletePack"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>300</td><td>Pack not available to the customer to delete</td><td>Permanent</td></tr>
                    <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "UpdatePack"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>301</td><td>Pack is not active</td><td>Permanent</td></tr>
                    <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "ChangeTariff"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>2</td><td>Chosen target tariff not allowed</td><td>Permanent</td></tr>
                    <tr><td>226</td><td>Tariff not changeable any more</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "AssignMsisdn"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>128</td><td>Not an On Demand SIM</td><td>Permanent</td></tr>
                    <tr><td>129</td><td>SIM is currently processed</td><td>Permanent</td></tr>
                    <tr><td>130</td><td>SIM registration failed in an inconsistent state</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "ShipSim"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>119</td><td>MSISDN given for SIM shipment.</td><td>Permanent</td></tr>
                    <tr><td>804</td><td>Invalid shipping address</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "ShipReplacementSim"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>137</td><td>SIM is barred or hotline because of returned welcome letter.</td><td>Permanent</td></tr>
                    <tr><td>138</td><td>Placing the shipping order in LAPI failed.</td><td>Permanent</td></tr>
                    <tr><td>467</td><td>The customer is barred because of fraud.</td><td>Permanent</td></tr>
                    <tr><td>468</td><td>SIM is barred or hotline because of returned welcome letter.</td><td>Permanent</td></tr>
                    <tr><td>602</td><td>Network Error: OCS-2 Unable to comply.</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "CheckSim"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>102</td><td>MSISDN ICCID match check failed</td><td>Permanent</td></tr>
                    <tr><td>103</td><td>MSISDN and Activation Code mapping not valid</td><td>Permanent</td></tr>
                    <tr><td>109</td><td>MSISDN is already registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or Customer not Provisioned (No active or churn records found).</td><td>Permanent</td></tr>
                    <tr><td>508</td><td>Given ICCID does not exist in pool</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "RegisterCustomer"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>5</td><td>Address is not valid</td><td>Permanent</td></tr>
                    <tr><td>6</td><td>Maximum SIM registration is exceeded</td><td>Permanent</td></tr>
                    <tr><td>102</td><td>MSISDN ICCID match check failed</td><td>Permanent</td></tr>
                    <tr><td>103</td><td>MSISDN and Activation Code mapping not valid</td><td>Permanent</td></tr>
                    <tr><td>109</td><td>MSISDN is already registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or Customer not Provisioned (No active or churn records found).</td><td>Permanent</td></tr>
                    <tr><td>131</td><td>ICCID or Activation Code not allowed for assignMsisdn action</td><td>Permanent</td></tr>
                    <tr><td>503</td><td>Customer Mailable Flag validation failed</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "RegisterForDirectDebit"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>5</td><td>Customer address is invalid</td><td>Permanent</td></tr>
                    <tr><td>452</td><td>Registration not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                    <tr><td>453</td><td>SEPA Mandate not given</td><td>Permanent</td></tr>
                    <tr><td>456</td><td>Wrong or missing customer data [name of parameter]</td><td>Permanent</td></tr>
                    <tr><td>459</td><td>Invalid passport number for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                    <tr><td>460</td><td>Invalid personal type for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                    <tr><td>461</td><td>Invalid expiry date of the passport for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                    <tr><td>462</td><td>Invalid date of birth for direct debit</td><td>Permanent</td></tr>
                    <tr><td>463</td><td>Invalid email for direct debit</td><td>Permanent</td></tr>
                    <tr><td>464</td><td>Invalid nationality for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                    <tr><td>466</td><td>Invalid bank data for direct debit</td><td>Permanent</td></tr>
                    <tr><td>467</td><td>The customer is barred because of fraud</td><td>Permanent</td></tr>
                    <tr><td>468</td><td>The customer is barred because of dunning and not because of fraud</td><td>Permanent</td></tr>
                    <tr><td>469</td><td>The brand does not allow direct debit registrations</td><td>Permanent</td></tr>
                    <tr><td>472</td><td>Direct Debit registration is not yet completed</td><td>Permanent</td></tr>
                    <tr><td>474</td><td>Invalid third party bank account owner address</td><td>Permanent</td></tr>
                    <tr><td>475</td><td>The brand does not allow third party bank account owners</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "ChangeRechargeOptions"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>450</td><td>Invalid recharge amount.</td><td>Permanent</td></tr>
                    <tr><td>451</td><td>Invalid threshold amount.</td><td>Permanent</td></tr>
                    <tr><td>452</td><td>Operation not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                    <tr><td>457</td><td>Invalid recharge day</td><td>Permanent</td></tr>
                    <tr><td>465</td><td>Change not allowed during direct debit activation</td><td>Permanent</td></tr>
                    <tr><td>476</td><td>Recharge amount is below threshold value</td><td>Permanent</td></tr>
                    <tr><td>477</td><td>Brand does not offer a customer specific monthly limit override</td><td>Permanent</td></tr>
                    <tr><td>478</td><td>The customer chosen monthly recharge limit is not one of the allowed limit values</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "RechargeViaDirectDebit"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>450</td><td>Invalid recharge amount</td><td>Permanent</td></tr>
                    <tr><td>452</td><td>Operation not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                    <tr><td>454</td><td>Direct debit not active</td><td>Permanent</td></tr>
                    <tr><td>455</td><td>Direct debit limit exceeded</td><td>Permanent</td></tr>
                    <tr><td>472</td><td>Direct Debit registration is not yet completed</td><td>Permanent</td></tr>
                    <tr><td>473</td><td>Selected on-demand recharge amount is not within limits</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "createPortingInOrder"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>112</td><td>MSISDN is barred</td><td>Permanent</td></tr>
                    <tr><td>201</td><td>MSISDN is not registered.Porting in request is on Hold</td><td>Permanent</td></tr>
                    <tr><td>207</td><td>Ongoing porting in/out order exist.</td><td>Permanent</td></tr>
                    <tr><td>209</td><td>Invalid Porting Order ID and Interim MSISDN combination.</td><td>Permanent</td></tr>
                    <tr><td>224</td><td>The porting code does not exist.</td><td>Permanent</td></tr>
                    <tr><td>225</td><td>The network operator does not exist.</td><td>Permanent</td></tr>
                    </tbody></table>

                    <h4>Additional possible results for action "redeemVoucher"</h4>
                    <table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>803</td><td>Voucher redemption failed</td><td>Permanent</td></tr>
                    </tbody></table>
        ]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:choice>
            <xsd:element name="productActionResult" type="ProductActionResult" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>In case of a validation failure of a specific product action, this list contains the results of the
                                    failed actions.
                                    The overall result code is then 704. In case of an overall success/failure, this list is empty.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="suggestedProducts" type="AvailableProductsList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>
                  Contains a list of products which would be available once the validated order has been executed.
                                    This element will only be present if suggestFurtherProducts was set for this request.
                                    Additionally, if a restriction was set via limitResponseTo, only products of those types will be
                                    returned.
                  <br/>
                  Note that this element will only be present if the order passed the validation.
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="VerifyAvailabilityRequest">
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="VerifyAvailabilityResult" type="xsd:boolean"/>
  <xsd:element name="GetLastKnownQoSInformationRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetLastKnownQoSInformationResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>110</td><td>MSISDN is not registered</td><td>Permanent</td></tr>
                    <tr><td>111</td><td>MSISDN not available or customer not provisioned</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="qoSInformation" type="QoSInformation" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Last known QoS information</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="QoSInformation">
    <xsd:annotation>
      <xsd:documentation>Object with quality of service information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="changeDate" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time and date when the QoS state change was executed on the OCS</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="upstreamSpeed" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Current upstream speed in kbit/s</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="downstreamSpeed" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Current downstream speed in kbit/s</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QosDefinition">
    <xsd:annotation>
      <xsd:documentation>The quality of service of a pack</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="qoSLimitActive" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>QoS limit when pack is active in kbit/s</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="qoSLimitExhausted" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>QoS limit when pack is exhausted in kbit/s</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackSubscriptionStatus">
    <xsd:annotation>
      <xsd:documentation>Detailed notification data in case of a successful pack operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="msisdn" type="MSISDN">
        <xsd:annotation>
          <xsd:documentation>MSISDN of the customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="spSubscriptionID" type="SpSubscriptionID" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>External subscription ID of service provider customers from SPAIN.
                        Is only provided for SPAIN and is omitted otherwise.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="subscriptionInfo" type="SubscriptionInfo">
        <xsd:annotation>
          <xsd:documentation>Detailed information about the pack subscription</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packInfo" type="PackInfo">
        <xsd:annotation>
          <xsd:documentation>Detailed information about the pack.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packGroup" type="PackGroup" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>PackGroup information of the pack if belongs to the packgroup.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BundleSubscriptionStatus">
    <xsd:annotation>
      <xsd:documentation>Detailed notification data in case of a successful bundle operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="msisdn" type="MSISDN">
        <xsd:annotation>
          <xsd:documentation>MSISDN of the customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="spSubscriptionID" type="SpSubscriptionID" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>External subscription ID of service provider customers from SPAIN.
                        Is only provided for SPAIN and is omitted otherwise.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="SubscribedBundle" type="BundleType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="AckFaultType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TRANSIENT">
        <xsd:annotation>
          <xsd:documentation>Transient error. Retry should be done later.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PERMANENT">
        <xsd:annotation>
          <xsd:documentation>Permanent error. No retry should be done.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="AckFault">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="type" type="AckFaultType"/>
        <xsd:element name="code" type="xsd:int">
          <xsd:annotation>
            <xsd:documentation>Error code, currently only for logging purposes</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="msg" type="String256">
          <xsd:annotation>
            <xsd:documentation>Description of the error, currently only for logging purposes</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="BonusUsability">
    <xsd:annotation>
      <xsd:documentation>Defines what the bonus is applicable for.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="VOICE"/>
      <xsd:enumeration value="SMS"/>
      <xsd:enumeration value="VOICE_AND_SMS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="SubscribeBundleRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="BundleID" type="BundleID"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeBundleResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                  <tr bgcolor="black">
                  <th style="color:white;">ResultCode</th>
                  <th style="color:white;">ReasonMsg</th>
                  <th style="color:white;">Error Type</th>
                  </tr>
                  <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                  <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                  <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                  <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                  <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                  <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                  <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                  <tr><td>306</td><td>Bundle Promotion not offered</td><td>Permanent</td></tr>
                  </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="BundleType">
    <xsd:annotation>
      <xsd:documentation>Includes basic information of the Bundle contained in BundleBaseType.
                Includes information for the Offer period, the subscription channels and subscription cycles.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="BundleBaseType">
        <xsd:sequence>
          <xsd:element name="BundleOfferPeriod" type="BundleOfferPeriodType" minOccurs="0"/>
          <xsd:element name="BundleSubscription" type="BundleSubscriptionType" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BundleBaseType">
    <xsd:annotation>
      <xsd:documentation>BundleBaseType hold several info like ID, Type, Name etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="BundleID" type="BundleID"/>
      <xsd:element name="BundleName" type="String64"/>
      <xsd:element name="BundleDescription">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="200"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="BundleKeyword" type="String32" minOccurs="0"/>
      <xsd:element name="MigrationFee" type="xsd:int"/>
      <xsd:element name="PackList">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Pack" type="PackPromotionBaseType" minOccurs="0" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackPromotionBaseType">
    <xsd:annotation>
      <xsd:documentation>PackPromotion hold several info like ID, Type, Name etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="packID" type="PackID">
        <xsd:annotation>
          <xsd:documentation>The unique alphanumeric pack promotion id identifying the Pack system-overall.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PackPromotionDescription">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="200"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="PackPromotionName" type="String64"/>
      <xsd:element name="PackPromotionUSSDName" type="String25" minOccurs="0"/>
      <xsd:element name="PackPromotionKeyword" type="String32" minOccurs="0"/>
      <xsd:element name="AnnouncementPriority" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The priority of the pack inside the announcement order of the
                        returned packs. Lower numerical value means higher priority! For XML format backward
                        compatibility reasons the field is not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PackGroup" type="String60" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The group identifier of the pack.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="BundleID" type="BundleID" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The BundleId if the Pack is part of a Bundle.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="BundleName" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The BundleName if the Pack is part of a Bundle.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BundleOfferPeriodType">
    <xsd:sequence>
      <xsd:element name="StartDate" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>The start date of the Bundle offer period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EndDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The end date of the offer period. If the offer period of the pack has no end date defined, the "EndDate" in the
                        "BundleOfferPeriodType" will be empty.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BundleSubscriptionType">
    <xsd:annotation>
      <xsd:documentation>Subscription hold information about the subscription of Bundle</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="SubscriptionChannel" type="ChannelChargingType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChannelChargingType">
    <xsd:annotation>
      <xsd:documentation>ChannelCharging hold information about the charging of Pack/Promotion</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Channel" type="Channel"/>
      <xsd:element name="ActivationFee" type="Amount">
        <xsd:annotation>
          <xsd:documentation>The activation fee in Eurocents.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="Channel">
    <xsd:annotation>
      <xsd:documentation>The following values will be handled by PPIT directly:
                SMSG
                SERVICEPROVIDER (Channel for Service Providers via SPAIN)
                POS
                IVR
                CS (Channel for Customer Services)
                AUTOMATIC
                VOUCHER
                USSD
                ONLINESHOP (Channel for Online Shop)
                DEALERCARE (Channel for Dealercare for LOOP)
                ONLINESELFCARE (Channel for Online Selfcare)
                ARP (Channel for Alternative Roaming Providers)
                BIC (Channel used for BIC campaigns)
                PSP (Channel for Payment Service Providers)
                FOLLOWUP (Channel for booking of follow up packs due to the expiry of promo packs)
                MOBILEAPP
                UPSELLINGPAGE
                ONLINEREGISTRATION
                FRAUD

                Incoming requests using other values will trigger an error with a result code of 4 (wrong or missing manadatory parameters),
                except for values that have been added by bilateral agreement (they will become part of this definition for the next
                official IFS version).

                In outgoing communication (synchronous and asynchronous responses, notifications), PPIT is at liberty to use additional
                values. The client application must not throw an error in this situation, but can choose to ignore the information, pass it
                on as-is, or map it to an existing value.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="DeleteBundleRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="BundleID" type="BundleID"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeleteBundleResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                <tr><td>307</td><td>Customer does not have any bundle subscriptions</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentBundleRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentBundleResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>307</td><td>Customer does not have any bundle subscriptions</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="SpSubscriptionID" type="SpSubscriptionID" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>External subscription ID of service provider customers from SPAIN.
                                    Is only provided for SPAIN and is omitted otherwise.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="MSISDN" type="MSISDN" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is mandatory in case the result is successful</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="Bundle" type="BundleType" minOccurs="0" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetAvailableBundlesRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetAvailableBundlesResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="SpSubscriptionID" type="SpSubscriptionID" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>External subscription ID of service provider customers from SPAIN.
                                    Is only provided for SPAIN and is omitted otherwise.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="MSISDN" type="MSISDN" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is mandatory in case the result is successful</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="BundleList" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="Bundle" type="BundleType" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="ArpTransactionId">
    <xsd:annotation>
      <xsd:documentation>The transaction-id sent by the Alternative Roaming Provider.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="25"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlternativeRoamingProviderId">
    <xsd:annotation>
      <xsd:documentation>The system overall unique alphanumeric ID of an Alternative Roaming Provider.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="7"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="If7ErrorCode">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="500"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="AlternateRoamingProviderRequest">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareMsisdnRequest">
        <xsd:sequence>
          <xsd:element name="arpTransactionId" type="ArpTransactionId">
            <xsd:annotation>
              <xsd:documentation>TransactionId that is sent in by the ARP</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AlternateRoamingProviderResult">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareResult">
        <xsd:sequence>
          <xsd:element name="if7ErrorCode" type="If7ErrorCode">
            <xsd:annotation>
              <xsd:documentation>Error Code according to EU regulation</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="if7ErrorMessage" type="String256">
            <xsd:annotation>
              <xsd:documentation>Error Message according to EU regulation</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscribeArpPackRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="AlternateRoamingProviderRequest">
          <xsd:sequence>
            <xsd:element name="packId" type="PackID"/>
            <xsd:element name="arpId" type="AlternativeRoamingProviderId"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeArpPackResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                <tr><td>304</td><td>Subscription of pending pack not admissible</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network Error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">IF7 ResultCode</th>
                <th style="color:white;">meaning</th>
                <th style="color:white;">Source</th>
                </tr>
                <tr><td>0:</td><td>Activated</td><td>Successful provisioning</td></tr>
                <tr><td>1:</td><td>Not Activated - Generic</td><td>By SDF, negative feedback from CRM (not eligible)</td></tr>
                <tr><td>2:</td><td>Not Activated - DSP has not yet sent a PreProvisioningCompletion</td><td>By SDF</td></tr>
                <tr><td>3:</td><td>Not Activated - DSP has sent a PreProvisioningCompletion(NOK)</td><td>By SDF</td></tr>
                <tr><td>4:</td><td>Not Activated - invalid Transaction ID</td><td>By SDF</td></tr>
                <tr><td>5:</td><td>Not Activated - valid Transaction ID but the MSISDN does  not match with what was sent in the PreProvisioningRequest</td><td>By SDF</td></tr>
                <tr><td>6:</td><td>Not eligible - Generic</td><td></td></tr>
                <tr><td>7:</td><td>Not eligible - Recipient ARP doesn't have an agreement with DSP</td><td>SDF - no ARP agreement</td></tr>
                <tr><td>8:</td><td>Not eligible - Customer not controlled by DSP</td><td>SDF - customer not found</td></tr>
                <tr><td>9:</td><td>Not eligible - Subscriber's domestic service has been suspended</td><td>CRM - barring</td></tr>
                <tr><td>10:</td><td>Not eligible - Subscriber's roaming service has been suspended</td><td>CRM - barring</td></tr>
                <tr><td>11:</td><td>Not eligible - Subscriber has no contract to receive roaming service</td><td>CRM - barring</td></tr>
                <tr><td>12:</td><td>Not eligible - The service requestor is not the legal responsible party</td><td>CRM - name check</td></tr>
                <tr><td>13:</td><td>Not eligible - There is another ongoing provisioning or de-provisioning request for this UserId</td><td>CRM - any kind of pending order</td></tr>
                <tr><td>14:</td><td>Not eligible - Request is based on non-primary UserId for the subscrption</td><td>CRM - name check</td></tr>
                <tr><td>15:</td><td>Not eligible - Customer requested MNP</td><td>CRM - pending MNP</td></tr>
                <tr><td>100-199:</td><td>reserved for local use</td><td></td></tr>
                <tr><td>200-500:</td><td>reserved for bilateral agreements</td><td></td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="AlternateRoamingProviderResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeleteArpPackRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="AlternateRoamingProviderRequest">
          <xsd:sequence>
            <xsd:element name="packId" type="PackID"/>
            <xsd:element name="reasonCode" type="xsd:int">
              <xsd:annotation>
                <xsd:documentation><![CDATA[<table><tbody>
                                    <tr bgcolor="black">
                                    <th style="color:white;">IF7 DeactivationReason</th>
                                    <th style="color:white;">meaning</th>
                                    <th style="color:white;">Source</th>
                                    </tr>
                                    <tr><td>0:</td><td>request by customer</td><td>CRM self service via portal</td></tr>
                                    <tr><td>1:</td><td>MNP port out C</td><td>RM porting date confirmation received (still some discussion about this)</td></tr>
                                    <tr><td>2:</td><td>swap to another ARP</td><td>UC1 with ARP Swap</td></tr>
                                    <tr><td>3:</td><td>customer deactivation by DSP</td><td>CRM customer service is doing the deactivation</td></tr>
                                    <tr><td>4:</td><td>fraud management</td><td></td></tr>
                                    <tr><td>5:</td><td>termination of contract with the subscriber - bill payer initiated</td><td>CRM Customer</td></tr>
                                    <tr><td>6:</td><td>termination of contract with the customer - operator initiated</td><td>CRM Telefonica O2 (CACS) pulled the plug</td></tr>
                                    <tr><td>7:</td><td>Change in subscriber primary identifier</td><td>CRM Change MSISDN/Change IMSI</td></tr>
                                    <tr><td>8:</td><td>Subscription modification incompatible with ARP contract</td><td>CRM Change ownership</td></tr>
                                    <tr><td>10:</td><td>Generic</td><td></td></tr>
                                    <tr><td>50-99:</td><td>Reserved for bilateral agreements</td><td></td></tr>
                                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DeleteArpPackResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>300</td><td>Pack not available to the customer to delete</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network Error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">IF7 ResultCode</th>
                <th style="color:white;">meaning</th>
                <th style="color:white;">Source</th>
                </tr>
                <tr><td>0:</td><td>Activated</td><td>Successful provisioning</td></tr>
                <tr><td>1:</td><td>Not Activated - Generic</td><td>By SDF, negative feedback from CRM (not eligible)</td></tr>
                <tr><td>2:</td><td>Not Activated - DSP has not yet sent a PreProvisioningCompletion</td><td>By SDF</td></tr>
                <tr><td>3:</td><td>Not Activated - DSP has sent a PreProvisioningCompletion(NOK)</td><td>By SDF</td></tr>
                <tr><td>4:</td><td>Not Activated - invalid Transaction ID</td><td>By SDF</td></tr>
                <tr><td>5:</td><td>Not Activated - valid Transaction ID but the MSISDN does  not match with what was sent in the PreProvisioningRequest</td><td>By SDF</td></tr>
                <tr><td>6:</td><td>Not eligible - Generic</td><td></td></tr>
                <tr><td>7:</td><td>Not eligible - Recipient ARP doesn't have an agreement with DSP</td><td>SDF - no ARP agreement</td></tr>
                <tr><td>8:</td><td>Not eligible - Customer not controlled by DSP</td><td>SDF - customer not found</td></tr>
                <tr><td>9:</td><td>Not eligible - Subscriber's domestic service has been suspended</td><td>CRM - barring</td></tr>
                <tr><td>10:</td><td>Not eligible - Subscriber's roaming service has been suspended</td><td>CRM - barring</td></tr>
                <tr><td>11:</td><td>Not eligible - Subscriber has no contract to receive roaming service</td><td>CRM - barring</td></tr>
                <tr><td>12:</td><td>Not eligible - The service requestor is not the legal responsible party</td><td>CRM - name check</td></tr>
                <tr><td>13:</td><td>Not eligible - There is another ongoing provisioning or de-provisioning request for this UserId</td><td>CRM - any kind of pending order</td></tr>
                <tr><td>14:</td><td>Not eligible - Request is based on non-primary UserId for the subscrption</td><td>CRM - name check</td></tr>
                <tr><td>15:</td><td>Not eligible - Customer requested MNP</td><td>CRM - pending MNP</td></tr>
                <tr><td>100-199:</td><td>reserved for local use</td><td></td></tr>
                <tr><td>200-500:</td><td>reserved for bilateral agreements</td><td></td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="AlternateRoamingProviderResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CheckArpEligibilityRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="AlternateRoamingProviderRequest">
          <xsd:sequence>
            <xsd:element name="iccId" type="IccId"/>
            <xsd:element name="arpId" type="AlternativeRoamingProviderId"/>
            <xsd:choice>
              <xsd:element name="individual" type="Individual"/>
              <xsd:element name="company" type="Company"/>
            </xsd:choice>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CheckArpEligibilityResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                </tbody></table>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">IF7 ResultCode</th>
                <th style="color:white;">meaning</th>
                <th style="color:white;">Source</th>
                </tr>
                <tr><td>0:</td><td>Activatable</td><td>All checks including CRM ok</td></tr>
                <tr><td>1:</td><td>No Active Agreement</td><td>SDF - no ARP agreement</td></tr>
                <tr><td>2:</td><td>Not authorized - Generic</td><td></td></tr>
                <tr><td>3:</td><td>Not authorized - Not customer of this DSP</td><td>MCE - customer not found</td></tr>
                <tr><td>4:</td><td>Not authorized - Incorrect Authorization Method</td><td>Negative feedback CRM</td></tr>
                <tr><td>5:</td><td>Not authorized - Incorrect Authorization Credentials</td><td>Negative feedback CRM</td></tr>
                <tr><td>6:</td><td>Not eligible - Generic</td><td></td></tr>
                <tr><td>7:</td><td>Not eligible - Recipient ARP doesn't have an agreement with DSP</td><td>SDF - no ARP agreement</td></tr>
                <tr><td>8:</td><td>Not eligible - Customer not controlled by DSP</td><td>SDF - customer not found</td></tr>
                <tr><td>9:</td><td>Not eligible - Subscriber's domestic service has been suspended</td><td>CRM - barring</td></tr>
                <tr><td>10:</td><td>Not eligible - Subscriber's roaming service has been suspended</td><td>CRM - barring</td></tr>
                <tr><td>11:</td><td>Not eligible - Subscriber has no contract to receive roaming service</td><td>CRM - barring</td></tr>
                <tr><td>12:</td><td>Not eligible - The service requestor is not the legal responsible party</td><td>CRM - name check</td></tr>
                <tr><td>13:</td><td>Not eligible - There is another ongoing provisioning or de-provisioning request for this UserId</td><td>CRM - pending order</td></tr>
                <tr><td>14:</td><td>Not eligible - Request is based on non-primary UserId for the subscription</td><td>CRM - name check</td></tr>
                <tr><td>15:</td><td>Not eligible - Customer requested MNP</td><td>CRM - pending MNP</td></tr>
                <tr><td>100-199:</td><td>reserved for local use</td><td></td></tr>
                <tr><td>200-500:</td><td>reserved for bilateral agreements</td><td></td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="AlternateRoamingProviderResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="ProductId">
    <xsd:annotation>
      <xsd:documentation>Unique identifier of the product.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="70"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ListOfProductIds">
    <xsd:sequence>
      <xsd:element name="productId" type="ProductId" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProductDependencies">
    <xsd:sequence>
      <xsd:element name="any" type="ListOfProductIds" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Product" abstract="true">
    <xsd:sequence>
      <xsd:element name="productId" type="ProductId">
        <xsd:annotation>
          <xsd:documentation>Identification of the product.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="depends" type="ProductDependencies" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Lists the dependencies of the product in conjunctive normal form. i.e.: Each "any"-block has to be satisfied by
                        providing at least one of items listed within.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProductSubscriptionInfo" abstract="true"></xsd:complexType>
  <xsd:complexType name="ProductInfo" abstract="true"></xsd:complexType>
  <xsd:complexType name="ProductOrderInfo">
    <xsd:sequence>
      <xsd:element name="orderId" type="OrderId">
        <xsd:annotation>
          <xsd:documentation>Id of the CrmOrder for tracking.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="clientOrderId" type="ClientOrderId">
        <xsd:annotation>
          <xsd:documentation>External OrderID specified by the user during the CreateCrmOrder request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actionItemId" type="ActionItemId">
        <xsd:annotation>
          <xsd:documentation>ID of the ProductAction within the CrmOrder.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="subscriptionChannel" type="Channel">
        <xsd:annotation>
          <xsd:documentation>Channel the product has been subscribed through.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="OrderStatusEnum" minOccurs="0"/>
      <xsd:element name="productAction" type="CrmOrderActionTypeEnum">
        <xsd:annotation>
          <xsd:documentation>Action specified by the ProductActionBlock.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderDate" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Date when request was sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProductSubscription" abstract="true">
    <xsd:sequence>
      <xsd:element name="productOrderInfo" type="ProductOrderInfo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This field will only be shown if the corresponding CrmOrder has not yet been completed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChannelWithFee">
    <xsd:sequence>
      <xsd:element name="channel" type="Channel">
        <xsd:annotation>
          <xsd:documentation>Possible channel to subscribe the product.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="fee" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee per channel wise is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SimProductInfo">
    <xsd:complexContent>
      <xsd:extension base="ProductInfo">
        <xsd:sequence>
          <xsd:element name="simType" type="String96" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This field holds the type description of the SIM-card. If the field is not set, this property is unknown.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="description" type="String256">
            <xsd:annotation>
              <xsd:documentation>Textual description of the Product.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="nfcCapable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Indicates if the SIM-card supports NFC-functionality. If the field is not set, this property is unknown.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="nanoSize" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates if the SIM-card has the form factor nano-SIM. If the field is not set, this property is unknown.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="simChangeChannel" type="ChannelWithFee" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>All channels eligible to issue a SIM-change.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="simShipmentChannel" type="Channel" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>All channels eligible to issue a SIM-shipment.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SimProduct">
    <xsd:annotation>
      <xsd:documentation>Returns the static product information of the SIM-product.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Product">
        <xsd:sequence>
          <xsd:element name="simProductInfo" type="SimProductInfo">
            <xsd:annotation>
              <xsd:documentation>Contains information regarding the specification of the SIM-Card.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="IncompatibleProductsList">
    <xsd:sequence>
      <xsd:element name="productId" type="ProductId" maxOccurs="unbounded" minOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PackProductGroupRemovalAction">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNSUBSCRIBE">
        <xsd:annotation>
          <xsd:documentation>The product will be unsubscribed.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DELETE">
        <xsd:annotation>
          <xsd:documentation>The product will be deleted.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PackProductGroup">
    <xsd:sequence>
      <xsd:element name="id" type="String64">
        <xsd:annotation>
          <xsd:documentation>A unique identifier for this pack product group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="name" type="String64">
        <xsd:annotation>
          <xsd:documentation>A plain text name for this pack product group which can be used as a display name in frontend applications.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="defaultPackProduct" type="ProductId" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>The pack product which will be booked automatically if no other pack product of the same group is active.
                            This will only be set if the group is non-stackable.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="removalAction" type="PackProductGroupRemovalAction">
          <xsd:annotation>
            <xsd:documentation>Defines the action applied on the currently active pack product if another product in the same group is booked
                          and the maximum number of allowed products for this group is reached.&lt;br/>
                          This will only be set if the group is non-stackable.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="displayRank" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Defines the order in which pack product groups should be displayed. Lower values are ordered before higher values.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packGroupType" type="PackGroupTypeEnum">
        <xsd:annotation>
          <xsd:documentation>Defines the pack group type of the pack product group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="minPacksAllowed" type="xsd:nonNegativeInteger">
        <xsd:annotation>
          <xsd:documentation>Minimum number of packs that can be subscribed in the pack product group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="maxPacksAllowed" type="xsd:nonNegativeInteger">
        <xsd:annotation>
          <xsd:documentation>Maximum number of packs that can be subscribed in the pack product group.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PackGroupTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Pack group type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="STACKABLE">
        <xsd:annotation>
          <xsd:documentation>Packs in a stackable pack group can be booked multiple times.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NON_STACKABLE">
        <xsd:annotation>
          <xsd:documentation>Packs in a non-stackable pack group can only be booked exclusively.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DISPLAY_ONLY">
        <xsd:annotation>
          <xsd:documentation>Packs in the display-only pack group are displayed in a frontend GUI as belonging together.
                        No business logic is attached to this pack group type.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PackProduct">
    <xsd:complexContent>
      <xsd:extension base="Product">
        <xsd:sequence>
          <xsd:element name="packProductInfo" type="PackInfo">
            <xsd:annotation>
              <xsd:documentation>Contains general information about this pack product.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="incompatibleProducts" type="IncompatibleProductsList" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>A list of eligible products which are incompatible with this product.
                                If this product has no incompatibilities, this element will not be set.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="packProductGroup" type="PackProductGroup" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Information about the pack product group of this pack product.
                                If the product does not belong to any group, this element will not be set.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="displayRank" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Defines the order in which pack products should be displayed. Lower values are ordered before higher values.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TariffProduct">
    <xsd:complexContent>
      <xsd:extension base="Product">
        <xsd:sequence>
          <xsd:element name="wholesaleTariffId" type="String20" minOccurs="0"/>
          <xsd:element name="bonusAccount" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Defines whether the bonus account can be used with this tariff product.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="bonusUsability" type="BonusUsability" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Defines the services for which the bonus account can be used.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="displayRank" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Defines the order in which tariff products should be displayed. Lower values are ordered before higher
                                values.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="tariffName" type="String64">
            <xsd:annotation>
              <xsd:documentation>The name of the tariff.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TariffSubscription">
    <xsd:complexContent>
      <xsd:extension base="ProductSubscription">
        <xsd:sequence>
          <xsd:element name="tariffProduct" type="TariffProduct"/>
          <xsd:element name="tariffSubscriptionInfo" type="TariffSubscriptionInfo" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TariffSubscriptionInfo">
    <xsd:annotation>
      <xsd:documentation>Information about the customer's subscription to the referenced tariff product.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductSubscriptionInfo">
        <xsd:sequence>
          <xsd:element name="startDate" type="xsd:dateTime" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The date on which this particular tariff product was subscribed.
                                For initial registrations, this will be the date the corresponding SIM card was preprovisioned in Prepaid
                                IT.
                                For tariff changes, this will be the date on which the tariff change was executed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SimSubscription">
    <xsd:complexContent>
      <xsd:extension base="ProductSubscription">
        <xsd:sequence>
          <xsd:element name="simProduct" type="SimProduct"/>
          <xsd:element name="simSubscriptionInfo" type="SIMInfo" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="IncompatiblePackProduct">
    <xsd:sequence>
      <xsd:element name="productId" type="ProductId"/>
      <xsd:element name="packProductInfo" type="PackInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackSubscriptionInfo">
    <xsd:annotation>
      <xsd:documentation>Contains customer-specific information regarding the subscription of the pack-product.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductSubscriptionInfo">
        <xsd:sequence>
          <xsd:element name="packSubscriptionInfo" type="SubscriptionInfo" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Current pack subscription of the MSISDN. Optional (Mandatory in case of request other than pack
                                subscription)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="packGroup" type="PackGroup" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>PackGroup information of the pack if belongs to the packgroup.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="incompatiblePack" type="IncompatiblePackProduct" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>List of packs which are incompatible to the pack.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pendingOrderType" type="PendingOrderType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Describes about the status of the pending pack request. Will be populated only if there are any pending
                                pack requests for subscription/unsubscription/delete.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="counter" type="Counter" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>It is the current value of the counter.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PackSubscription">
    <xsd:complexContent>
      <xsd:extension base="ProductSubscription">
        <xsd:sequence>
          <xsd:element name="packProduct" type="PackProduct"/>
          <xsd:element name="packSubscriptionInfo" type="PackSubscriptionInfo" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AvailableProduct">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="packProduct" type="PackProduct"/>
        <xsd:element name="tariffProduct" type="TariffProduct"/>
      </xsd:choice>
      <xsd:element name="subscriptionFee" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Fee in Eurocents to subscribe the product via the subscription channel specified in the request.
                        Example: 123 (123 cents).
                        &lt;br/>
                        If the product is not subscribable through the channel or the provided information is not sufficient to determine
                        the price, the field will not be returned. E.g. the fee for a tariff change technically depends on the current
                        tariff, so it can only be returned when the current tariff is known (as in getAvailableProducts but not in
                        getProductList).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AvailableProductsList">
    <xsd:sequence>
      <xsd:element name="product" type="AvailableProduct" maxOccurs="unbounded" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProductSubscriptionsList">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element name="simSubscription" type="SimSubscription"/>
      <xsd:element name="packSubscription" type="PackSubscription"/>
      <xsd:element name="tariffSubscription" type="TariffSubscription"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="ProductTypeFilterList">
    <xsd:sequence>
      <xsd:element name="productType" type="ProductTypeEnum" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ProductTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Product type code</xsd:documentation>
        <xsd:documentation>Product type</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="SIM">
        <xsd:annotation>
          <xsd:documentation>The product type for SIM cards. Only supported for the getCurrentProducts and getDynamicCustomerData operation.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PACK">
        <xsd:annotation>
          <xsd:documentation>The product type for packs.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TARIFF">
        <xsd:annotation>
          <xsd:documentation>The product type for tariffs.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:group name="LimitResponseToProductGroup">
    <xsd:sequence>
      <xsd:element name="limitResponseTo" type="ProductTypeFilterList" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>&lt;b>Product type SIM is only supported for the request types getCurrentProducts and getDynamicCustomerData.&lt;/b>&lt;br/>
                        Limit the response generated by the request to certain product types.
                        &lt;em>If not specified, the information for all products will be returned.&lt;/em></xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="CustomerCareMsisdnProductRequest">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareMsisdnRequest">
        <xsd:group ref="LimitResponseToProductGroup"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CustomerCareWithMsisdnOrIccIdProductRequest">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareWithMsisdnOrIccIdRequest">
        <xsd:group ref="LimitResponseToProductGroup"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GetAvailableProductsRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareWithMsisdnOrIccIdProductRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetAvailableProductsResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[Returns a list of all products that can be ordered by the customer.
                Only products are returned that can be ordered via the channel that was set in the corresponding request.
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>1</td><td>Customer is not Active.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="availableProducts" type="AvailableProductsList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is omitted in case the result is not successful.
                                    In case the customer has no available products, an empty list is returned.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentProductsRequest">
    <xsd:annotation>
      <xsd:documentation>This operation is deprecated and will be removed in the future. Use getDynamicCustomerData instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnProductRequest">
          <xsd:sequence>
            <xsd:element name="getCurrentCounterValues" type="xsd:boolean" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>If set, the current counter values will be queried from network and included in the reply. By default
                                    this value is false.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentProductsResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[Returns a list of all products that the customer has subscribed or ordered.
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>1</td><td>Customer is not Active.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="productSubscriptions" type="ProductSubscriptionsList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is omitted in case the result is not successful.
                                    In case the customer has no subscribed products, an empty list is returned.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetDynamicCustomerDataRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnProductRequest">
          <xsd:sequence>
            <xsd:element name="includeDetailsFor">
              <xsd:annotation>
                <xsd:documentation>Specifies which type of information are required and shall be returned. Information not relevant to the caller
                                    shall not be queried in order to reduce latency and load.

                                    Note that limitResponseTo can override these settings, e.g., if the response is limited to SIM products,
                                    specifying to include pack counter values will have no effect.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="balance" type="xsd:boolean">
                    <xsd:annotation>
                      <xsd:documentation>Defines whether the customer's current balance shall be returned.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="qualityOfService" type="xsd:boolean">
                    <xsd:annotation>
                      <xsd:documentation>Defines whether the last known quality of service information shall be returned.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element name="products" fixed="true">
                    <xsd:annotation>
                      <xsd:documentation>Defines whether information for current products shall be returned.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:simpleContent>
                        <xsd:extension base="xsd:boolean">
                          <xsd:attribute name="packCounters" type="xsd:boolean" use="optional" default="false">
                            <xsd:annotation>
                              <xsd:documentation>Defines whether current pack counter values shall be returned.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:attribute>
                          <xsd:attribute name="usageControlCounters" type="xsd:boolean" use="optional" default="false">
                            <xsd:annotation>
                              <xsd:documentation>Defines whether current usage control counter values shall be returned.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:attribute>
                        </xsd:extension>
                      </xsd:simpleContent>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetDynamicCustomerDataResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[Returns a list of all products that the customer has subscribed or ordered.
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>1</td><td>Customer is not Active.</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network error (OCS)</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="productSubscriptions" type="ProductSubscriptionsList" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is omitted in case the result is not successful.
                                    In case the customer has no subscribed products, an empty list is returned.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="balanceInfo" type="BalanceInfo" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Returns the customer's current balance information if it has been requested.
                                    Is omitted in case the result is not successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="qualityOfService" type="QoSInformation" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Returns the customer's last known quality of service information if it has
                                    been requested.
                                    Is omitted in case the result is not successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="DrcErrorCodeEnum">
    <xsd:annotation>
      <xsd:documentation>The ErrorCodeEnum is a type-safe enumeration of qualifiers for Error codes. The base type of the enumeration is xsd:int.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:annotation>
        <xsd:documentation>DRC error code</xsd:documentation>
        <xsd:documentation>DRC error</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="100">
        <xsd:annotation>
          <xsd:documentation>Invalid MSISDN</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="101">
        <xsd:annotation>
          <xsd:documentation>Invalid amount</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="102">
        <xsd:annotation>
          <xsd:documentation>All other validation errors</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="200">
        <xsd:annotation>
          <xsd:documentation>Already in progress: a request with the same data is currently processing by another thread</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="201">
        <xsd:annotation>
          <xsd:documentation>unknown problem within processing chain. the data can be inconsistent</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="202">
        <xsd:annotation>
          <xsd:documentation>Internal error</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="300">
        <xsd:annotation>
          <xsd:documentation>PSP not available</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="301">
        <xsd:annotation>
          <xsd:documentation>unexpected error from PSP.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="302">
        <xsd:annotation>
          <xsd:documentation>Charging rejected by PSP. the original error code from PSP will be delivered with pspResultCode element</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="303">
        <xsd:annotation>
          <xsd:documentation>PSP unknown customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="304">
        <xsd:annotation>
          <xsd:documentation>PSP insufficient balance.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DrcErrorSourceEnum">
    <xsd:annotation>
      <xsd:documentation>The DrcErrorSourceEnum is a type-safe enumeration of qualifiers for Drc Error Source.
                The base type of the enumeration is xsd:string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>DRC error source code</xsd:documentation>
        <xsd:documentation>DRC error source</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="OCS">
        <xsd:annotation>
          <xsd:documentation>OCS</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PSP">
        <xsd:annotation>
          <xsd:documentation>PSP</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DRC">
        <xsd:annotation>
          <xsd:documentation>DRC</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="StoreFailedRechargeAttemptRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="eventTimeStamp" type="xsd:dateTime"/>
            <xsd:element name="transactionId" type="xsd:long"/>
            <xsd:element name="errorSource" type="DrcErrorSourceEnum"/>
            <xsd:element name="errorCode" type="DrcErrorCodeEnum"/>
            <xsd:element name="errorMessage" type="String256" minOccurs="0"/>
            <xsd:element name="correlationId" type="String32" minOccurs="0"/>
            <xsd:element name="amount" type="Amount" minOccurs="0"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="StoreFailedRechargeAttemptResult">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[<table><tbody>
                    <tr bgcolor="black">
                    <th style="color:white;">ResultCode</th>
                    <th style="color:white;">ReasonMsg</th>
                    <th style="color:white;">Error Type</th>
                    </tr>
                    <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                    <tr><td>-1</td><td>General system error.</td><td>Permanent</td></tr>
                    <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                    <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                    <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                    <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                    </tbody></table>]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreateCrmOrderRequest" type="CreateCrmOrderRequestType"/>
  <xsd:complexType name="CreateCrmOrderRequestType">
    <xsd:annotation>
      <xsd:documentation>Upon receiving a CreateCrmOrderRequest, Prepaid IT checks if the products can be ordered via the specified channel and
                client. Unless all of the selected products are eligible, an error is returned and the order is not executed.
                &lt;br/>
                Historic note: For NFC purposes, the total cost of the order can be overridden. As NFC orders can only contain one item, the
                fee is moved to the item level.
                &lt;br/>
                Transient errors can only occur during validation.
                Any error during processing is either not reported to the front end and retried or considered permanent.
                &lt;br/>
                The MSISDN must be given except if one of the actions assignMsisdn or shipSim are present.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CustomerCareOptionalMsisdnRequest">
        <xsd:sequence>
          <xsd:element name="crmOrder" type="CrmOrderElements"/>
          <xsd:element name="sendAsyncResponses" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The flag determines if an asynchronous response is sent or suppressed.&lt;br/>
                                If the flag is not supplied, the default configuration is used.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmOrderElements">
    <xsd:annotation>
      <xsd:documentation>Upon receiving a CreateCrmOrderRequest, Prepaid IT checks if the products can be ordered via the specified channel and
                client. Unless all of the selected products are eligible, an error is returned and the order is not executed.
                &lt;br/>
                Historic note: For NFC purposes, the total cost of the order can be overridden. As NFC orders can only contain one item, the
                fee is moved to the item level.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="clientOrderId" type="ClientOrderId">
        <xsd:annotation>
          <xsd:documentation>Suggested value: "U-???:[UUID]"</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="additionalBalanceCheck" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If true then an additional balance check is done before creating the order.
                        If the balance is too low, error 514 is returned and the order is not executed.
                        If not set, this flag defaults to false and no additional balance check will be made.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ignoreFailedPackProductSubscriptions" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If the order contains multiple pack product subscription actions and this flag is set to true,
                        failure of any of those actions during execution will be ignored. If it is set to false, the other
                        actions will not be executed once one action failed. This does not affect the eligibility check. If an
                        ineligible selection of pack products is requested, the eligibility error is returned synchronously.
                        This flag will be ignored if passed as an argument to validateCrmOrder. &lt;br/>
                        If not set, this flag defaults to false. Note that it only affects pack product subscription actions.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="allowSyncCustomerDataValidationResponse" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Whether Prepaid IT is allowed to reject the order synchronously for address bank data or fraud check validation
                        failures. Default: true
                        If this is set to false, Prepaid IT will always accept even invalid orders reg. address, bank data and fraud check.
                        In case an order fails one of those validations in Prepaid IT, it will be passed into manual processing within Prepaid IT.
            <br/>
            This field may only be passed if the order contains a shipSim action.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="frontendOrderId" type="FrontendOrderId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The order ID generated by the frontend. Mandatory in case a shipSim action is part of the order.&lt;br/>
                        This will be passed to LAPI as FrontendOrderID (used for order deduplication) and provided to DPM to be printed in
                        the order confirmation/rejection email. So it might be communicated to the customer and must be unique.
                        Thus, if a customer orders multiple Prepaid SIM cards within one online shop order, multiple Prepaid CRM orders
                        with different FrontendOrderIds need to be generated.&lt;br/>
                        LAPI currently has a maximum length of 20 characters for the FrontendOrderID.
                        So requests with a frontendOrderId longer than 20 characters will fail during asynchronous processing.&lt;br/>
                        This ID will also be passed to Customer Checking so that Fraud Cockpit can correlate the requests caused by the
                        same order, coming from Portal and Customer Checking.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="frontendSubscriptionId" type="FrontendSubscriptionId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The order item ID generated by the frontend. Mandatory in case a shipSim action is part of the order.&lt;br/>
                        (Prepaid CRM orders always contain a single frontend subscription only. In case multiple SIM cards are ordered
                        within one online shop order, multiple orders must be generated by the online shop.)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="productActions" type="CreateCrmOrderActions">
        <xsd:annotation>
          <xsd:documentation><![CDATA[<p>Can contain a combination of crmOrderActions, with the following restrictions:</p>
                        <ul>
                            <li>The subscribePack action is the only action type that is allowed multiple times.</li>
                            <li>Only the following actions can occur in a CRM order with multiple actions (given in the order in which they are processed):
                                <ul>
                                    <li>assignMsisdn</li>
                                    <li>shipSim</li>
                                    <li>registerCustomer</li>
                                    <li>redeemVoucher</li>
                                    <li>changeTariff</li>
                                    <li>subscribePack</li>
                                    <li>registerForDirectDebit</li>
                                    <li>changeRechargeOptions</li>
                                    <li>createPortingInOrder</li>
                                    <li>checkSim (validateCrmOrder only)</li>
                                </ul>
                                All other actions must be the only action in an order.
                            </li>
                            <li>If registerCustomer and changeRechargeOptions are contained in a single order, the action registerForDirectDebit also has to be present</li>
                            <li>The action createPortingInOrder cannot be combined with the actions:
                                <ul>
                                    <li>shipSim</li>
                                    <li>registerForDirectDebit</li>
                                    <li>changeRechargeOptions</li>
                                    <li>rechargeViaDirectDebit</li>
                                    <li>unsubscribePack</li>
                                    <li>updatePack</li>
                                    <li>deletePack</li>
                                </ul>
                            </li>
                        </ul>]]]]>><![CDATA[</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CreateCrmOrderActions">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="subscribePack" type="SubscribePack"/>
      <xsd:element name="unsubscribePack" type="UnsubscribePack"/>
      <xsd:element name="deletePack" type="DeletePack"/>
      <xsd:element name="updatePack" type="UpdatePack"/>
      <xsd:element name="checkSim" type="CheckSim">
        <xsd:annotation>
          <xsd:documentation>Only valid for validateCrmOrder.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="assignMsisdn" type="AssignMsisdn"/>
      <xsd:element name="shipSim" type="CrmShipSim"/>
      <xsd:element name="shipReplacementSim" type="CrmShipReplacementSim"/>
      <xsd:element name="registerCustomer" type="CrmRegisterCustomer"/>
      <xsd:element name="changeTariff" type="ChangeTariff"/>
      <xsd:element name="registerForDirectDebit" type="CrmRegisterForDirectDebit"/>
      <xsd:element name="changeRechargeOptions" type="CrmChangeRechargeOptions"/>
      <xsd:element name="rechargeViaDirectDebit" type="CrmRechargeDirectDebit"/>
      <xsd:element name="createPortingInOrder" type="CrmCreatePortingInOrder"/>
      <xsd:element name="redeemVoucher" type="CrmRedeemVoucher"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="CrmOrderActionTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Possible CrmOrder-ProductActions.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="subscribePack"/>
      <xsd:enumeration value="unsubscribePack"/>
      <xsd:enumeration value="deletePack"/>
      <xsd:enumeration value="updatePack"/>
      <xsd:enumeration value="checkSim"/>
      <xsd:enumeration value="assignMsisdn"/>
      <xsd:enumeration value="shipSim"/>
      <xsd:enumeration value="shipReplacementSim"/>
      <xsd:enumeration value="registerCustomer"/>
      <xsd:enumeration value="changeTariff"/>
      <xsd:enumeration value="registerForDirectDebit"/>
      <xsd:enumeration value="rechargeViaDirectDebit"/>
      <xsd:enumeration value="changeRechargeOptions"/>
      <xsd:enumeration value="createPortingInOrder"/>
      <xsd:enumeration value="redeemVoucher"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActionItemId">
    <xsd:restriction base="xsd:positiveInteger"/>
  </xsd:simpleType>
  <xsd:complexType name="CrmOrderAction" abstract="true">
    <xsd:sequence>
      <xsd:element name="actionItemId" type="ActionItemId">
        <xsd:annotation>
          <xsd:documentation>This element must be unique for each productAction within an order. Usually, the productActions should have
                        consecutive actionItemIds</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackAction" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="comment" type="Comment" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Comment to be inserted into pack subscription history entry.
                                Will be ignored for the UpdatePack action.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="smsCommunication" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>False means that no SMS will be sent, independent of the SMS configuration of the pack.
                                True means an SMS will be sent if possible, considering the CAT/User configured SMS preferences.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="emailCommunication" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>False means the email will not be sent, independent of the email configuration of the pack.
                                True means an email will be sent if possible, considering the CAT/User configured email preferences.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SubscribePack">
    <xsd:complexContent>
      <xsd:extension base="PackAction">
        <xsd:sequence>
          <xsd:element name="productId" type="ProductId"/>
          <xsd:element name="fee" type="Amount" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Fee to subscribe the pack is in Eurocents. Example: 123 (123 cents).
                                Optional (If fee is suppressed pack will be booked with pack fee provided in pack definition,
                                if fee is provided then pack shall be booked with that fees,
                                if fees &lt; 0 then wrong parameter error code: 4 will be returned)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="OrderStatusEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Order info status code</xsd:documentation>
        <xsd:documentation>Order info status</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="ACKNOWLEDGED"/>
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="ERROR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UnsubscribePack">
    <xsd:complexContent>
      <xsd:extension base="PackSubscriptionAction"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PackSubscriptionAction" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="PackAction">
        <xsd:choice>
          <xsd:element name="productId" type="ProductId">
            <xsd:annotation>
              <xsd:documentation>The product ID of the pack. Can be used if the product ID uniquely identifies
                                the pack subscription of the customer, i.e. if the customer has only one subscription
                                of this product ID. If not, the customerSubscriptionId must be provided instead.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="customerSubscriptionId" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>The pack subscription ID in Prepaid IT. In case of stackable packs, different
                                customer subscription id’s will be available for every instance of the subscription of
                                the pack even though the pack is same.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DeletePack">
    <xsd:complexContent>
      <xsd:extension base="PackSubscriptionAction"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UpdatePack">
    <xsd:complexContent>
      <xsd:extension base="PackSubscriptionAction"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CheckSim">
    <xsd:annotation>
      <xsd:documentation>This action is used as a pre-registration check. It allows querying products available after executing an order containing a
                registration without the need to fully specify the registration request.
                Hence, this action must only be used for validateCrmOrder.

                If the same order contains an assignMsisdn action, both must contain the same ICCID.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="iccid" type="IccId">
              <xsd:annotation>
                <xsd:documentation>If present, this will be validated to match the ICCID for the MSISDN.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="activationCode" type="String6">
              <xsd:annotation>
                <xsd:documentation>If present, this will be validated to match the last six digits of the ICCID for the MSISDN.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ChangeTariff">
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="productId" type="ProductId">
            <xsd:annotation>
              <xsd:documentation>The product ID of the tariff the customer will change to.
                                In case of an On demand SIM card that was already pre-activated but not registered yet, the tariff cannot be
                                changed any more and therefore the productId must be the same as for the initial activation.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="fee" type="Amount" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>If set, this fee will override the configured fee for the tariff change.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="comment" type="AccountContactHistoryComment" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Comment that will appear in the contact history of the customer</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AssignMsisdn">
    <xsd:annotation>
      <xsd:documentation>No further actions will be executed after this action fails. No MSISDN may be provided for an order containing this action.

                If the same order contains a checkSim action, both must contain the same ICCID.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="iccId" type="IccId">
            <xsd:annotation>
              <xsd:documentation>The ICCID of the SIM card.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="puk2" type="PUK">
            <xsd:annotation>
              <xsd:documentation>The PUK2 of the SIM card.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmRegisterCustomer">
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="iccid" type="IccId">
              <xsd:annotation>
                <xsd:documentation>If present, this will be validated to match the ICCID for the MSISDN.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="activationCode" type="String6">
              <xsd:annotation>
                <xsd:documentation>If present, this will be validated to match the last six digits of the ICCID for the MSISDN.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
          <xsd:element name="personalData" type="CrmRegistrationPersonalData" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This element is mandatory for createCrmOrder requests.
                                For validateCrmOrder, this may be left empty if the customer data should not be validated.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="addressQuality" type="DataCheckQualityEnum">
            <xsd:annotation>
              <xsd:documentation>
                Defines how the address data has been checked.
                                The value CHECKED_UNKNOWN is only valid for SIM orders.
                <br/>
                If set to UNCHECKED, Prepaid IT will validate the address data against Customer Checking.
                <br/>
                This flag has no effect for a validateCrmOrder request and will be ignored.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="registrationType" type="RegistrationTypeEnum"/>
          <xsd:element name="customerAgreementFlags" type="CustomerAgreementFlags"/>
          <xsd:element name="forwardData" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates whether the data is allowed to be forwarded to external parties or not.
                                If not set, this flag defaults to false.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="permitsCallStore" type="PermitsCallStoreEnum">
            <xsd:annotation>
              <xsd:documentation>Defines whether and how call details may be stored, e.g., for use in EGN reports.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="dssEntry" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Whether the phone number should be published to DSS (phone book).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="pkk" type="Pkk" minOccurs="0"/>
          <xsd:element name="fskLevel" type="FskLevelEnum" minOccurs="0"/>
          <xsd:element name="purchaseDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The date when the SIM card was purchased.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="preferredCommunicationChannel" type="PreferredCommunicationChannelEnum" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Optional. The field may be absent in case no preferred channel is known for the customer.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="contentCardCode" type="ContentCardCode" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Optional. This field provides the code to validate and redeem a ContentCard for the initial balance.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="createOnlinePortalAccount" type="CreateOnlinePortalAccount" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Optional. If present, an online account for this MSISDN shall be created. This can only be used if the order contains an MSISDN.
                                It cannot be used if the same order contains a shipSim action.
                                Note that this flag only makes sense if the portal is using a Piranha-based authentication as this will create the account in Piranha.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="tchiboAdditionalInfo" type="TchiboAdditionalInfo" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This field will only be present for requests sent by TCHIBO.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="pdfAttachment" type="xsd:base64Binary" xmime:expectedContentTypes="application/pdf">
            <xsd:annotation>
              <xsd:documentation>Can be used to upload pdf attachments which will be forwarded to DPM.
                                As transmitting mechanism MTOM (Message Transmission Optimization Mechanism) has to be used.
                                The maximum file size supported is 10 MiB.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmRegistrationPersonalData">
    <xsd:sequence>
      <xsd:element name="lastName" type="LastName" minOccurs="0"/>
      <xsd:element name="firstName" type="FirstName" minOccurs="0"/>
      <xsd:element name="birthDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="title" type="String32" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A title such as "Dr.", "Prof." or "Mr.".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="gender" type="GenderEnum" minOccurs="0"/>
      <xsd:element name="personalId" type="PersonalId" minOccurs="0"/>
      <xsd:element name="nationality" type="NationalityEnum" minOccurs="0"/>
      <xsd:element name="contactPhone" type="TelephoneNum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Contact phone number in E.164 format, e.g., 49176...</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="email" type="String64" minOccurs="0"/>
      <xsd:element name="address" type="AddressData" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonalId">
    <xsd:sequence>
      <xsd:element name="number" type="String32"/>
      <xsd:element name="type" type="PersonalIDTypeEnum"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Expiry date of the ID with the format YYYY-MM-DD.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ShipmentAddress">
    <xsd:complexContent>
      <xsd:extension base="AddressData">
        <xsd:sequence>
          <xsd:element name="name" type="String96">
            <xsd:annotation>
              <xsd:documentation>Full name of the addressee, used as first line of the address</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CreateOnlinePortalAccount">
    <xsd:sequence>
      <xsd:element name="communicationChannel" type="CreateOnlineAccountCommunicationChannelEnum">
        <xsd:annotation>
          <xsd:documentation>The preferred way to communicate the password to the customer. If set to EMAIL, an email address must be present in the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CreateOnlineAccountCommunicationChannelEnum">
    <xsd:annotation>
      <xsd:documentation>Defines how the customer shall be informed about their online portal account password.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SMS"/>
      <xsd:enumeration value="EMAIL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CrmRegisterForDirectDebit">
    <xsd:annotation>
      <xsd:documentation>This action is used to register a customer for Direct Debit.
                If the action is combined with registerCustomer in a CRM order, the element personalData/personalId and all its fields
                (number, type, expiryDate) as well as the email address in registerCustomer are mandatory.
                If one of the values personalIdNumber, personalIdType, personalIdExpDate, dateOfBirth, email and nationality is not
                explicitly contained in the request and cannot be obtained from DB or is invalid in DB, error 456 is returned, including the
                corresponding field name.
                If the customer's current direct debit status is not UNREGISTERED, error 452 is returned.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="bankAccount" type="BankAccountRegisterDirectDebit"/>
          <xsd:element name="encryptedFrontendIpAddress" type="EncryptedIpAddressBase64" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Encrypted IP address of the customer provided by the frontend, base64-encoded</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="sepaMandateTrackingId" type="SepaMandateTrackingId" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>For a direct debit registration without an attached SEPA mandate document, this field is mandatory.
                                In that case, it is used as a tracking ID to correlate the SEPA mandate fax.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="sepaMandateSource" type="SepaMandateSourceEnum">
            <xsd:annotation>
              <xsd:documentation>The customer signed SEPA mandate in case the shop has a sign pad and the customer agreed to use it.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="sepaMandate" type="xsd:base64Binary" xmime:expectedContentTypes="application/pdf">
            <xsd:annotation>
              <xsd:documentation>The customer signed SEPA mandate in case the shop has a sign pad and the customer agreed to use it.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="EncryptedIpAddressBase64">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="128"/>
      <!--length of SHA512-encrypted address is assumed as maximum length-->
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CrmChangeRechargeOptions">
    <xsd:annotation>
      <xsd:documentation>This action is used to change the recharge options for Direct Debit.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="selectedOptions" type="DirectDebitTopUpSelectedOptions" minOccurs="0"/>
          <xsd:element name="deselectedOptions" type="DirectDebitPossibleOptionsList" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmRechargeDirectDebit">
    <xsd:annotation>
      <xsd:documentation>This action is used to recharge via Direct Debit.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="rechargeAmount" type="Amount" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Has to be a multiple of 100 Euro Cents. Otherwise error 450 is returned.
                                If rechargeAmount is omitted, the default top up amount configured for the customer is used.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmShippingAddress">
    <xsd:annotation>
      <xsd:documentation>A shipping address to be used, e.g., for SIM shipment.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="addressQuality" type="DataCheckQualityEnum">
        <xsd:annotation>
          <xsd:documentation>Defines how the address data has been checked. The value CHECKED_UNKNOWN is only valid for SIM orders.
                        If set to UNCHECKED, Prepaid IT will validate the address data against Customer Checking.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstName" type="FirstName"/>
      <xsd:element name="lastName" type="LastName"/>
      <xsd:element name="gender" type="GenderEnum" minOccurs="0"/>
      <xsd:element name="title" type="TitleEnum" minOccurs="0"/>
      <xsd:element name="company" type="String50" minOccurs="0"/>
      <xsd:element name="branch" type="String50" minOccurs="0"/>
      <xsd:element name="street" type="String40"/>
      <xsd:element name="houseNumber" type="String8" minOccurs="0"/>
      <xsd:element name="city" type="String40"/>
      <xsd:element name="zipCode" type="String8"/>
      <xsd:element name="country" type="NationalityEnum"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CrmShipSim">
    <xsd:annotation>
      <xsd:documentation>This action used to trigger a shipping of the SIM-Card. Following actions such as registrations will be carried out, but
                without a full activation of the customer.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="initialBalance" type="Amount">
            <xsd:annotation>
              <xsd:documentation>Initial balance that should be available to the customer. The OCS balance will be increased by this amount
                                after shipment.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="fee" type="Amount">
            <xsd:annotation>
              <xsd:documentation>Fee for the SIM card to be displayed in order confirmation email and to be passed to LAPI. (LAPI will
                                validate this.)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="shippingFee" type="Amount">
            <xsd:annotation>
              <xsd:documentation>Shipping fee for the SIM card to be displayed in order confirmation email. (Actually charged shipping fee is
                                configured in LAPI.)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="lapiTariffId" type="LapiTariffId">
            <xsd:annotation>
              <xsd:documentation>For selecting the actually charged SIM fee by LAPI/OFI/SAP. (Available values can be queried from LAPI.)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="lapiArticleId" type="LapiArticleId">
            <xsd:annotation>
              <xsd:documentation>The article number for the SIM card to be ordered via LAPI. (Available values can be queried from LAPI.)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isTelesalesOrder" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Whether the order was from the online shop or telesales.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="shippingAddress" type="CrmShippingAddress" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The address to which the SIM card shall be delivered. If not given, the SIM is delivered to the customer address.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmShipReplacementSim">
    <xsd:annotation>
      <xsd:documentation>This action is used to order the shipping of a replacement SIM for the customer.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="reason" type="SimReplacementReason">
            <xsd:annotation>
              <xsd:documentation>The reason the customer stated when ordering the replacement SIM.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmCreatePortingInOrder">
    <xsd:annotation>
      <xsd:documentation>Creates a porting-in order for this customer.
                This action is incompatible with all Direct Debit related CRM order actions as well as with shipSim, unsubscribePack, updatePack and deletePack.
                The interim MSISDN is the MSISDN given by the CRM order.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="portInMsisdn" type="MSISDN">
            <xsd:annotation>
              <xsd:documentation>MSISDN of the customer on the donating side that shall be ported in. Expected to be in E.164 format.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="donatingServiceProvider" type="PortingCode">
            <xsd:annotation>
              <xsd:documentation>The service provider from which the number is ported in. This must be one of the known values configured in Prepaid IT.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="donatingNetworkOperator" type="NetworkOperator" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The network operator from which the number is ported in. This must be one of the known values configured in Prepaid IT (if present).
                                This field is optional as the correct value can be obtained during the porting negotiation. It can be provided so that
                                it is available if the porting needs to be retried after negotiation has started later on.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="portingType" type="PortingType">
            <xsd:annotation>
              <xsd:documentation>When the porting in shall be carried out (e.g., as soon as possible or when the contract on the donating side ended).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="email" type="String64" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Email address of the donating customer. This may be used for communicating with / contacting the customer to inform
                                them about the porting.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:choice>
            <xsd:element name="portInCustomer">
              <xsd:annotation>
                <xsd:documentation>This field must be present if the to-be-ported customer is a private person.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="firstName" type="FirstName"/>
                  <xsd:element name="lastName" type="String64"/>
                  <xsd:element name="dateOfBirth" type="xsd:date"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="portInCompany">
              <xsd:annotation>
                <xsd:documentation>This field must be present if the to-be-ported customer is a company.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="companyName" type="String75"/>
                  <xsd:element name="customerAccountNumber" type="String20"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CrmRedeemVoucher">
    <xsd:annotation>
      <xsd:documentation>Redeems a voucher.
	           This action is incompatible with shipSim as shipSim delays the activation which would cause voucher redemptions to fail.
	           The failure to redeem a voucher does not abort the execution of the rest of the order or affect its overall status.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CrmOrderAction">
        <xsd:sequence>
          <xsd:element name="voucherCode" type="VoucherCode">
            <xsd:annotation>
              <xsd:documentation>The secret code identifying the voucher to be redeemed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="DirectDebitPossibleOptionsList">
    <xsd:list itemType="DirectDebitPossibleOptionsEnum"/>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitPossibleOptionsEnum">
    <xsd:annotation>
      <xsd:documentation>Enumeration of possible kinds of direct debit top ups.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SMS_ON_DEMAND"/>
      <xsd:enumeration value="MONTHLY"/>
      <xsd:enumeration value="THRESHOLD"/>
      <xsd:enumeration value="PACK_PAYMENT"/>
      <xsd:enumeration value="CUSTOMER_SPECIFIC_MONTHLY_LIMIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CrmOrderResult" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="CustomerCareResult">
        <xsd:sequence>
          <xsd:element name="orderId" type="OrderId" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Is omitted in case the result is not successful.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="clientOrderId" type="ClientOrderId" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Suggested value: "U-???:[UUID]". Is omitted in case the result is not successful.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="productActionResult" type="ProductActionResult" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>A result will only be set for failed actions. The overall result code is then either
                                701, 702 or 704 depending on the nature of the failure. In the case of an overall success,
                                no product action results will be returned.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="registerCustomerActionResult" type="RegistrationActionResult" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>A result for a RegisterCustomer action will only be returned if it failed (the same as for
                                other actions) or if the address was corrected. This is to ensure that the frontend is informed
                                about the address correction.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="registerDirectDebitActionResult" type="RegisterDirectDebitActionResult" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>A result for a RegisterDirectDebit action will only be returned if it failed (the same as for
                                other actions) or if the address was corrected. This is to ensure that the frontend is informed
                                about the address correction during direct debit registration.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="shipSimActionResult" type="ShipSimActionResult" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>A result for a shipSim action will only be returned if it failed (the same as for
                                other actions) or if the address was corrected. This is to ensure that the frontend is informed
                                about the address correction during the SIM shipment.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CreateCrmOrderResult">
    <xsd:annotation>
      <xsd:documentation>
        <!--Note: if you change something here, consider changing validateCrmOrder as well.--><![CDATA[
        <p>Note: This list contains only synchronous results. For possible asynchronous response codes refer to the response interface documentation.</p>

                <h4>Possible results for complete order</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>106</td><td>MSISDN does not exist in the network</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>514</td><td>Insufficient Balance.</td><td>Permanent</td></tr>
                <tr><td>701</td><td>Permanent error occurred for at least one product action</td><td>Permanent</td></tr>
                <tr><td>702</td><td>Transient error occurred for at least one product action</td><td>Transient</td></tr>
                <tr><td>704</td><td>Validation of one or more product actions failed</td><td>Permanent</td></tr>
                <tr><td>705</td><td>Invalid combination of product actions</td><td>Permanent</td></tr>
                </tbody></table>
                <p>Permanent errors take precedence over transient errors, so code 701 is returned if both types of errors
                occur in product actions.</p>
                <p>Error 704 is returned for failures during validation, before any action is executed, while error 701 can occur during the execution of actions.</p>

                <h4>Possible results for all action types</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>16</td><td>Operation could not be immediately finished because of a transient error in a backend system. It will be re-executed later</td><td>Pending</td></tr>
                <tr><td>17</td><td>Operation could not be performed because of a permanent error in a backend system</td><td>Permanent</td></tr>
                <tr><td>6xx</td><td>Network error (OCS)</td><td>Permanent</td></tr>
                <tr><td>703</td><td>Product does not exist</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "SubscribePack"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                <tr><td>304</td><td>Subscription of pending pack not admissible</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "UnsubscribePack"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>301</td><td>Pack is not active</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                <tr><td>305</td><td>Unsubscription of non-cyclic pack not admissible</td><td>Permanent</td></tr>
                </tbody></table>
                <p>The Error code 302 is returned if for example: Portal is not available in the unsubscription channel and tries to
                unsubscribe pack.</p>

                <h4>Additional possible results for action "DeletePack"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>300</td><td>Pack not available to the customer to delete</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "UpdatePack"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>301</td><td>Pack is not active</td><td>Permanent</td></tr>
                <tr><td>302</td><td>Eligibility Error.</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "ChangeTariff"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>2</td><td>Chosen target tariff not allowed</td><td>Permanent</td></tr>
                <tr><td>226</td><td>Tariff not changeable any more</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "AssignMsisdn"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>128</td><td>Not an On Demand SIM</td><td>Permanent</td></tr>
                <tr><td>129</td><td>SIM is currently processed</td><td>Permanent</td></tr>
                <tr><td>130</td><td>SIM registration failed in an inconsistent state</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "shipSim"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>119</td><td>MSISDN given for SIM shipment.</td><td>Permanent</td></tr>
                <tr><td>804</td><td>Invalid shipping address</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>The action "CheckSim" is not allowed for createCrmOrder, use "RegisterCustomer" instead.</h4>

                <h4>Additional possible results for action "RegisterCustomer"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>5</td><td>Address is not valid</td><td>Permanent</td></tr>
                <tr><td>6</td><td>Maximum SIM registration is exceeded</td><td>Permanent</td></tr>
                <tr><td>7</td><td>Content Card code check failed</td><td>Permanent</td></tr>
                <tr><td>102</td><td>MSISDN ICCID match check failed</td><td>Permanent</td></tr>
                <tr><td>103</td><td>MSISDN and Activation Code mapping not valid</td><td>Permanent</td></tr>
                <tr><td>109</td><td>MSISDN is already registered</td><td>Permanent</td></tr>
                <tr><td>111</td><td>MSISDN not available or Customer not Provisioned (No active or churn records found).</td><td>Permanent</td></tr>
                <tr><td>131</td><td>ICCID or Activation Code not allowed for assignMsisdn action</td><td>Permanent</td></tr>
                <tr><td>503</td><td>Customer Mailable Flag validation failed</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "RegisterForDirectDebit"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>5</td><td>Customer address is invalid</td><td>Permanent</td></tr>
                <tr><td>452</td><td>Operation not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                <tr><td>453</td><td>SEPA Mandate not given</td><td>Permanent</td></tr>
                <tr><td>456</td><td>Wrong or missing customer data [name of parameter]</td><td>Permanent</td></tr>
                <tr><td>459</td><td>Invalid passport number for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                <tr><td>460</td><td>Invalid personal type for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                <tr><td>461</td><td>Invalid expiry date of the passport for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                <tr><td>462</td><td>Invalid date of birth for direct debit</td><td>Permanent</td></tr>
                <tr><td>463</td><td>Invalid email for direct debit</td><td>Permanent</td></tr>
                <tr><td>464</td><td>Invalid nationality for direct debit. Mandatory for new customer registrations</td><td>Permanent</td></tr>
                <tr><td>466</td><td>Invalid bank data for direct debit</td><td>Permanent</td></tr>
                <tr><td>467</td><td>The customer is barred because of fraud</td><td>Permanent</td></tr>
                <tr><td>468</td><td>The customer is barred because of dunning and not because of fraud</td><td>Permanent</td></tr>
                <tr><td>469</td><td>The brand does not allow direct debit registrations</td><td>Permanent</td></tr>
                <tr><td>470</td><td>The SEPA mandate request was aborted due to a timeout</td><td>Permanent</td></tr>
                <tr><td>472</td><td>Direct Debit registration is not yet completed</td><td>Permanent</td></tr>
                <tr><td>474</td><td>Invalid third party bank account owner address</td><td>Permanent</td></tr>
                <tr><td>475</td><td>The brand does not allow third party bank account owners</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "ChangeRechargeOptions"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>450</td><td>Invalid recharge amount.</td><td>Permanent</td></tr>
                <tr><td>451</td><td>Invalid threshold amount.</td><td>Permanent</td></tr>
                <tr><td>452</td><td>Operation not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                <tr><td>457</td><td>Invalid recharge day</td><td>Permanent</td></tr>
                <tr><td>465</td><td>Change not allowed during direct debit activation</td><td>Permanent</td></tr>
                <tr><td>470</td><td>The SEPA mandate request was aborted due to a timeout</td><td>Permanent</td></tr>
                <tr><td>476</td><td>Recharge amount is below threshold value</td><td>Permanent</td></tr>
                <tr><td>477</td><td>Brand does not offer a customer specific monthly limit override</td><td>Permanent</td></tr>
                <tr><td>478</td><td>The customer chosen monthly recharge limit is not one of the allowed limit values</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "RechargeViaDirectDebit"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>450</td><td>Invalid recharge amount</td><td>Permanent</td></tr>
                <tr><td>452</td><td>Operation not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                <tr><td>454</td><td>Direct debit not active</td><td>Permanent</td></tr>
                <tr><td>455</td><td>Direct debit limit exceeded</td><td>Permanent</td></tr>
                <tr><td>472</td><td>Direct Debit registration is not yet completed</td><td>Permanent</td></tr>
                <tr><td>473</td><td>Selected on-demand recharge amount is not within limits</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "createPortingInOrder"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>112</td><td>MSISDN is barred</td><td>Permanent</td></tr>
                <tr><td>201</td><td>MSISDN is not registered.Porting in request is on Hold</td><td>Permanent</td></tr>
                <tr><td>207</td><td>Ongoing porting in/out order exist.</td><td>Permanent</td></tr>
                <tr><td>209</td><td>Invalid Porting Order ID and Interim MSISDN combination.</td><td>Permanent</td></tr>
                <tr><td>224</td><td>The porting code does not exist.</td><td>Permanent</td></tr>
                <tr><td>225</td><td>The network operator does not exist.</td><td>Permanent</td></tr>
                </tbody></table>

                <h4>Additional possible results for action "redeemVoucher"</h4>
                <table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>803</td><td>Voucher redemption failed</td><td>Permanent</td></tr>
                </tbody></table>
      ]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CrmOrderResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ProductActionResult">
    <xsd:sequence>
      <xsd:element name="actionItemId" type="ActionItemId"/>
      <xsd:element name="resultCode" type="ResultCodeEnum">
        <xsd:annotation>
          <xsd:documentation>Result Code</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="reasonMsg" type="String256">
        <xsd:annotation>
          <xsd:documentation>Description of the Message</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RegistrationActionResult">
    <xsd:complexContent>
      <xsd:extension base="ProductActionResult">
        <xsd:sequence>
          <xsd:element name="addressCheckResult" type="AddressResult" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This field is returned for the address check of the customer.
                                In case of accepted address, result code 0 is returned. If the address was corrected, it is returned too.
                                In case of error 5, i.e. the provided address is not valid, a list with correction candidates
                                can be returned if they are available.
                                Otherwise nothing is returned.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RegisterDirectDebitActionResult">
    <xsd:annotation>
      <xsd:documentation>The result can contain corrected or proposed addresses for both the customer and the third-party address.
                The validation for the customer address will be returned if the order does not contain a RegisterCustomer action.
                If both addresses are invalid, error code 474 takes precedence. If one of the address checks fails, the corresponding
                error code will be returned (5 for the customer address, 474 for the third-party address).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="RegistrationActionResult">
        <xsd:sequence>
          <xsd:element name="thirdPartyAddressCheckResult" type="AddressResult" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>This field is returned for the address check of the third party bank account owner.
                                In case of accepted address, result code 0 is returned. If the address was corrected, it is returned too.
                                In case of error 474, i.e. the provided address is not valid, a list with correction candidates
                                can be returned if they are available.
                                Otherwise nothing is returned.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ShipSimActionResult">
    <xsd:complexContent>
      <xsd:extension base="RegistrationActionResult"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddressList">
    <xsd:sequence>
      <xsd:element name="address" type="AddressData" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AssignMsisdnResult">
    <xsd:sequence>
      <xsd:element name="msisdn" type="MSISDN" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The MSISDN assigned to the SIM card.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="iccId" type="IccId">
        <xsd:annotation>
          <xsd:documentation>The ICCID of the SIM card.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ShipReplacementSimResult">
    <xsd:sequence>
      <xsd:element name="iccId" type="IccId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The ICCID of the replacement SIM card shipped to the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ClientOrderId">
    <xsd:annotation>
      <xsd:documentation>Unique identifier of a CRM order, defined by the client system. Suggested format: "U-???:[UUID]"</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="42"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="UpdateFrontendRegistrationDateRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="frontendRegistrationDate" type="xsd:dateTime">
              <xsd:annotation>
                <xsd:documentation>Date of the customer frontend registration. Should be in YYYY-MM-DDThh:mm:ss format.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UpdateFrontendRegistrationDateResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>1</td><td>Customer is not Active</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetHandsetDelockDataRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="imei" type="IMEI">
              <xsd:annotation>
                <xsd:documentation>IMEI of the device for which the delock code is requested</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetHandsetDelockDataResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>4</td><td>IMEI not found</td><td>Permanent</td></tr>
                <tr><td>4</td><td>Device info not found</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="handsetDelockData" type="HandsetDelockData" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Is omitted in case the result is not successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="HandsetDelockData">
    <xsd:sequence>
      <xsd:element name="handsetModel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="simLockExpiryDate" type="xsd:date"/>
      <xsd:element name="delockCode" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Delock Code of the handset. Only present if the SIM lock is expired.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="DirectDebitLimitEnum">
    <xsd:annotation>
      <xsd:documentation>Enumeration of all possible limit types for direct debit.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DAILY_AMOUNT">
        <xsd:annotation>
          <xsd:documentation>Used for daily, monetary limits. Limits of this type will have a monetary unit.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DAILY_COUNT">
        <xsd:annotation>
          <xsd:documentation>Used for general daily count limits. Limits of this type won't have a unit.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DAILY_THRESHOLD_COUNT">
        <xsd:annotation>
          <xsd:documentation>Used for daily threshold count limits. Limits of this type won't have a unit.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MONTHLY_AMOUNT">
        <xsd:annotation>
          <xsd:documentation>Used for monthly, monetary limits. Limits of this type will have a monetary unit.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MONTHLY_UNLIMITED_AMOUNT">
        <xsd:annotation>
          <xsd:documentation>Used for monthly, monetary limits if the customer specifies an unlimited amount. Limits of this type will have a monetary unit.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INITIAL_MONTHLY_AMOUNT">
        <xsd:annotation>
          <xsd:documentation>Used for the monetary limit of the first month. Limits of this type will have a monetary unit.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INITIAL_RETENTION_PERIOD">
        <xsd:annotation>
          <xsd:documentation>Indicates that the rechage has failed because the initial retention period is still running.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitErrorCodeEnum">
    <xsd:annotation>
      <xsd:documentation>General error cases.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CUSTOMER_DATA_INCOMPLETE"/>
      <xsd:enumeration value="RECHARGE_NOT_ALLOWED_IN_CURRENT_STATE"/>
      <xsd:enumeration value="ONLY_ONE_RECHARGE_IS_POSSIBLE">
        <xsd:annotation>
          <xsd:documentation>Within WAITING_FOR_FIRST_DIRECT_DEBIT only one recharge</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NO_DIRECT_DEBIT_PARAMETER_FOUND"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitCurrency">
    <xsd:annotation>
      <xsd:documentation>Enumeration of all currencies that are available for direct debit.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EUR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitValidationCycle">
    <xsd:annotation>
      <xsd:documentation>The validation cycle used for eligibility check.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DAILY_FIX_START_MIDNIGHT">
        <xsd:annotation>
          <xsd:documentation>Start always at 00:00 am of current day, end of cycle is at 12:00 pm of the same day</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MONTHLY_FLEX_START_THIRTY_DAYS">
        <xsd:annotation>
          <xsd:documentation>Starts with the day of the first DD recharge and ends 30 days later.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="MONTHLY_FIX_START_FIRST">
        <xsd:annotation>
          <xsd:documentation>Start always at 1. day of current month 00:00, end of cycle is the last day of current month 12:00 pm</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitParameterScope">
    <xsd:annotation>
      <xsd:documentation>Defines the scope of the parameter used during eligibility check, i.e. technical, customer or brand specific.
                Normally a customer scope is set if the used parameter value is derived from registration data, i.e. customer specific
                parameter was provided with registration request.
                If no customer parameter found in registration data a brand specific parameter will be used.
                But if the value of the customer or brand specific parameter is greater as a technical one, the technical parameter will
                be used.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TECHNICAL">
        <xsd:annotation>
          <xsd:documentation>A DRC internal parameter.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BRAND">
        <xsd:annotation>
          <xsd:documentation>A brand specific parameter.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CUSTOMER">
        <xsd:annotation>
          <xsd:documentation>A customer specific parameter.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DirectDebitLimitInfo">
    <xsd:sequence>
      <xsd:element name="limitType" type="DirectDebitLimitEnum"/>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="limit" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>The value of the reached limit. Monetary are e.g. in Cents for EUR</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="limitCurrency" type="DirectDebitCurrency" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The currency of the exceeded limit. May be omitted if the limit has no currency (e.g. for
                                DAILY_COUNT)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:element name="unlimited" type="AmountUnlimited"/>
      </xsd:choice>
      <xsd:element name="validationCycle" type="DirectDebitValidationCycle">
        <xsd:annotation>
          <xsd:documentation>The validation cycle used for eligibility check.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="parameterScope" type="DirectDebitParameterScope">
        <xsd:annotation>
          <xsd:documentation>If the limit is technical, customer- or brand-specific</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="limitResetTimestamp" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>The next point in time when the limit will be reset in DRC</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="remainingLimitAmount" type="Amount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>How much can still be recharged without exceeding the limit</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotifyCustomerDirectDebitLimitExceededRequest">
    <xsd:annotation>
      <xsd:documentation>Notifies PPIT that a direct debit limit has been exceeded.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:choice>
            <xsd:sequence>
              <xsd:element name="limitInfo" type="DirectDebitLimitInfo" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:sequence>
              <xsd:element name="errorCode" type="DirectDebitErrorCodeEnum"/>
              <xsd:element name="errorMessage" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Description of the error</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="256"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:choice>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="NotifyCustomerDirectDebitLimitExceededResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="DirectDebitRechargeAmountLimits">
    <xsd:sequence>
      <xsd:element name="minimumRechargeAmount" type="Amount"/>
      <xsd:element name="maximumRechargeAmount" type="Amount"/>
      <xsd:element name="recommendedRechargeAmounts" type="AmountList">
        <xsd:annotation>
          <xsd:documentation>Recharge amount values, configurable by brand. If the frontend allows it, the customer does not have to adhere to
                        these values.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="defaultRechargeAmount" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Default recharge amount value that should be preselected in the frontend.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="AmountList">
    <xsd:list itemType="Amount"/>
  </xsd:simpleType>
  <xsd:simpleType name="DirectDebitRechargePossibleUnlimitedAmountList">
    <xsd:list itemType="DirectDebitRechargePossibleUnlimitedAmount"/>
  </xsd:simpleType>
  <xsd:complexType name="DirectDebitTopUpRechargeValues">
    <xsd:annotation>
      <xsd:documentation>The valid parameter space for the CRM order action rechargeViaDirectDebit</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="minimumRechargeAmount" type="Amount"></xsd:element>
      <xsd:element name="maximumRechargeAmount" type="Amount"></xsd:element>
      <xsd:element name="recommendedRechargeAmounts" type="AmountList" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Configurable by brand. If the frontend allows it, the customer does not have to adhere to these values</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="defaultRechargeAmount" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Default recharge amount value that should be preselected in the frontend.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DirectDebitTopUpAvailableOptions">
    <xsd:sequence>
      <xsd:element name="smsOnDemand" type="DirectDebitRechargeAmountLimits"/>
      <xsd:element name="monthly">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="DirectDebitRechargeAmountLimits">
              <xsd:sequence>
                <xsd:element name="recommendedRechargeDays" type="RechargeDayList">
                  <xsd:annotation>
                    <xsd:documentation>List of suggested recharge days, configurable by brand. If the frontend allows it, the customer
                                            does not have to adhere to these values.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="defaultRechargeDay" type="RechargeDay">
                  <xsd:annotation>
                    <xsd:documentation>Default recharge day that should be preselected in the frontend.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="threshold">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="DirectDebitRechargeAmountLimits">
              <xsd:sequence>
                <xsd:element name="availableThresholdAmounts" type="AmountList">
                  <xsd:annotation>
                    <xsd:documentation>The customer has to select one of these. The values can be empty.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="defaultThresholdAmount" type="Amount">
                  <xsd:annotation>
                    <xsd:documentation>Default threshold amount that should be preselected in the frontend.</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="packPayment" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>This option allows the customer to pay for packs via direct debit</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerSpecificMonthlyLimit" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Present if the brand allows a monthly recharge limit override.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="allowedLimitValues" type="DirectDebitRechargePossibleUnlimitedAmountList">
              <xsd:annotation>
                <xsd:documentation>Sorted by value ascending, UNLIMITED last.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="defaultLimitValue" type="DirectDebitRechargePossibleUnlimitedAmount"></xsd:element>
            <xsd:element name="brandSpecificMonthlyLimit" type="DirectDebitRechargePossibleUnlimitedAmount"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DirectDebitRechargeAmount">
    <xsd:sequence>
      <xsd:element name="rechargeAmount" type="Amount"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="DirectDebitRechargePossibleUnlimitedAmount">
    <xsd:union memberTypes="Amount AmountUnlimited"/>
  </xsd:simpleType>
  <xsd:simpleType name="RechargeDay">
    <xsd:annotation>
      <xsd:documentation>RechargeDay can only be between 1 and 28. This is an internal PPIT validation.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int"/>
  </xsd:simpleType>
  <xsd:simpleType name="RechargeDayList">
    <xsd:list itemType="RechargeDay"/>
  </xsd:simpleType>
  <xsd:complexType name="DirectDebitTopUpSelectedOptions">
    <xsd:annotation>
      <xsd:documentation>Top up selected options for direct debit.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="smsOnDemand" type="DirectDebitRechargeAmount" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Present if the user has the option selected.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="monthly" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Present if the user has the option selected. rechargeAmount: full euro restriction.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="DirectDebitRechargeAmount">
              <xsd:sequence>
                <xsd:element name="rechargeDay" type="RechargeDay"/>
              </xsd:sequence>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="threshold" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Present if the user has the option selected. The recharge amount is restricted to full euro.
                        If the recharge amount is less than the threshold value, then RECHARGE_AMOUNT_BELOW_THRESHOLD_VALUE is returned.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="DirectDebitRechargeAmount">
              <xsd:sequence>
                <xsd:element name="thresholdValue" type="Amount"/>
              </xsd:sequence>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="packPayment" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Present if the user has the option selected.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerSpecificMonthlyLimit" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This should be present if the customer chooses to override the brand specific monthly limit.
                        If this is sent for a brand that does not offer a customer specific monthly limit override,
                        then RECHARGE_OPTION_NOT_ALLOWED_FOR_BRAND is returned.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="limitValue" type="DirectDebitRechargePossibleUnlimitedAmount">
              <xsd:annotation>
                <xsd:documentation>The customer chosen monthly recharge limit. If this is not one of the allowed limit values as retrieved
                                    by getRechargeOptions, then INVALID_CUSTOMER_SPECIFIC_MONTHLY_LIMIT is returned.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetRechargeOptionsRequest">
    <xsd:annotation>
      <xsd:documentation>Direct debit topup available and selected options are returned.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetRechargeOptionsResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>457</td><td>Invalid recharge day</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="allowedOnDemandRechargeValues" type="DirectDebitTopUpRechargeValues" minOccurs="0"/>
            <xsd:element name="availableOptions" type="DirectDebitTopUpAvailableOptions" minOccurs="0"/>
            <xsd:element name="selectedOptions" type="DirectDebitTopUpSelectedOptions" minOccurs="0"/>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="DirectDebitPaymentUseCasesEnum">
    <xsd:annotation>
      <xsd:documentation>Enumeration of all possible direct debit payment use cases or top ups.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ONDEMAND"/>
      <xsd:enumeration value="MONTHLY"/>
      <xsd:enumeration value="THRESHOLD"/>
      <xsd:enumeration value="INITIAL"/>
      <xsd:enumeration value="PACK_PAYMENT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ClawbackCategoryEnum">
    <xsd:restriction base="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Which clawback category was used by DRC for determining the fee.</xsd:documentation>
      </xsd:annotation>
      <xsd:enumeration value="INSUFFICIENT_BALANCE"/>
      <xsd:enumeration value="MANDATE_REVOKED"/>
      <xsd:enumeration value="AMBIGUOUS_BANK_DATA"/>
      <xsd:enumeration value="OBJECTION"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUID">
    <xsd:annotation>
      <xsd:documentation>Unique identifier of ErReference order.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDList">
    <xsd:list itemType="UUID"/>
  </xsd:simpleType>
  <xsd:simpleType name="EndToEndTransactionId">
    <xsd:annotation>
      <xsd:documentation>SEPA transaction id.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="35"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DirectDebitData">
    <xsd:annotation>
      <xsd:documentation>Direct Debit information. Group of required fields for DIRECT_DEBIT.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="reason" type="Reason">
        <xsd:annotation>
          <xsd:documentation>Remittance information (like on the bank statement).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="paymentUseCase" type="DirectDebitPaymentUseCasesEnum"/>
      <xsd:element name="packName" type="String64" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Name of the pack to be paid via direct debit. Mandatory with paymentUseCase PACK_PAYMENT only.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReturnDebitData">
    <xsd:annotation>
      <xsd:documentation>Return Debit information. Group of required fields for RETURN_DEBIT.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="reasonCode" type="SEPAReasonCode"/>
      <xsd:element name="clawbackCategory" type="ClawbackCategoryEnum"/>
      <xsd:element name="clawbackSuccessful" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether the balance and fee could be completely recovered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotifyAboutBankTransactionRequest">
    <xsd:annotation>
      <xsd:documentation>Direct debit topup prenotification.
                The customer is informed before the direct debit topup is executed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="externalContractId" type="ExternalContractId"/>
            <xsd:choice>
              <xsd:element name="directDebitData" type="DirectDebitData"/>
              <xsd:element name="returnDebitData" type="ReturnDebitData"/>
            </xsd:choice>
            <xsd:element name="amount" type="Amount">
              <xsd:annotation>
                <xsd:documentation>If direct debit it means how much will be deducted from the account.
                                    If return debit it means how much will be added to the account.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="fee" type="Amount" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>The fee that will be charged for this operation. This is independent from the amount element.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="executionTimestamp" type="xsd:dateTime">
              <xsd:annotation>
                <xsd:documentation>Date the SEPA transaction was/will be executed.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endToEndTransactionId" type="EndToEndTransactionId">
              <xsd:annotation>
                <xsd:documentation>SEPA transaction id.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="sepaMandateId" type="MandateId">
              <xsd:annotation>
                <xsd:documentation>Sepa mandate identifier. In case of return debit, this is the SEPA mandate ID of the original payment.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="referenceIds" type="UUIDList">
              <xsd:annotation>
                <xsd:documentation>The list of transaction IDs used for booking this balance change at OCS.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="NotifyAboutBankTransactionResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>17</td><td>Operation could not be performed because of a permanent error in a backend system</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PrepareClawbackRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest">
          <xsd:sequence>
            <xsd:element name="externalContractId" type="ExternalContractId">
              <xsd:annotation>
                <xsd:documentation>The external contract id of the customer that should be barred</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="endToEndTransactionId" type="EndToEndTransactionId" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>SEPA transaction id that caused the clawback</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PrepareClawbackResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>16</td><td>Operation could not be performed because of a transient error in a backend system</td><td>Transient</td></tr>
                <tr><td>17</td><td>Operation could not be performed because of a permanent error in a backend system</td><td>Permanent</td></tr>
                <tr><td>106</td><td>MSISDN does not exist in the network</td><td>Permanent</td></tr>
                <tr><td>471</td><td>A clawback is no longer possible because a confirmed porting out order exists</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ConfirmSepaMandateRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="sepaMandateId" type="MandateId">
              <xsd:annotation>
                <xsd:documentation>One of the SEPA mandate IDs referring to the SEPA mandate that is confirmed.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ConfirmSepaMandateResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>16</td><td>Operation could not be performed because of a transient error in a backend system</td><td>Transient</td></tr>
                <tr><td>17</td><td>Operation could not be performed because of a permanent error in a backend system</td><td>Permanent</td></tr>
                <tr><td>106</td><td>MSISDN does not exist in the network</td><td>Permanent</td></tr>
                <tr><td>481</td><td>No pending SEPA mandate found</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SearchTenantBrandAssignmentRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequestBasic">
          <xsd:sequence>
            <xsd:element name="msisdn" type="MSISDN">
              <xsd:annotation>
                <xsd:documentation>The MSISDN of the customer for which the assignment is queried.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="limitResponseTo">
              <xsd:annotation>
                <xsd:documentation>A list of tenants for filtering the response. Only assignments matching one of the given tenant ids will
                                    be returned.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="tenantID" type="TenantID" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SearchTenantBrandAssignmentResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResultBasic">
          <xsd:sequence>
            <xsd:element name="tenantBrandAssignment">
              <xsd:annotation>
                <xsd:documentation>In most cases there will be only one result to be returned; but in some cases, e.g. porting, there can
                                    be returned several entries. If several entries are returned, at most one assignment status might be
                                    ACTIVE, and the rest must remain INACTIVE. It is also possible to have several entries with assignment
                                    status INACTIVE only.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="tenantBrandAssignmentElement" type="TenantBrandAssignmentElement" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="AssignmentStatusTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Status about the assignment of the MSISDN</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="INACTIVE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="TenantBrandAssignmentElement">
    <xsd:sequence>
      <xsd:element name="brandID" type="BrandID"/>
      <xsd:element name="tenantID" type="TenantID"/>
      <xsd:element name="assignmentStatus" type="AssignmentStatusTypeEnum"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ChangeBankAccountRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="bankAccountData" type="BankAccountData">
              <xsd:annotation>
                <xsd:documentation>The new bank account data</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeBankAccountResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]</td><td>Permanent</td></tr>
                <tr><td>16</td><td>Operation could not be performed because of a transient error in a backend system</td><td>Transient</td></tr>
                <tr><td>17</td><td>Operation could not be performed because of a permanent error in a backend system</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system.</td><td>Permanent</td></tr>
                <tr><td>104</td><td>MSISDN is not active</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>452</td><td>Operation not possible because of invalid Direct Debit State</td><td>Permanent</td></tr>
                <tr><td>454</td><td>Direct debit not active</td><td>Permanent</td></tr>
                <tr><td>458</td><td>Too many bank account changes were performed in the past</td><td>Permanent</td></tr>
                <tr><td>467</td><td>The customer is barred because of fraud</td><td>Permanent</td></tr>
                <tr><td>468</td><td>The customer is barred because of dunning and not because of fraud</td><td>Permanent</td></tr>
                <tr><td>472</td><td>Direct Debit registration is not yet completed</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetBrandConfigurationRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareRequest"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="MonthlyLimitTypeEnum">
    <xsd:annotation>
      <xsd:documentation>whether the monthly limit is reset every thirty days after the first recharge or at the start of each calender month.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="THIRTY_DAYS"/>
      <xsd:enumeration value="CALENDAR_MONTHLY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="BrandConfigurationPayment">
    <xsd:annotation>
      <xsd:documentation>Represent payment configuration options of the specific Brand.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="directDebitRegistrationEnabled" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether the frontend should allow direct debit registration to the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="thirdPartyBankAccountOwnerAllowed" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Whether a third party bank account owner is allowed or not. Not present if Direct Debit is not enabled for the brand.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="monthlyLimitType" type="MonthlyLimitTypeEnum" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Whether the monthly limit is reset every thirty days after the first recharge or at the start of each calender
                        month. Not present if Direct Debit is not enabled for the brand.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BrandConfigurationRegistration">
    <xsd:annotation>
      <xsd:documentation>Represent registration configuration options of the specific Brand.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="emailValidation" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether the frontend should force the customer to validate the email address before allowing access.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BrandConfigurationCommunication">
    <xsd:annotation>
      <xsd:documentation>Represent communication configuration options of the specific Brand.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="customerAgreementReminderInterval" type="xsd:nonNegativeInteger">
        <xsd:annotation>
          <xsd:documentation>
            The number of days that must have passed since the customer was last asked to update their agreement
                        flags before asking again.
            <br/>
            If this is set to 0, the reminder functionality is disabled for the brand.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BrandConfigurationSimReplacementGracePeriod">
    <xsd:annotation>
      <xsd:documentation>Represent SIM replacement shipment configuration options of the specific Brand</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="firstPeriodLengthInMonths" type="PositiveInteger">
        <xsd:annotation>
          <xsd:documentation>Length of the time period in months after customer registration in which the fee feeDefectFirstPeriod applies for SIM replacement shipment with reason "defect".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="feeDefectFirstPeriod" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee for a SIM replacement with reason "defect" for the initial time period after registration in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BrandConfigurationSimReplacement">
    <xsd:annotation>
      <xsd:documentation>Represent SIM replacement shipment configuration options of the specific Brand</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="feeNone" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee for a SIM replacement without specific reason is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="feeTheft" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee for a SIM replacement with reason "theft" is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="feeLoss" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee for a SIM replacement with reason "loss" is in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="feeFormFactor" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee for a SIM replacement with reason "form factor" in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="feeDefectSecondPeriod" type="Amount">
        <xsd:annotation>
          <xsd:documentation>Fee for a SIM replacement with reason "defect" after the initial time period after registration in Eurocents. Example: 123 (123 cents)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="gracePeriod" type="BrandConfigurationSimReplacementGracePeriod" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Configuration of the grace period of a SIM replacement with reason "defect". If not given feeDefectSecondPeriod applies at all times for the reason defect.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="showLastSimOrderedWithinXDays" type="PositiveInteger" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Number of days after a SIM replacement was ordered for the customer during which a warning is to be shown during the SIM replacement shipment process, informing the customer that a SIM replacement was recently ordered.
                        If not given, no warning is to be shown.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetBrandConfigurationResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-1</td><td>General system error.</td><td>Transient</td></tr>
                <tr><td>115</td><td>Brand does not match</td><td>Permanent</td></tr>
                <tr><td>116</td><td>Unknown tenant</td><td>Permanent</td></tr>
                <tr><td>117</td><td>Unknown brand</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult">
          <xsd:sequence>
            <xsd:element name="payment" type="BrandConfigurationPayment" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Payment configuration of the Brand. Present if the request is successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registration" type="BrandConfigurationRegistration" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Registration configuration of the Brand. Present if the request is successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="communication" type="BrandConfigurationCommunication" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>Communication configuration of the Brand. Present if the request is successful.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="simReplacement" type="BrandConfigurationSimReplacement" minOccurs="0">
              <xsd:annotation>
                <xsd:documentation>SIM replacemnt shipping configuration of the Brand. Present if the request is successful and automated SIM replacement is supported for the brand.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActivateContractRequest">
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareMsisdnRequest">
          <xsd:sequence>
            <xsd:element name="dateOfBirth" type="xsd:date">
              <xsd:annotation>
                <xsd:documentation>The date of birth of the customer.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActivateContractResult">
    <xsd:annotation>
      <xsd:documentation><![CDATA[<table><tbody>
                <tr bgcolor="black">
                <th style="color:white;">ResultCode</th>
                <th style="color:white;">ReasonMsg</th>
                <th style="color:white;">Error Type</th>
                </tr>
                <tr><td>0</td><td>Request Successful</td><td>&nbsp;</td></tr>
                <tr><td>-2</td><td>Unmapped error. More specific information is available in later versions of the interface.</td><td>Permanent</td></tr>
                <tr><td>-1</td><td>General system error. Internal technical issue in Prepaid IT.</td><td>Transient</td></tr>
                <tr><td>4</td><td>Wrong or missing mandatory parameters [Name of missing parameter]. In case some basic field validations failed.</td><td>Permanent</td></tr>
                <tr><td>18</td><td>The given date of birth does not match the one we have on file for the customer.</td><td>Permanent</td></tr>
                <tr><td>101</td><td>MSISDN does not exist in the system. Not a valid Prepaid MSISDN or MSISDN of wrong tenant.</td><td>Permanent</td></tr>
                <tr><td>109</td><td>MSISDN is already registered. The SIM card has already been activated.</td><td>Permanent</td></tr>
                <tr><td>115</td><td>Brand does not match. The brand given in the request does not match the brand the MSISDN is assigned to.</td><td>Permanent</td></tr>
                <tr><td>706</td><td>No online order has been found or the online order has permanently failed.</td><td>Permanent</td></tr>
                <tr><td>707</td><td>The customer agent has canceled the online order. Activation is not possible any more.</td><td>Permanent</td></tr>
                <tr><td>480</td><td>Missing SEPA mandate</td><td>Permanent</td></tr>
                </tbody></table>]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="CustomerCareResult"/>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>]]></con:content>
      <con:type>http://www.w3.org/2001/XMLSchema</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://localhost:8080/PPIT/CustomerCareServices</con:endpoint>
  </con:endpoints>
  <con:environmentSpec>
    <con:entry environmentId="e385afea-1153-4d90-83b9-3b49a724f0ea">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:interface>
