<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="71a9a2b3-81a0-4eef-a442-fa4be24a2370" wsaVersion="NONE" name="Common-SOAPBinding" type="wsdl" bindingName="{http://www.telefonica.com/OCS/To2DE/OCS_services/v1_1}Common-SOAPBinding" soapVersion="1_1" anonymous="optional" definition="../WSDLs/OCS-OpenChargingServices/OCS-10-Services/OCS_services_v1_1.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="71a9a2b3-81a0-4eef-a442-fa4be24a2370fileName">Common-SOAPBinding</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="file:/D:/Projects/Telefonica/DirectReCharge/soapUI-NG-Pro/WSDLs/OCS-OpenChargingServices/OCS-10-Services/OCS_services_v1_1.wsdl">
    <con:part>
      <con:url>file:/D:/Projects/Telefonica/DirectReCharge/soapUI-NG-Pro/WSDLs/OCS-OpenChargingServices/OCS-10-Services/OCS_services_v1_1.wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.telefonica.com/OCS/To2DE/OCS_services/v1_1" xmlns="http://www.telefonica.com/OCS/To2DE/OCS_interfaces/v1_1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.telefonica.com/OCS/To2DE/OCS_services/v1_1">
  <wsdl:import namespace="http://www.telefonica.com/OCS/To2DE/OCS_interfaces/v1_1" location="OCS_interfaces_v1_1.wsdl"/>
  <wsdl:binding name="Common-SOAPBinding" type="Common-Port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="queryOperationResult">
      <soap:operation soapAction="queryOperationResult" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BalanceManagement-SOAPBinding" type="BalanceManagement-Port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="rechargeAccount">
      <soap:operation soapAction="rechargeAccount" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:header message="OCSHeaderInfo" part="replyTo" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="incrementBalance">
      <soap:operation soapAction="incrementBalance" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:header message="OCSHeaderInfo" part="replyTo" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deductBalance">
      <soap:operation soapAction="deductBalance" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:header message="OCSHeaderInfo" part="replyTo" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="queryBalances">
      <soap:operation soapAction="queryBalances" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AccountManagement-SOAPBinding" type="AccountManagement-Port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createAccount">
      <soap:operation soapAction="createAccount" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAccount">
      <soap:operation soapAction="deleteAccount" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeAccount">
      <soap:operation soapAction="changeAccount" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeSubscriberId">
      <soap:operation soapAction="changeSubscriberId" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeTariffPlanId">
      <soap:operation soapAction="changeTariffPlanId" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="queryAccount">
      <soap:operation soapAction="queryAccount" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="queryCustomer">
      <soap:operation soapAction="queryCustomer" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="notifyPortability">
      <soap:operation soapAction="notifyPortability" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTribeMember">
      <soap:operation soapAction="addTribeMember" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTribeMember">
      <soap:operation soapAction="deleteTribeMember" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="queryUserTribes">
      <soap:operation soapAction="queryUserTribes" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateAccount">
      <soap:operation soapAction="activateAccount"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PackageManagement-SOAPBinding" type="PackageManagement-Port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="subscribePackage">
      <soap:operation soapAction="subscribePackage" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsubscribePackage">
      <soap:operation soapAction="unsubscribePackage" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="queryPackages">
      <soap:operation soapAction="queryPackages" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UsageControlCounterManagement-SOAPBinding" type="UsageControlCounterManagement-Port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="subscribeUsageControlCounter">
      <soap:operation soapAction="subscribeUsageControlCounter" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeUsageControlCounter">
      <soap:operation soapAction="unsubscribeUsageControlCounter" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUsageControlCounter">
      <soap:operation soapAction="changeUsageControlCounter" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="queryUsageControlCounters">
      <soap:operation soapAction="queryUsageControlCounters" style="document"/>
      <wsdl:input>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="OCSHeaderInfo" part="messageID" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="serviceException">
        <soap:fault name="serviceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="policyException">
        <soap:fault name="policyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <!--NOTE: The domain name "www.telefonica.com" used in soap addresses is a placeholder for
	the actual domain name where the OCS server is to be deployed-->
  <wsdl:service name="Common-Service">
    <wsdl:port name="Common" binding="tns:Common-SOAPBinding">
      <soap:address location="https://10.1.38.142:49154/OCS/CommonService"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="BalanceManagement-Service">
    <wsdl:port name="BalanceManagement" binding="tns:BalanceManagement-SOAPBinding">
      <soap:address location="https://10.1.38.142:49154/OCS/BalanceManagementService"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="AccountManagement-Service">
    <wsdl:port name="AccountManagement" binding="tns:AccountManagement-SOAPBinding">
      <soap:address location="https://10.1.38.142:49154/OCS/AccountManagementService"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="PackageManagement-Service">
    <wsdl:port name="PackageManagement" binding="tns:PackageManagement-SOAPBinding">
      <soap:address location="https://10.1.38.142:49154/OCS/PackageManagementService"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="UsageControlCounterManagement-Service">
    <wsdl:port name="UsageControlCounterManagement" binding="tns:UsageControlCounterManagement-SOAPBinding">
      <soap:address location="https://10.1.38.142:49154/OCS/UsageControlCounterManagementService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
    <con:part>
      <con:url>file:\D:\Projects\Telefonica\DirectReCharge\soapUI-NG-Pro\WSDLs\OCS-OpenChargingServices\OCS-10-Services\OCS_interfaces_v1_1.wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.telefonica.com/OCS/To2DE/OCS_interfaces/v1_1" xmlns="http://www.telefonica.com/OCS/To2DE/OCS_interfaces/v1_1" xmlns:ocs="http://www.telefonica.com/OCS/To2DE/OCS_types/v1_1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/04/secext" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.telefonica.com/OCS/To2DE/OCS_interfaces/v1_1" elementFormDefault="qualified">
      <xsd:import namespace="http://www.telefonica.com/OCS/To2DE/OCS_types/v1_1" schemaLocation="OCS_types_v1_1.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" schemaLocation="http://schemas.xmlsoap.org/ws/2004/08/addressing/"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/04/secext" schemaLocation="http://schemas.xmlsoap.org/ws/2002/04/secext/secext.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="queryOperationResultRequest">
    <wsdl:part name="parameters" element="ocs:queryOperationResultRequest"/>
  </wsdl:message>
  <wsdl:message name="queryOperationResultResponse">
    <wsdl:part name="parameters" element="ocs:queryOperationResultResponse"/>
  </wsdl:message>
  <wsdl:message name="rechargeAccountRequest">
    <wsdl:part name="parameters" element="ocs:rechargeAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="rechargeAccountResponse">
    <wsdl:part name="parameters" element="ocs:rechargeAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="incrementBalanceRequest">
    <wsdl:part name="parameters" element="ocs:incrementBalanceRequest"/>
  </wsdl:message>
  <wsdl:message name="incrementBalanceResponse">
    <wsdl:part name="parameters" element="ocs:incrementBalanceResponse"/>
  </wsdl:message>
  <wsdl:message name="deductBalanceRequest">
    <wsdl:part name="parameters" element="ocs:deductBalanceRequest"/>
  </wsdl:message>
  <wsdl:message name="deductBalanceResponse">
    <wsdl:part name="parameters" element="ocs:deductBalanceResponse"/>
  </wsdl:message>
  <wsdl:message name="queryBalancesRequest">
    <wsdl:part name="parameters" element="ocs:queryBalancesRequest"/>
  </wsdl:message>
  <wsdl:message name="queryBalancesResponse">
    <wsdl:part name="parameters" element="ocs:queryBalancesResponse"/>
  </wsdl:message>
  <wsdl:message name="createAccountRequest">
    <wsdl:part name="parameters" element="ocs:createAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="createAccountResponse">
    <wsdl:part name="parameters" element="ocs:createAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteAccountRequest">
    <wsdl:part name="parameters" element="ocs:deleteAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteAccountResponse">
    <wsdl:part name="parameters" element="ocs:deleteAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="changeAccountRequest">
    <wsdl:part name="parameters" element="ocs:changeAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="changeAccountResponse">
    <wsdl:part name="parameters" element="ocs:changeAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="changeSubscriberIdRequest">
    <wsdl:part name="parameters" element="ocs:changeSubscriberIdRequest"/>
  </wsdl:message>
  <wsdl:message name="changeSubscriberIdResponse">
    <wsdl:part name="parameters" element="ocs:changeSubscriberIdResponse"/>
  </wsdl:message>
  <wsdl:message name="changeTariffPlanIdRequest">
    <wsdl:part name="parameters" element="ocs:changeTariffPlanIdRequest"/>
  </wsdl:message>
  <wsdl:message name="changeTariffPlanIdResponse">
    <wsdl:part name="parameters" element="ocs:changeTariffPlanIdResponse"/>
  </wsdl:message>
  <wsdl:message name="queryAccountRequest">
    <wsdl:part name="parameters" element="ocs:queryAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="queryAccountResponse">
    <wsdl:part name="parameters" element="ocs:queryAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="queryCustomerRequest">
    <wsdl:part name="parameters" element="ocs:queryCustomerRequest"/>
  </wsdl:message>
  <wsdl:message name="queryCustomerResponse">
    <wsdl:part name="parameters" element="ocs:queryCustomerResponse"/>
  </wsdl:message>
  <wsdl:message name="notifyPortabilityRequest">
    <wsdl:part name="parameters" element="ocs:notifyPortabilityRequest"/>
  </wsdl:message>
  <wsdl:message name="notifyPortabilityResponse">
    <wsdl:part name="parameters" element="ocs:notifyPortabilityResponse"/>
  </wsdl:message>
  <wsdl:message name="addTribeMemberRequest">
    <wsdl:part name="parameters" element="ocs:addTribeMemberRequest"/>
  </wsdl:message>
  <wsdl:message name="addTribeMemberResponse">
    <wsdl:part name="parameters" element="ocs:addTribeMemberResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteTribeMemberRequest">
    <wsdl:part name="parameters" element="ocs:deleteTribeMemberRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteTribeMemberResponse">
    <wsdl:part name="parameters" element="ocs:deleteTribeMemberResponse"/>
  </wsdl:message>
  <wsdl:message name="queryUserTribesRequest">
    <wsdl:part name="parameters" element="ocs:queryUserTribesRequest"/>
  </wsdl:message>
  <wsdl:message name="queryUserTribesResponse">
    <wsdl:part name="parameters" element="ocs:queryUserTribesResponse"/>
  </wsdl:message>
  <wsdl:message name="activateAccountRequest">
    <wsdl:part name="parameters" element="ocs:activateAccountRequest"/>
  </wsdl:message>
  <wsdl:message name="activateAccountResponse">
    <wsdl:part name="parameters" element="ocs:activateAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="subscribePackageRequest">
    <wsdl:part name="parameters" element="ocs:subscribePackageRequest"/>
  </wsdl:message>
  <wsdl:message name="subscribePackageResponse">
    <wsdl:part name="parameters" element="ocs:subscribePackageResponse"/>
  </wsdl:message>
  <wsdl:message name="unsubscribePackageRequest">
    <wsdl:part name="parameters" element="ocs:unsubscribePackageRequest"/>
  </wsdl:message>
  <wsdl:message name="unsubscribePackageResponse">
    <wsdl:part name="parameters" element="ocs:unsubscribePackageResponse"/>
  </wsdl:message>
  <wsdl:message name="queryPackagesRequest">
    <wsdl:part name="parameters" element="ocs:queryPackagesRequest"/>
  </wsdl:message>
  <wsdl:message name="queryPackagesResponse">
    <wsdl:part name="parameters" element="ocs:queryPackagesResponse"/>
  </wsdl:message>
  <wsdl:message name="subscribeUsageControlCounterRequest">
    <wsdl:part name="parameters" element="ocs:subscribeUsageControlCounterRequest"/>
  </wsdl:message>
  <wsdl:message name="subscribeUsageControlCounterResponse">
    <wsdl:part name="parameters" element="ocs:subscribeUsageControlCounterResponse"/>
  </wsdl:message>
  <wsdl:message name="unsubscribeUsageControlCounterRequest">
    <wsdl:part name="parameters" element="ocs:unsubscribeUsageControlCounterRequest"/>
  </wsdl:message>
  <wsdl:message name="unsubscribeUsageControlCounterResponse">
    <wsdl:part name="parameters" element="ocs:unsubscribeUsageControlCounterResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUsageControlCounterRequest">
    <wsdl:part name="parameters" element="ocs:updateUsageControlCounterRequest"/>
  </wsdl:message>
  <wsdl:message name="updateUsageControlCounterResponse">
    <wsdl:part name="parameters" element="ocs:updateUsageControlCounterResponse"/>
  </wsdl:message>
  <wsdl:message name="queryUsageControlCountersRequest">
    <wsdl:part name="parameters" element="ocs:queryUsageControlCountersRequest"/>
  </wsdl:message>
  <wsdl:message name="queryUsageControlCountersResponse">
    <wsdl:part name="parameters" element="ocs:queryUsageControlCountersResponse"/>
  </wsdl:message>
  <wsdl:message name="OCSHeaderInfo">
    <wsdl:part name="messageID" element="wsa:MessageID"/>
    <wsdl:part name="replyTo" element="wsa:ReplyTo"/>
    <wsdl:part name="security" element="wsse:Security"/>
  </wsdl:message>
  <wsdl:message name="serviceException">
    <wsdl:part name="parameters" element="ocs:serviceException"/>
  </wsdl:message>
  <wsdl:message name="policyException">
    <wsdl:part name="parameters" element="ocs:policyException"/>
  </wsdl:message>
  <wsdl:portType name="Common-Port">
    <wsdl:operation name="queryOperationResult">
      <wsdl:input message="queryOperationResultRequest"/>
      <wsdl:output message="queryOperationResultResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="AccountManagement-Port">
    <wsdl:operation name="createAccount">
      <wsdl:input message="createAccountRequest"/>
      <wsdl:output message="createAccountResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAccount">
      <wsdl:input message="deleteAccountRequest"/>
      <wsdl:output message="deleteAccountResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="changeAccount">
      <wsdl:input message="changeAccountRequest"/>
      <wsdl:output message="changeAccountResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="changeSubscriberId">
      <wsdl:input message="changeSubscriberIdRequest"/>
      <wsdl:output message="changeSubscriberIdResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="changeTariffPlanId">
      <wsdl:input message="changeTariffPlanIdRequest"/>
      <wsdl:output message="changeTariffPlanIdResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="queryAccount">
      <wsdl:input message="queryAccountRequest"/>
      <wsdl:output message="queryAccountResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="queryCustomer">
      <wsdl:input message="queryCustomerRequest"/>
      <wsdl:output message="queryCustomerResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="notifyPortability">
      <wsdl:input message="notifyPortabilityRequest"/>
      <wsdl:output message="notifyPortabilityResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="addTribeMember">
      <wsdl:input message="addTribeMemberRequest"/>
      <wsdl:output message="addTribeMemberResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteTribeMember">
      <wsdl:input message="deleteTribeMemberRequest"/>
      <wsdl:output message="deleteTribeMemberResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="queryUserTribes">
      <wsdl:input message="queryUserTribesRequest"/>
      <wsdl:output message="queryUserTribesResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="activateAccount">
      <wsdl:input message="activateAccountRequest"/>
      <wsdl:output message="activateAccountResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="BalanceManagement-Port">
    <wsdl:operation name="rechargeAccount">
      <wsdl:input message="rechargeAccountRequest"/>
      <wsdl:output message="rechargeAccountResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="incrementBalance">
      <wsdl:input message="incrementBalanceRequest"/>
      <wsdl:output message="incrementBalanceResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="deductBalance">
      <wsdl:input message="deductBalanceRequest"/>
      <wsdl:output message="deductBalanceResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="queryBalances">
      <wsdl:input message="queryBalancesRequest"/>
      <wsdl:output message="queryBalancesResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="PackageManagement-Port">
    <wsdl:operation name="subscribePackage">
      <wsdl:input message="subscribePackageRequest"/>
      <wsdl:output message="subscribePackageResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribePackage">
      <wsdl:input message="unsubscribePackageRequest"/>
      <wsdl:output message="unsubscribePackageResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="queryPackages">
      <wsdl:input message="queryPackagesRequest"/>
      <wsdl:output message="queryPackagesResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="UsageControlCounterManagement-Port">
    <wsdl:operation name="subscribeUsageControlCounter">
      <wsdl:input message="subscribeUsageControlCounterRequest"/>
      <wsdl:output message="subscribeUsageControlCounterResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeUsageControlCounter">
      <wsdl:input message="unsubscribeUsageControlCounterRequest"/>
      <wsdl:output message="unsubscribeUsageControlCounterResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUsageControlCounter">
      <wsdl:input message="updateUsageControlCounterRequest"/>
      <wsdl:output message="updateUsageControlCounterResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
    <wsdl:operation name="queryUsageControlCounters">
      <wsdl:input message="queryUsageControlCountersRequest"/>
      <wsdl:output message="queryUsageControlCountersResponse"/>
      <wsdl:fault name="serviceException" message="serviceException"/>
      <wsdl:fault name="policyException" message="policyException"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
    <con:part>
      <con:url>file:\D:\Projects\Telefonica\DirectReCharge\soapUI-NG-Pro\WSDLs\OCS-OpenChargingServices\OCS-10-Services\OCS_types_v1_1.xsd</con:url>
      <con:content><![CDATA[<xsd:schema targetNamespace="http://www.telefonica.com/OCS/To2DE/OCS_types/v1_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.telefonica.com/OCS/To2DE/OCS_types/v1_1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing/">
  <xsd:complexType name="AccOpResultInfoType">
    <xsd:complexContent>
      <xsd:extension base="OpResultInfoType">
        <xsd:sequence>
          <xsd:element name="opCost" type="MonetaryType"/>
          <xsd:element name="subscriberId" type="SubscriberIdType"/>
          <xsd:element name="serviceProviderId" type="xsd:string"/>
          <xsd:element name="balance" type="MonetaryType"/>
          <xsd:element name="promotionalCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="lifeCycleStatus" type="LifeCycleStatusType"/>
          <xsd:element name="tariffPlanId" type="TariffPlanIdType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AccountInfoType">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="serviceProviderId" type="xsd:string"/>
      <xsd:element name="tariffPlanId" type="TariffPlanIdType"/>
      <xsd:element name="imsi" type="IMSIType"/>
      <xsd:element name="iccNumber" type="ICCNumberType"/>
      <xsd:element name="mailableFlag" type="xsd:boolean"/>
      <xsd:element name="lifeCycleStatus" type="LifeCycleStatusType"/>
      <xsd:element name="lifeCycleStatusDate" type="xsd:dateTime"/>
      <xsd:element name="preActivationDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="activationDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="taxCode" type="xsd:string"/>
      <xsd:element name="genericRatingParameter" type="xsd:string" minOccurs="0"/>
      <xsd:element name="sellingMethod" type="SellingMethodType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ApplicationIdType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="AppInfoType">
    <xsd:sequence>
      <xsd:element name="applicationId" type="ApplicationIdType"/>
      <xsd:element name="reference" type="ErReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ControlLogicParameterType">
    <xsd:choice>
      <xsd:element name="canActivateFlag" type="xsd:boolean"/>
      <xsd:element name="canUseExpiredBalanceFlag" type="xsd:boolean"/>
      <xsd:element name="canLeaveNegativeBalanceFlag" type="xsd:boolean"/>
      <xsd:element name="canCancelFlag" type="xsd:boolean"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="CurrencyCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z]{3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ChangedWalletInfoType">
    <xsd:sequence>
      <xsd:element name="walletId" type="WalletIdType"/>
      <xsd:element name="balance" type="MonetaryType"/>
      <xsd:element name="balanceChange" type="MonetaryType"/>
      <xsd:element name="expirationDate" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="DeletionReasonType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="E164NumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1,15}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErReferenceType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorTypeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PERMANENT"/>
      <xsd:enumeration value="TRANSIENT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ICCNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1,19}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IMSIType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1,15}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Ipv4AddressType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="((0|(1[0-9]{0,2})|(2(([0-4][0-9]?)|(5[0¬5]?)|([6-9]?)))|([3-9][0-9]?))\.){3}(0|(1[0-9]{0,2})|(2(([0-4][0-9]?)|(5[0-5]?)|([6¬9]?)))|([3-9][0-9]?))"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Ipv6AddressType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="(([0-9a-fA-F]+:){7}[0-9a-fA-F]+)|(([0-9a¬fA-F]+:)*[0-9a-fA-F]+)?::(([0-9a-fA-F]+:)*[0-9a-fA-F]+)?"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="IpAddressType">
    <xsd:choice>
      <xsd:element name="ipv4Address" type="Ipv4AddressType"></xsd:element>
      <xsd:element name="ipv6Address" type="Ipv6AddressType"></xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="LifeCycleStateType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A"/>
      <xsd:enumeration value="I"/>
      <xsd:enumeration value="L"/>
      <xsd:enumeration value="P"/>
      <xsd:enumeration value="T"/>
      <xsd:enumeration value="W"/>
      <xsd:enumeration value="X"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="LifeCycleStatusType">
    <xsd:sequence>
      <xsd:element name="state" type="LifeCycleStateType"/>
      <xsd:element name="subState" type="LifeCycleSubStateType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="LifeCycleSubStateType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="MonetaryType">
    <xsd:simpleContent>
      <xsd:extension base="UnitValueType">
        <xsd:attribute name="currencyCode" type="CurrencyCodeType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="NetworkCodeType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="OpCodeType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="OpReferenceType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="OpResultInfoType">
    <xsd:sequence>
      <xsd:element name="opReference" type="OpReferenceType"/>
      <xsd:element name="opExecutionDate" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="OpStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EJ"/>
      <xsd:enumeration value="RE"/>
      <xsd:enumeration value="PE"/>
      <xsd:enumeration value="CA"/>
      <xsd:enumeration value="ER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackageIdType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="PackageInfoType">
    <xsd:sequence>
      <xsd:element name="packageId" type="PackageIdType"/>
      <xsd:element name="startDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="validityPeriod" type="xsd:int" minOccurs="0"/>
      <xsd:element name="validityHours" type="xsd:int" minOccurs="0"/>
      <xsd:element name="subscriptionFee" type="MonetaryType"/>
      <xsd:element name="amount" type="UnitValueType" minOccurs="0"/>
      <xsd:element name="amount2" type="UnitValueType" minOccurs="0"/>
      <xsd:element name="numberOfSessions" type="xsd:int" minOccurs="0"/>
      <xsd:element name="renewalInfo" type="PackageRenewalInfoType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PackageModalityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="BD"/>
      <xsd:enumeration value="CR"/>
      <xsd:enumeration value="CS"/>
      <xsd:enumeration value="DT"/>
      <xsd:enumeration value="GE"/>
      <xsd:enumeration value="ME"/>
      <xsd:enumeration value="MI"/>
      <xsd:enumeration value="PH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PackageRenewalInfoType">
    <xsd:sequence>
      <xsd:element name="firstExecutionDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="immediateBonusFlag" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="renewalFees" type="MonetaryType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackageRenewalStatusInfoType">
    <xsd:sequence>
      <xsd:element name="activationDate" type="xsd:dateTime"/>
      <xsd:element name="renewalFee" type="MonetaryType"/>
      <xsd:element name="nextExecutionDate" type="xsd:dateTime"/>
      <xsd:element name="numberOfExecutions" type="xsd:int"/>
      <xsd:element name="isActiveFlag" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PackageStatusInfoType">
    <xsd:sequence>
      <xsd:element name="packageId" type="PackageIdType"/>
      <xsd:element name="packageModality" type="PackageModalityType"/>
      <xsd:element name="startDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="bookingDate" type="xsd:dateTime"/>
      <xsd:element name="status" type="PackageStatusType"/>
      <xsd:element name="lastStatusChangeDate" type="xsd:dateTime"/>
      <xsd:element name="canCancelFlag" type="xsd:boolean"/>
      <xsd:element name="subscriptionFee" type="MonetaryType" minOccurs="0"/>
      <xsd:element name="amount" type="UnitValueType"/>
      <xsd:element name="amount2" type="UnitValueType" minOccurs="0"/>
      <xsd:element name="remainingAmount" type="UnitValueType"/>
      <xsd:element name="numberOfSessions" type="xsd:int" minOccurs="0"/>
      <xsd:element name="remainingNumberOfSessions" type="xsd:int" minOccurs="0"/>
      <xsd:element name="renewalStatusInfo" type="PackageRenewalStatusInfoType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PackageStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A"/>
      <xsd:enumeration value="B"/>
      <xsd:enumeration value="N"/>
      <xsd:enumeration value="V"/>
      <xsd:enumeration value="W"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PolicyExceptionType">
    <xsd:sequence>
      <xsd:element name="errorCode" type="xsd:int"/>
      <xsd:element name="errorType" type="ErrorTypeType" minOccurs="0"/>
      <xsd:element name="text" type="xsd:string"/>
      <xsd:element name="variables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PortabilityOperationType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
      <xsd:enumeration value="2"/>
      <xsd:enumeration value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RechargeTypeType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="RealTimeParamsType">
    <xsd:sequence>
      <xsd:element name="schedulingParams" type="SchedulingParamsType" minOccurs="0"/>
      <xsd:element name="releaseParams" type="ReleaseParamsType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SchedulingParamsType">
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>Priority is used by scheduler to decide the order of execution: higher priority values have a higher execution elegibility.
                    Importance is optional and it is used to fix the order of execution among schedulable objects with the same priority
                    Execution elegibility is not changed except for any other reason other than: (1) an priority inversion avoidance algorithm, (2) if requested by the application.
                    A schedulable object that is executing will continue to execute until it either blocks, or is preempted by a higher priority schedulable object</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="priority" type="xsd:int"/>
      <xsd:element name="importance" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReleaseParamsType">
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>Release is the changing of the state of a schedulable object from blocked-for-release-event to eligible-for-execution. If the state of an SO is blocked-for-release-event when a release event occurs then the state of the SO is changed to eligible-for-execution. Otherwise, a state transition from blocked-for-release-event to eligible-for-execution is queued—this is known as a pending release. When the next transition of the SO into state blocked-for-release-event occurs, and there is a pending release, the state of the SO is immediately changed to eligible-for-execution. (Some actions implicitly clear any pending releases.)

                    Completion is the changing of the state of a schedulable object from executing to blocked-for-release-event. Each completion corresponds to a release. A real-time thread is deemed to complete its most recent release when it terminates.

                    Periodic, sporadic, and aperiodic are adjectives applied to schedulable objects which describe the temporal relationship between consecutive release events.

                    Deadline refers to a time before which a schedulable object expects to complete.
                    
                    The cost of a schedulable object is an estimate of the maximum amount of CPU time that the SO requires between a release and its associated completion
                    
                    A cost overrun occurs when the schedulable object's current CPU consumption becomes greater than, or equal to, its cost.</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="cpuTimeBudget" type="xsd:int" minOccurs="0"/>
      <xsd:element name="deadline" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReferenceDayType">
    <xsd:choice>
      <xsd:element name="dayOfMonth" type="xsd:gDay"/>
      <xsd:element name="currentInterval" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="SellingMethodType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="ServiceExceptionType">
    <xsd:sequence>
      <xsd:element name="errorCode" type="xsd:int"/>
      <xsd:element name="errorType" type="ErrorTypeType" minOccurs="0"/>
      <xsd:element name="text" type="xsd:string"/>
      <xsd:element name="variables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriberIdType">
    <xsd:choice>
      <xsd:element name="e164Number" type="E164NumberType"/>
      <xsd:element name="userName" type="xsd:string"/>
      <xsd:element name="anyURI" type="xsd:anyURI"/>
      <xsd:element name="ipAddress" type="IpAddressType"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="TariffPlanIdType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="TimePeriodType">
    <xsd:sequence>
      <xsd:element name="referenceDay" type="ReferenceDayType" minOccurs="0"/>
      <xsd:element name="duration" type="xsd:duration"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="TribeIdType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="TribeInfoType">
    <xsd:sequence>
      <xsd:element name="tribeId" type="TribeIdType"/>
      <xsd:element name="tribeDate" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UnitValueType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="exponent" type="xsd:int"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="UsageControlCounterIdType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="UsageControlCounterInfoType">
    <xsd:sequence>
      <xsd:element name="uccId" type="UsageControlCounterIdType"/>
      <xsd:element name="thresholdSetId" type="xsd:int" minOccurs="0"/>
      <xsd:element name="thresholdActionsSetId" type="xsd:string" minOccurs="0"/>
      <xsd:element name="startDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="usageRuleType" type="UsageRuleTypeType" minOccurs="0"/>
      <xsd:element name="usageRuleSetId" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UsageControlCounterStatusInfoType">
    <xsd:sequence>
      <xsd:element name="uccId" type="UsageControlCounterIdType"/>
      <xsd:element name="thresholdSetId" type="xsd:int" minOccurs="0"/>
      <xsd:element name="thresholdActionsSetId" type="xsd:string" minOccurs="0"/>
      <xsd:element name="packageIdList" type="PackageIdType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="value" type="UnitValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="UsageRuleTypeType">
    <xsd:restriction base="xsd:int">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
      <xsd:enumeration value="2"/>
      <xsd:enumeration value="3"/>
      <xsd:enumeration value="4"/>
      <xsd:enumeration value="5"/>
      <xsd:enumeration value="6"/>
      <xsd:enumeration value="7"/>
      <xsd:enumeration value="8"/>
      <xsd:enumeration value="9"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="WalletIdType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="WalletInfoType">
    <xsd:sequence>
      <xsd:element name="walletId" type="WalletIdType"/>
      <xsd:element name="balance" type="MonetaryType"/>
      <xsd:element name="expirationDate" type="xsd:dateTime"/>
      <xsd:element name="status" type="WalletStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="WalletStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AC"/>
      <xsd:enumeration value="CA"/>
      <xsd:enumeration value="SU"/>
      <xsd:enumeration value="S0"/>
      <xsd:enumeration value="PA"/>
      <xsd:enumeration value="ca"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Operations CommonManagement interface-->
  <xsd:element name="queryOperationResultRequest" type="QueryOperationResultRequest"/>
  <xsd:complexType name="QueryOperationResultRequest">
    <xsd:sequence>
      <xsd:element name="opReference" type="OpReferenceType"/>
      <xsd:element name="currencyCode" type="CurrencyCodeType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryOperationResultResponse" type="QueryOperationResultResponse"/>
  <xsd:complexType name="QueryOperationResultResponse">
    <xsd:sequence>
      <xsd:element name="opCode" type="OpCodeType"/>
      <xsd:element name="opStatus" type="OpStatusType"/>
      <xsd:element name="executionDate" type="xsd:dateTime"/>
      <xsd:element name="error" type="ServiceExceptionType" minOccurs="0"/>
      <xsd:element name="userCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="subscriberId" type="SubscriberIdType" minOccurs="0"/>
      <xsd:element name="opCost" type="MonetaryType" minOccurs="0"/>
      <xsd:element name="balance" type="MonetaryType" minOccurs="0"/>
      <xsd:element name="promotionalCode" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Operations AccountManagement interface-->
  <xsd:element name="createAccountRequest" type="CreateAccountRequest"/>
  <xsd:complexType name="CreateAccountRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="accountProfileId" type="xsd:string"/>
      <xsd:element name="serviceProviderId" type="xsd:string"/>
      <xsd:element name="imsi" type="IMSIType"/>
      <xsd:element name="iccNumber" type="ICCNumberType"/>
      <xsd:element name="mailableFlag" type="xsd:boolean"/>
      <xsd:element name="initialBalance" type="MonetaryType" minOccurs="0"/>
      <xsd:element name="customerCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="taxCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="rin" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ocsNodeId" type="xsd:string" minOccurs="0"/>
      <xsd:element name="genericRatingParameter" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createAccountResponse" type="CreateAccountResponse"/>
  <xsd:complexType name="CreateAccountResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteAccountRequest" type="DeleteAccountRequest"/>
  <xsd:complexType name="DeleteAccountRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="reason" type="DeletionReasonType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteAccountResponse" type="DeleteAccountResponse"/>
  <xsd:complexType name="DeleteAccountResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="changeAccountRequest" type="ChangeAccountRequest"/>
  <xsd:complexType name="ChangeAccountRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="newIMSI" type="IMSIType"/>
      <xsd:element name="newICCNumber" type="ICCNumberType"/>
      <xsd:element name="newMailableFlag" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="newGenericRatingParameter" type="xsd:string" minOccurs="0"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
      <xsd:element name="reason" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="changeAccountResponse" type="ChangeAccountResponse"/>
  <xsd:complexType name="ChangeAccountResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="changeSubscriberIdRequest" type="ChangeSubscriberIdRequest"/>
  <xsd:complexType name="ChangeSubscriberIdRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="newSubscriberId" type="SubscriberIdType"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="changeSubscriberIdResponse" type="ChangeSubscriberIdResponse"/>
  <xsd:complexType name="ChangeSubscriberIdResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="changeTariffPlanIdRequest" type="ChangeTariffPlanIdRequest"/>
  <xsd:complexType name="ChangeTariffPlanIdRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="newTariffPlanId" type="TariffPlanIdType"/>
      <xsd:element name="reason" type="xsd:string"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="changeTariffPlanIdResponse" type="ChangeTariffPlanIdResponse"/>
  <xsd:complexType name="ChangeTariffPlanIdResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryAccountRequest" type="QueryAccountRequest"/>
  <xsd:complexType name="QueryAccountRequest">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="currencyCode" type="CurrencyCodeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryAccountResponse" type="QueryAccountResponse"/>
  <xsd:complexType name="QueryAccountResponse">
    <xsd:sequence>
      <xsd:element name="accountInfo" type="AccountInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryCustomerRequest" type="QueryCustomerRequest"/>
  <xsd:complexType name="QueryCustomerRequest">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="subscribedAfterDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="subscribedBeforeDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="currencyCode" type="CurrencyCodeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryCustomerResponse" type="QueryCustomerResponse"/>
  <xsd:complexType name="QueryCustomerResponse">
    <xsd:sequence>
      <xsd:element name="accountInfo" type="AccountInfoType"/>
      <xsd:element name="walletInfoList" type="WalletInfoType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="packageStatusInfoList" type="PackageStatusInfoType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="uccStatusInfoList" type="UsageControlCounterStatusInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="notifyPortabilityRequest" type="NotifyPortabilityRequest"/>
  <xsd:complexType name="NotifyPortabilityRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="operationCode" type="PortabilityOperationType"/>
      <xsd:element name="destinationNetworkCode" type="NetworkCodeType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="notifyPortabilityResponse" type="NotifyPortabilityResponse"/>
  <xsd:complexType name="NotifyPortabilityResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="OpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addTribeMemberRequest" type="AddTribeMemberRequest"/>
  <xsd:complexType name="AddTribeMemberRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="tribeId" type="TribeIdType"/>
      <xsd:element name="memberId" type="SubscriberIdType"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addTribeMemberResponse" type="AddTribeMemberResponse"/>
  <xsd:complexType name="AddTribeMemberResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteTribeMemberRequest" type="DeleteTribeMemberRequest"/>
  <xsd:complexType name="DeleteTribeMemberRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="tribeId" type="TribeIdType"/>
      <xsd:element name="memberId" type="SubscriberIdType"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteTribeMemberResponse" type="DeleteTribeMemberResponse"/>
  <xsd:complexType name="DeleteTribeMemberResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryUserTribesRequest" type="QueryUserTribesRequest"/>
  <xsd:complexType name="QueryUserTribesRequest">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryUserTribesResponse" type="QueryUserTribesResponse"/>
  <xsd:complexType name="QueryUserTribesResponse">
    <xsd:sequence>
      <xsd:element name="tribeInfoList" type="TribeInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="activateAccountRequest" type="ActivateAccountRequest"/>
  <xsd:complexType name="ActivateAccountRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="activateAccountResponse" type="ActivateAccountResponse"/>
  <xsd:complexType name="ActivateAccountResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Operations BalanceManagement interface-->
  <xsd:element name="rechargeAccountRequest" type="RechargeAccountRequest"/>
  <xsd:complexType name="RechargeAccountRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="amount" type="MonetaryType"/>
      <xsd:element name="rechargeType" type="RechargeTypeType"/>
      <xsd:element name="validityPeriod" type="xsd:int" minOccurs="0"/>
      <xsd:element name="promotionalCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="multipleRechargeFlag" type="xsd:boolean" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="rechargeAccountResponse" type="RechargeAccountResponse"/>
  <xsd:complexType name="RechargeAccountResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
      <xsd:element name="changedWalletInfoList" type="ChangedWalletInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="incrementBalanceRequest" type="IncrementBalanceRequest"/>
  <xsd:complexType name="IncrementBalanceRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="amount" type="MonetaryType"/>
      <xsd:element name="walletId" type="WalletIdType"/>
      <xsd:element name="validityPeriod" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="incrementBalanceResponse" type="IncrementBalanceResponse"/>
  <xsd:complexType name="IncrementBalanceResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
      <xsd:element name="changedWalletInfo" type="ChangedWalletInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deductBalanceRequest" type="DeductBalanceRequest"/>
  <xsd:complexType name="DeductBalanceRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="amount" type="MonetaryType"/>
      <xsd:element name="walletId" type="WalletIdType"/>
      <xsd:element name="allOrNothingFlag" type="xsd:boolean"/>
      <xsd:element name="validityPeriod" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deductBalanceResponse" type="DeductBalanceResponse"/>
  <xsd:complexType name="DeductBalanceResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
      <xsd:element name="changedWalletInfo" type="ChangedWalletInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryBalancesRequest" type="QueryBalancesRequest"/>
  <xsd:complexType name="QueryBalancesRequest">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="currencyCode" type="CurrencyCodeType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryBalancesResponse" type="QueryBalancesResponse"/>
  <xsd:complexType name="QueryBalancesResponse">
    <xsd:sequence>
      <xsd:element name="walletInfoList" type="WalletInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Operations PackageManagement interface-->
  <xsd:element name="subscribePackageRequest" type="SubscribePackageRequest"/>
  <xsd:complexType name="SubscribePackageRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="packageInfo" type="PackageInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="subscribePackageResponse" type="SubscribePackageResponse"/>
  <xsd:complexType name="SubscribePackageResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
      <xsd:element name="packageId" type="PackageIdType"/>
      <xsd:element name="amount" type="UnitValueType" minOccurs="0"/>
      <xsd:element name="startDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="endDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="cyclicPackageFlag" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="firstExecutionDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="timePeriod" type="TimePeriodType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="unsubscribePackageRequest" type="UnsubscribePackageRequest"/>
  <xsd:complexType name="UnsubscribePackageRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="packageId" type="PackageIdType"/>
      <xsd:element name="deleteNowFlag" type="xsd:boolean"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="unsubscribePackageResponse" type="UnsubscribePackageResponse"/>
  <xsd:complexType name="UnsubscribePackageResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryPackagesRequest" type="QueryPackagesRequest"/>
  <xsd:complexType name="QueryPackagesRequest">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="queryStartDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="queryEndDate" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="currencyCode" type="CurrencyCodeType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryPackagesResponse" type="QueryPackagesResponse"/>
  <xsd:complexType name="QueryPackagesResponse">
    <xsd:sequence>
      <xsd:element name="packageStatusInfoList" type="PackageStatusInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Operations UsageControlCounterManagement interface-->
  <xsd:element name="subscribeUsageControlCounterRequest" type="SubscribeUsageControlCounterRequest"/>
  <xsd:complexType name="SubscribeUsageControlCounterRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="uccInfo" type="UsageControlCounterInfoType"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="subscribeUsageControlCounterResponse" type="SubscribeUsageControlCounterResponse"/>
  <xsd:complexType name="SubscribeUsageControlCounterResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="unsubscribeUsageControlCounterRequest" type="UnsubscribeUsageControlCounterRequest"/>
  <xsd:complexType name="UnsubscribeUsageControlCounterRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="uccId" type="UsageControlCounterIdType"/>
      <xsd:element name="fee" type="MonetaryType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="unsubscribeUsageControlCounterResponse" type="UnsubscribeUsageControlCounterResponse"/>
  <xsd:complexType name="UnsubscribeUsageControlCounterResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="updateUsageControlCounterRequest" type="updateUsageControlCounterRequest"/>
  <xsd:complexType name="updateUsageControlCounterRequest">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="uccId" type="UsageControlCounterIdType"/>
      <xsd:element name="valueDelta" type="UnitValueType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="updateUsageControlCounterResponse" type="updateUsageControlCounterResponse"/>
  <xsd:complexType name="updateUsageControlCounterResponse">
    <xsd:sequence>
      <xsd:element name="appInfo" type="AppInfoType"/>
      <xsd:element name="result" type="AccOpResultInfoType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryUsageControlCountersRequest" type="QueryUsageControlCountersRequest"/>
  <xsd:complexType name="QueryUsageControlCountersRequest">
    <xsd:sequence>
      <xsd:element name="subscriberId" type="SubscriberIdType"/>
      <xsd:element name="uccId" type="UsageControlCounterIdType" minOccurs="0"/>
      <xsd:element name="currencyCode" type="CurrencyCodeType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="queryUsageControlCountersResponse" type="QueryUsageControlCountersResponse"/>
  <xsd:complexType name="QueryUsageControlCountersResponse">
    <xsd:sequence>
      <xsd:element name="uccStatusInfoList" type="UsageControlCounterStatusInfoType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="balance" type="MonetaryType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Faults-->
  <xsd:element name="policyException" type="PolicyExceptionType"/>
  <xsd:element name="serviceException" type="ServiceExceptionType"/>
</xsd:schema>]]></con:content>
      <con:type>http://www.w3.org/2001/XMLSchema</con:type>
    </con:part>
    <con:part>
      <con:url>http://schemas.xmlsoap.org/ws/2004/08/addressing/</con:url>
      <con:content><![CDATA[<!--Copyright © 2002-2004 BEA Systems Inc., International Business Machines Corporation, 
Microsoft Corporation, Inc, SAP AG, and Sun Microsystems, Inc.. All rights reserved. 

Permission to copy, display, perform, modify and distribute the WS-Addressing Specification, 
and to authorize others to do the foregoing, in any medium without fee or royalty is hereby
granted for the purpose of developing and evaluating the WS-Addressing Specification.

BEA, IBM, Microsoft, SAP AG, and Sun Microsystems (collectively, the "Authors") each agree 
to grant a license to third parties, under royalty-free  and otherwise reasonable, 
non-discriminatory terms and conditions, to their respective essential patent claims that
they deem necessary to implement the WS-Addressing Specification.

DISCLAIMERS:

THE WS-Addressing Specification IS PROVIDED "AS IS", AND THE AUTHORS MAKE NO REPRESENTATIONS
OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF 
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE 
CONTENTS OF THE WS-Addressing Specification IS SUITABLE FOR ANY PURPOSE; NOR THAT THE 
IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, 
TRADEMARKS OR OTHER RIGHTS.

THE AUTHORS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL 
DAMAGES ARISING OUT OF ANY USE OF THE WS-Addressing Specification OR THE PERFORMANCE OR 
IMPLEMENTATION OF THE CONTENTS THEREOF.

You may remove these disclaimers from your modified versions of the WS-Addressing 
Specification provided that you effectively disclaim all warranties and liabilities on behalf 
of all copyright holders in the copies of any such modified versions you distribute.

The name and trademarks of the Authors may NOT be used in any manner, including advertising 
or publicity pertaining to the WS-Addressing Specification or its contents without specific, 
written prior permission. Title to copyright in the WS-Addressing Specification will at all 
times remain with the Authors.

No other rights are granted by implication, estoppel or otherwise.-->
<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" elementFormDefault="qualified" blockDefault="#all" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
  <!--//////////////////// WS-Addressing ////////////////////-->
  <!--Endpoint reference-->
  <xs:element name="EndpointReference" type="wsa:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="wsa:AttributedURI"/>
      <xs:element name="ReferenceProperties" type="wsa:ReferencePropertiesType" minOccurs="0"/>
      <xs:element name="ReferenceParameters" type="wsa:ReferenceParametersType" minOccurs="0"/>
      <xs:element name="PortType" type="wsa:AttributedQName" minOccurs="0"/>
      <xs:element name="ServiceName" type="wsa:ServiceNameType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>If "Policy" elements from namespace "http://schemas.xmlsoap.org/ws/2002/12/policy#policy" are used, they must appear first (before any extensibility elements).</xs:documentation>
        </xs:annotation>
      </xs:any>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="ReferencePropertiesType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceParametersType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:attribute name="PortName" type="xs:NCName"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Message information header blocks-->
  <xs:element name="MessageID" type="wsa:AttributedURI"/>
  <xs:element name="RelatesTo" type="wsa:Relationship"/>
  <xs:element name="To" type="wsa:AttributedURI"/>
  <xs:element name="Action" type="wsa:AttributedURI"/>
  <xs:element name="From" type="wsa:EndpointReferenceType"/>
  <xs:element name="ReplyTo" type="wsa:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="wsa:EndpointReferenceType"/>
  <xs:complexType name="Relationship">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute name="RelationshipType" type="xs:QName" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeValues">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="wsa:Reply"/>
    </xs:restriction>
  </xs:simpleType>
  <!--June 19, 2007: The ReplyAfter element is deprecated. The name of this element does not match the
    name (RetryAfter) used in the specification (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).-->
  <xs:element name="ReplyAfter" type="wsa:ReplyAfterType"/>
  <xs:complexType name="ReplyAfterType">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:anyAttribute namespace="##other"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--June 19, 2007: The RetryAfter element has been added to be consistent with the specification
    (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).-->
  <xs:element name="RetryAfter" type="wsa:RetryAfterType"/>
  <xs:complexType name="RetryAfterType">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:anyAttribute namespace="##other"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="FaultSubcodeValues">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="wsa:InvalidMessageInformationHeader"/>
      <xs:enumeration value="wsa:MessageInformationHeaderRequired"/>
      <xs:enumeration value="wsa:DestinationUnreachable"/>
      <xs:enumeration value="wsa:ActionNotSupported"/>
      <xs:enumeration value="wsa:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="Action" type="xs:anyURI"/>
  <!--Common declarations and definitions-->
  <xs:complexType name="AttributedQName">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="AttributedURI">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>]]></con:content>
      <con:type>http://www.w3.org/2001/XMLSchema</con:type>
    </con:part>
    <con:part>
      <con:url>http://schemas.xmlsoap.org/ws/2002/04/secext/secext.xsd</con:url>
      <con:content><![CDATA[<!--Legal Disclaimer

The presentation, distribution or other dissemination of the information 
contained in this specification is not a license, either expressly or impliedly, 
to any intellectual property owned or controlled by IBM or Microsoft and\or any other 
third party.  IBM and Microsoft and\or any other third party may have patents, patent 
applications, trademarks, copyrights, or other intellectual property rights 
covering subject matter in this document.  The furnishing of this document 
does not give you any license to IBM's and Microsoft's or any other third party's patents, 
trademarks, copyrights, or other intellectual property.

This specification and the information contained herein is provided on an "AS IS"
 basis and to the maximum extent permitted by applicable law, IBM and Microsoft provides 
the document AS IS AND WITH ALL FAULTS, and hereby disclaims all other warranties 
and conditions, either express, implied or statutory, including, but not limited 
to, any (if any) implied warranties, duties or conditions of merchantability, of 
fitness for a particular purpose, of accuracy or completeness of responses, of 
results, of workmanlike effort, of lack of viruses, and of lack of negligence, 
all with regard to the document. ALSO, THERE IS NO WARRANTY OR CONDITION OF 
TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION OR 
NON-INFRINGEMENT OF ANY INTELLECTUAL PROPERTY RIGHTS WITH REGARD TO THE DOCUMENT.

IN NO EVENT WILL IBM or MICROSOFT BE LIABLE TO ANY OTHER PARTY FOR THE COST OF PROCURING 
SUBSTITUTE GOODS OR SERVICES, LOST PROFITS, LOSS OF USE, LOSS OF DATA, OR ANY 
INCIDENTAL, CONSEQUENTIAL, DIRECT, INDIRECT, OR SPECIAL DAMAGES WHETHER UNDER 
CONTRACT, TORT, WARRANTY, OR OTHERWISE, ARISING IN ANY WAY OUT OF THIS OR ANY 
OTHER AGREEMENT RELATING TO THIS DOCUMENT, WHETHER OR NOT SUCH PARTY HAD ADVANCE 
NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.

Copyright Notice

Copyright 2001, 2002 IBM Corporation and Microsoft Corporation. All rights reserved.-->
<xsd:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/04/secext" elementFormDefault="qualified" attributeFormDefault="unqualified" version="0.2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/04/secext" xmlns="http://schemas.xmlsoap.org/ws/2002/04/secext" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xsd:element name="Security">
    <xsd:annotation>
      <xsd:documentation>This element defines header block to use for security-relevant data directed at a specific SOAP actor.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>The use of "any" is to allow extensibility and different forms of security data.</xsd:documentation>
          </xsd:annotation>
        </xsd:any>
      </xsd:sequence>
      <xsd:anyAttribute processContents="lax"/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UsernameToken">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Username"/>
        <xsd:element ref="Password" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attribute name="Id" type="xsd:ID"/>
      <xsd:anyAttribute namespace="##other"/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Username">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:anyAttribute namespace="##other"/>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Password">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type" type="xsd:QName"/>
          <xsd:anyAttribute namespace="##other"/>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BinarySecurityToken">
    <xsd:annotation>
      <xsd:documentation>A security token that is encoded in binary</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Id" type="xsd:ID"/>
          <xsd:attribute name="ValueType" type="xsd:QName"/>
          <xsd:attribute name="EncodingType" type="xsd:QName"/>
          <xsd:anyAttribute namespace="##other" processContents="strict"/>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SecurityTokenReference">
    <xsd:annotation>
      <xsd:documentation>This element is used reference a security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="Reference"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:choice>
      <xsd:attribute name="Id" type="xsd:ID"/>
      <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Reference">
    <xsd:complexType>
      <xsd:attribute name="URI" type="xsd:anyURI"/>
    </xsd:complexType>
  </xsd:element>
  <xsd:simpleType name="PasswordTypeEnum">
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsse:PasswordText"/>
      <xsd:enumeration value="wsse:PasswordDigest"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ValueTypeEnum">
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsse:X509v3"/>
      <xsd:enumeration value="wsse:Kerberosv5TGT"/>
      <xsd:enumeration value="wsse:Kerberosv5ST"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EncodingTypeEnum">
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsse:Base64Binary"/>
      <xsd:enumeration value="wsse:HexBinary"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FaultcodeEnum">
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsse:UnsupportedSecurityToken"/>
      <xsd:enumeration value="wsse:UnsupportedAlgorithm"/>
      <xsd:enumeration value="wsse:InvalidSecurity"/>
      <xsd:enumeration value="wsse:InvalidSecurityToken"/>
      <xsd:enumeration value="wsse:FailedAuthentication"/>
      <xsd:enumeration value="wsse:FailedCheck"/>
      <xsd:enumeration value="wsse:SecurityTokenUnavailable"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content>
      <con:type>http://www.w3.org/2001/XMLSchema</con:type>
    </con:part>
    <con:part>
      <con:url>http://www.w3.org/2001/xml.xsd</con:url>
      <con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content>
      <con:type>http://www.w3.org/2001/XMLSchema</con:type>
    </con:part>
    <con:part>
      <con:url>http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd</con:url>
      <con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any processContents="lax" namespace="##other"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content>
      <con:type>http://www.w3.org/2001/XMLSchema</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://localhost:8086/OCS10/CommonService</con:endpoint>
    <con:endpoint>https://10.1.38.142:49154/OCS/CommonService</con:endpoint>
  </con:endpoints>
  <con:environmentSpec>
    <con:entry environmentId="e385afea-1153-4d90-83b9-3b49a724f0ea">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:interface>
